{"version":3,"sources":["map/jplist/services/panel.js"],"names":[],"mappings":"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","file":"map/jplist/services/panel.js","sourcesContent":["/*global jQuery:false */\n(function($){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Panel Class\n\t* @type {Object} \n\t* @class Services for the panel object\n\t* @memberOf jQuery.fn.jplist.services\n\t*/\n\tjQuery.fn.jplist.services.Panel = {};\n\t\n\t/**\n\t* Find controls with the same name and action\n\t* @param {Array.<jQuery.fn.jplist.view.PanelControl>} controls\n\t* @param {?string} name\n\t* @param {?string} action\n\t* @return {Array.<jQuery.fn.jplist.view.PanelControl>}\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.findControlsByNameAction = function(controls, name, action){\n\t\t\n\t\tvar sameControls = []\n\t\t\t,control;\n\t\t\n\t\tfor(var i=0; i<controls.length; i++){\n\t\t\n\t\t\t//get control type\n\t\t\tcontrol = controls[i];\n\t\t\t\n\t\t\tif(control.name === name && control.action === action){\n\t\t\t\tsameControls.push(control);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn sameControls;\n\t};\n\n\t/**\n\t* Find controls with the same name\n\t* @param {Array.<jQuery.fn.jplist.view.PanelControl>} controls\n\t* @param {?string} name\n\t* @return {Array.<jQuery.fn.jplist.view.PanelControl>}\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.findControlsByName = function(controls, name){\n\t\t\n\t\tvar sameControls = []\n\t\t\t,control;\n\t\t\n\t\tfor(var i=0; i<controls.length; i++){\n\t\t\n\t\t\t//get control type\n\t\t\tcontrol = controls[i];\n\t\t\t\n\t\t\tif(control.name === name){\n\t\t\t\tsameControls.push(control);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn sameControls;\n\t};\n\t\n\t/**\n\t* merge statuses with the same name and different types\n\t* @param {Array.<jQuery.fn.jplist.models.Status>} oldStatuses - statuses to merge\n\t* @return {Array.<jQuery.fn.jplist.models.Status>}\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.mergeIdenticalStatuses = function(oldStatuses){\n\t\n\t\tvar statuses = []\n\t\t\t,status\n\t\t\t,index\n\t\t\t,same_name_status\n\t\t\t,temp;\n\t\t\n\t\tfor(var i=0; i<oldStatuses.length; i++){\n\t\t\t\t\t\t\t\t\n\t\t\t//get control status\n\t\t\tstatus = oldStatuses[i];\n\t\t\t\n\t\t\t//add status to the list\n\t\t\tif(status){\n\t\t\t\n\t\t\t\t//search for the statuses with the same name\n\t\t\t\tindex = jQuery.fn.jplist.services.Status.findStatusByField(status, 'name', statuses);\n\t\t\t\t\n\t\t\t\tif(index !== -1){\n\t\t\t\t\t\n\t\t\t\t\t//there is statuses with the same name\n\t\t\t\t\tsame_name_status = statuses[index];\n\t\t\t\t\t\n\t\t\t\t\tif(same_name_status.action === status.action){\n\t\t\t\t\t\t\n\t\t\t\t\t\t//same name and different stypes: dropdown pager + placeholder pages -> merge statuses\n\t\t\t\t\t\tif(same_name_status.type !== status.type){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttemp = $.extend(true, {}, status, statuses[index]);\n\t\t\t\t\t\t\tstatuses[index] = temp;\n\t\t\t\t\t\t\t//$.extend(true, statuses[index], status);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t//no statuses with the same name ->add to statuses list\n\t\t\t\t\tstatuses.push(status);\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn statuses;\n\t};\n\t\n\t/**\n\t* Merge current statuses list with the given status: if status with the same name and action is found in the list, merge them\n\t* @param {Array.<jQuery.fn.jplist.models.Status>} statuses\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @return {Array.<jQuery.fn.jplist.models.Status>}\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.mergeWithStatus = function(statuses, status){\n\t\n\t\tvar cStatus;\n\t\t\n\t\tfor(var i=0; i<statuses.length; i++){\n\t\t\n\t\t\t//get current status\n\t\t\tcStatus = statuses[i];\n\t\t\t\n\t\t\tif(cStatus.name === status.name && cStatus.action === status.action){\n\t\t\t \n\t\t\t\t//merge current status with the given one\n\t\t\t\t$.extend(true, cStatus, status);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn statuses;\n\t};\n\t\n\t/**\n\t* Get current panel statuses (for ask event)\n\t* @param {Array.<jQuery.fn.jplist.view.PanelControl>} controls\n\t* @param {boolean} isDefault - if true, get default (initial) panel status; else - get current panel status\n\t* @return {Array.<jQuery.fn.jplist.models.Status>}\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.getStatuses = function(controls, isDefault){\n\t\n\t\tvar statuses = []\n\t\t\t,control\n\t\t\t,status\n\t\t\t,index\n\t\t\t,same_name_status;\n\t\t\n\t\tfor(var i=0; i<controls.length; i++){\n\t\t\n\t\t\t//get control type\n\t\t\tcontrol = controls[i];\n\t\t\t\n\t\t\t//get control status\n\t\t\tstatus = control.getStatus(isDefault);\n\t\t\t\n\t\t\t//add status to the list\n\t\t\tif(status){\n\t\t\t\n\t\t\t\t//search for the statuses with the same name\n\t\t\t\tindex = jQuery.fn.jplist.services.Status.findStatusByField(status, 'name', statuses);\n\t\t\t\t\n\t\t\t\tif(index != -1){\n\t\t\t\t\t\n\t\t\t\t\t//there is statuses with the same name\n\t\t\t\t\tsame_name_status = statuses[index];\n\t\t\t\t\t\n\t\t\t\t\tif(same_name_status.action == status.action){\n\t\t\t\t\t\t\n\t\t\t\t\t\t//same name and different stypes: dropdown pager + placeholder pages -> merge statuses\n\t\t\t\t\t\tif(same_name_status.type != status.type){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$.extend(true, statuses[index], status);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t//no statuses with the same name ->add to statuses list\n\t\t\t\t\tstatuses.push(status);\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn statuses;\n\t};\n\t\t\t\n\t/**\n\t* Set current statuses (for answer event)\n\t* @param {Array.<jQuery.fn.jplist.view.PanelControl>} controls\n\t* @param {Array.<jQuery.fn.jplist.models.Status>} statuses\n\t* @param {boolean} isCookie - are statuses restored from cookies\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.setStatuses = function(controls, statuses, isCookie){\n\t\t\n\t\tvar status\n\t\t\t,sameControls;\n\t\t\n\t\tfor(var i=0; i<statuses.length; i++){\n\t\t\n\t\t\t//get status\n\t\t\tstatus = statuses[i];\n\t\t\t\n\t\t\t//get controls group (with the status.name and status.action)\n\t\t\tsameControls = jQuery.fn.jplist.services.Panel.findControlsByNameAction(controls, status.name, status.action);\n\t\t\t\n\t\t\tfor(var k=0; k<sameControls.length; k++){\n\t\t\t\n\t\t\t\t//set control status\n\t\t\t\tsameControls[k].setStatus(status, isCookie);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t* Get panel paths\n\t* @param {Array.<jQuery.fn.jplist.view.PanelControl>} controls\n\t* @return {Array.<jQuery.fn.jplist.models.Path>}\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.getPaths = function(controls){\n\t\n\t\tvar control\n\t\t\t,paths\n\t\t\t,path\n\t\t\t,generalPathsList = [];\n\t\t\n\t\tfor(var i=0; i<controls.length; i++){\n\t\t\n\t\t\t//get control type\n\t\t\tcontrol = controls[i];\n\t\t\t\n\t\t\t//get control type paths\n\t\t\tpaths = control.getPaths();\n\t\t\t\n\t\t\tfor(var k=0; k<paths.length; k++){\n\t\t\t\n\t\t\t\t//get path\n\t\t\t\tpath = paths[k];\n\t\t\t\t\n\t\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, generalPathsList)){\n\t\t\t\t\n\t\t\t\t\t//add path to the list\n\t\t\t\t\tgeneralPathsList.push(path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn generalPathsList;\n\t};\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}