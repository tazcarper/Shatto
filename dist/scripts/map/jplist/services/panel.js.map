{"version":3,"sources":["map/jplist/services/panel.js"],"names":[],"mappings":"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","file":"map/jplist/services/panel.js","sourcesContent":["/*global jQuery:false */\n(function($){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Panel Class\n\t* @type {Object} \n\t* @class Services for the panel object\n\t* @memberOf jQuery.fn.jplist.services\n\t*/\n\tjQuery.fn.jplist.services.Panel = {};\n\t\n\t/**\n\t* Find controls with the same name and action\n\t* @param {Array.<jQuery.fn.jplist.view.PanelControl>} controls\n\t* @param {?string} name\n\t* @param {?string} action\n\t* @return {Array.<jQuery.fn.jplist.view.PanelControl>}\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.findControlsByNameAction = function(controls, name, action){\n\t\t\n\t\tvar sameControls = []\n\t\t\t,control;\n\t\t\n\t\tfor(var i=0; i<controls.length; i++){\n\t\t\n\t\t\t//get control type\n\t\t\tcontrol = controls[i];\n\t\t\t\n\t\t\tif(control.name === name && control.action === action){\n\t\t\t\tsameControls.push(control);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn sameControls;\n\t};\n\n\t/**\n\t* Find controls with the same name\n\t* @param {Array.<jQuery.fn.jplist.view.PanelControl>} controls\n\t* @param {?string} name\n\t* @return {Array.<jQuery.fn.jplist.view.PanelControl>}\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.findControlsByName = function(controls, name){\n\t\t\n\t\tvar sameControls = []\n\t\t\t,control;\n\t\t\n\t\tfor(var i=0; i<controls.length; i++){\n\t\t\n\t\t\t//get control type\n\t\t\tcontrol = controls[i];\n\t\t\t\n\t\t\tif(control.name === name){\n\t\t\t\tsameControls.push(control);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn sameControls;\n\t};\n\t\n\t/**\n\t* merge statuses with the same name and different types\n\t* @param {Array.<jQuery.fn.jplist.models.Status>} oldStatuses - statuses to merge\n\t* @return {Array.<jQuery.fn.jplist.models.Status>}\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.mergeIdenticalStatuses = function(oldStatuses){\n\t\n\t\tvar statuses = []\n\t\t\t,status\n\t\t\t,index\n\t\t\t,same_name_status\n\t\t\t,temp;\n\t\t\n\t\tfor(var i=0; i<oldStatuses.length; i++){\n\t\t\t\t\t\t\t\t\n\t\t\t//get control status\n\t\t\tstatus = oldStatuses[i];\n\t\t\t\n\t\t\t//add status to the list\n\t\t\tif(status){\n\t\t\t\n\t\t\t\t//search for the statuses with the same name\n\t\t\t\tindex = jQuery.fn.jplist.services.Status.findStatusByField(status, 'name', statuses);\n\t\t\t\t\n\t\t\t\tif(index !== -1){\n\t\t\t\t\t\n\t\t\t\t\t//there is statuses with the same name\n\t\t\t\t\tsame_name_status = statuses[index];\n\t\t\t\t\t\n\t\t\t\t\tif(same_name_status.action === status.action){\n\t\t\t\t\t\t\n\t\t\t\t\t\t//same name and different stypes: dropdown pager + placeholder pages -> merge statuses\n\t\t\t\t\t\tif(same_name_status.type !== status.type){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttemp = $.extend(true, {}, status, statuses[index]);\n\t\t\t\t\t\t\tstatuses[index] = temp;\n\t\t\t\t\t\t\t//$.extend(true, statuses[index], status);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t//no statuses with the same name ->add to statuses list\n\t\t\t\t\tstatuses.push(status);\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn statuses;\n\t};\n\t\n\t/**\n\t* Merge current statuses list with the given status: if status with the same name and action is found in the list, merge them\n\t* @param {Array.<jQuery.fn.jplist.models.Status>} statuses\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @return {Array.<jQuery.fn.jplist.models.Status>}\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.mergeWithStatus = function(statuses, status){\n\t\n\t\tvar cStatus;\n\t\t\n\t\tfor(var i=0; i<statuses.length; i++){\n\t\t\n\t\t\t//get current status\n\t\t\tcStatus = statuses[i];\n\t\t\t\n\t\t\tif(cStatus.name === status.name && cStatus.action === status.action){\n\t\t\t \n\t\t\t\t//merge current status with the given one\n\t\t\t\t$.extend(true, cStatus, status);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn statuses;\n\t};\n\t\n\t/**\n\t* Get current panel statuses (for ask event)\n\t* @param {Array.<jQuery.fn.jplist.view.PanelControl>} controls\n\t* @param {boolean} isDefault - if true, get default (initial) panel status; else - get current panel status\n\t* @return {Array.<jQuery.fn.jplist.models.Status>}\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.getStatuses = function(controls, isDefault){\n\t\n\t\tvar statuses = []\n\t\t\t,control\n\t\t\t,status\n\t\t\t,index\n\t\t\t,same_name_status;\n\t\t\n\t\tfor(var i=0; i<controls.length; i++){\n\t\t\n\t\t\t//get control type\n\t\t\tcontrol = controls[i];\n\t\t\t\n\t\t\t//get control status\n\t\t\tstatus = control.getStatus(isDefault);\n\t\t\t\n\t\t\t//add status to the list\n\t\t\tif(status){\n\t\t\t\n\t\t\t\t//search for the statuses with the same name\n\t\t\t\tindex = jQuery.fn.jplist.services.Status.findStatusByField(status, 'name', statuses);\n\t\t\t\t\n\t\t\t\tif(index != -1){\n\t\t\t\t\t\n\t\t\t\t\t//there is statuses with the same name\n\t\t\t\t\tsame_name_status = statuses[index];\n\t\t\t\t\t\n\t\t\t\t\tif(same_name_status.action == status.action){\n\t\t\t\t\t\t\n\t\t\t\t\t\t//same name and different stypes: dropdown pager + placeholder pages -> merge statuses\n\t\t\t\t\t\tif(same_name_status.type != status.type){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$.extend(true, statuses[index], status);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t//no statuses with the same name ->add to statuses list\n\t\t\t\t\tstatuses.push(status);\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn statuses;\n\t};\n\t\t\t\n\t/**\n\t* Set current statuses (for answer event)\n\t* @param {Array.<jQuery.fn.jplist.view.PanelControl>} controls\n\t* @param {Array.<jQuery.fn.jplist.models.Status>} statuses\n\t* @param {boolean} isCookie - are statuses restored from cookies\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.setStatuses = function(controls, statuses, isCookie){\n\t\t\n\t\tvar status\n\t\t\t,sameControls;\n\t\t\n\t\tfor(var i=0; i<statuses.length; i++){\n\t\t\n\t\t\t//get status\n\t\t\tstatus = statuses[i];\n\t\t\t\n\t\t\t//get controls group (with the status.name and status.action)\n\t\t\tsameControls = jQuery.fn.jplist.services.Panel.findControlsByNameAction(controls, status.name, status.action);\n\t\t\t\n\t\t\tfor(var k=0; k<sameControls.length; k++){\n\t\t\t\n\t\t\t\t//set control status\n\t\t\t\tsameControls[k].setStatus(status, isCookie);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t* Get panel paths\n\t* @param {Array.<jQuery.fn.jplist.view.PanelControl>} controls\n\t* @return {Array.<jQuery.fn.jplist.models.Path>}\n\t* @memberOf jQuery.fn.jplist.services.Panel\n\t*/\n\tjQuery.fn.jplist.services.Panel.getPaths = function(controls){\n\t\n\t\tvar control\n\t\t\t,paths\n\t\t\t,path\n\t\t\t,generalPathsList = [];\n\t\t\n\t\tfor(var i=0; i<controls.length; i++){\n\t\t\n\t\t\t//get control type\n\t\t\tcontrol = controls[i];\n\t\t\t\n\t\t\t//get control type paths\n\t\t\tpaths = control.getPaths();\n\t\t\t\n\t\t\tfor(var k=0; k<paths.length; k++){\n\t\t\t\n\t\t\t\t//get path\n\t\t\t\tpath = paths[k];\n\t\t\t\t\n\t\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, generalPathsList)){\n\t\t\t\t\n\t\t\t\t\t//add path to the list\n\t\t\t\t\tgeneralPathsList.push(path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn generalPathsList;\n\t};\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}