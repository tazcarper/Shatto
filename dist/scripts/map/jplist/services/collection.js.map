{"version":3,"sources":["map/jplist/services/collection.js"],"names":[],"mappings":"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","file":"map/jplist/services/collection.js","sourcesContent":["/*global jQuery:false */\n(function ($) {\n\t'use strict';\t\t\n\t\t\n\t/**\n\t* dataview toString\n\t* @param {Object} self - jplist collection 'this' object\n\t* @return {string}\n\t*/\n\tvar dataviewToString = function(self){\n\t\n\t\tvar dataitem\n\t\t\t,html = \"\"\n\t\t\t,i;\n\t\t\n\t\tfor(i=0; i<self.dataview.length; i++){\n\t\t\n\t\t\t//get dataitem\n\t\t\tdataitem = self.dataview[i];\n\t\t\t\n\t\t\t//add dataitem html\n\t\t\thtml += dataitem.html;\n\t\t}\n\t\treturn html;\n\t};\n\t\n\t/**\n\t* convert dataview to jquery object\n\t* @return {jQueryObject}\n\t*/\n\tvar dataviewToJqueryObject = function(self){\n\t\t\n\t\treturn $(self.dataview).map(function(index, $element){\n\t\t\treturn $element.jqElement.get();\n\t\t});\n\t};\n\t\n\t/**\n\t* convert dataitems to jquery object\n\t* @return {jQueryObject}\n\t*/\n\tvar dataitemsToJqueryObject = function(self){\n\t\t\n\t\treturn $(self.dataitems).map(function(index, $element){\n\t\t\treturn $element.jqElement.get();\n\t\t});\n\t};\n\t\n\t/**\n\t* modify dataview (sort, filter etc.)\n\t* @param {Object} self - jplist collection 'this' object\n\t* @param {Function} callback\n\t*/\n\tvar modifyDataview = function(self, callback){\n\n\t\tif($.isFunction(callback)){\n\t\t\tcallback(self.dataview);\n\t\t}\n\t};\n\t\n\t/**\n\t* reset dataview: dataview <- dataitems\n\t* @param {Object} self - jplist collection 'this' object\n\t*/\n\tvar resetDataview = function(self){\n\t\tself.dataview = $.merge([], self.dataitems);\n\t};\n\t\t\n\t/**\n\t* find dataitem by its id in dataitems array\n\t* @param {Object} self - jplist collection 'this' object\t\n\t* @param {jQueryObject} item - item to add to dataitems array\n\t* @return {number} - index of dataitem in dataitems array, or -1 if not found\n\t*/\n\tvar indexOf = function(self, item){\n\t\t\n\t\tvar dataitem\n\t\t\t,index = -1\n\t\t\t,html1\n\t\t\t,html2;\n\t\t\n\t\tfor(var i=0; i<self.dataitems.length; i++){\n\t\t\n\t\t\t//get dataitem\n\t\t\tdataitem = self.dataitems[i];\n\t\t\t\n\t\t\t//get outer html\n\t\t\thtml1 = jQuery.fn.jplist.services.Helper.getOuterHtml(dataitem.jqElement);\n\t\t\thtml2 = jQuery.fn.jplist.services.Helper.getOuterHtml(item);\n\t\t\t\n\t\t\tif(html1 === html2){ //dataitem.jqElement.is(item)\t\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn index;\n\t};\n\t\n\t/**\n\t* delete dataitem from dataitems array\n\t* @param {Object} self - jplist collection 'this' object\t\n\t* @param {jQueryObject} $item - jquery element to delete\n\t*/\n\tvar delDataitem = function(self, $item){\n\t\n\t\tvar index;\n\t\t\n\t\tindex = indexOf(self, $item);\n\t\t\n\t\tif(index !== -1){\n\t\t\tself.dataitems.splice(index, 1);\n\n            //trigger del item event\n\t        self.$jplistBox.trigger(self.options.del_item_event, [$item, self.dataitems]);\n\t\t}\n\t};\n\t\n\t/**\n\t* delete dataitem collection from dataitems array\n\t* @param {Object} self - jplist collection 'this' object\t\n\t* @param {jQueryObject} items - jquery element to delete\n\t*/\n\tvar delDataitems = function(self, items){\n\t\n\t\titems.each(function(){\t\t\t\n\t\t\tdelDataitem(self, $(this));\n\t\t});\n\t};\n\t\n\t/**\n\t* add jquery item to jplist dataitems array\n\t* @param {Object} self - jplist collection 'this' object\n\t* @param {jQueryObject} item - item to add to dataitems array\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths - paths objects array\n\t* @param {number} index\n\t*/\n\tvar addDataItem = function(self, item, paths, index){\n\t\n\t\tvar dataItem;\n\t\t\t\n\t\t//create dataitem\n\t\tdataItem = new jQuery.fn.jplist.models.Dataitem(item, paths, index);\n\t\t\t\t\n\t\t//add item dataitems to array\n\t\tself.dataitems.push(dataItem);\n\n        //trigger add item event\n\t    self.$jplistBox.trigger(self.options.add_item_event, [dataItem, self.dataitems]);\n\t};\n\t\n\t/**\n\t* add jquery item collection to jplist dataitems array\n\t* @param {Object} self - jplist collection 'this' object\t\n\t* @param {jQueryObject} items - items to add to dataitems array\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths - paths objects array\n\t*/\n\tvar addDataItems = function(self, items, paths){\n\t\t\n\t\titems.each(function(index){\t\t\t\n\t\t\taddDataItem(self, $(this), paths, index);\n\t\t});\n\t};\n\t\n\t/**\n\t* empty collection\n\t* @param {Object} self - jplist collection 'this' object\t\n\t*/\n\tvar empty = function(self){\n\t\tself.dataitems = [];\n\t\tself.dataview = [];\n\t};\n\t\n\t/** \n\t* jplist collection constructor\n    * @param {jQueryObject} $jplistBox - jplist jquery element\n\t* @param {Object} options - jplist user options\n\t* @return {Object} - jplist collection\n\t* @constructor \n\t*/\n\tvar Init = function($jplistBox, options){\n\t\n\t\tvar self = {\n\t\t\tdataitems: []\n\t\t\t,dataview: []\n            ,$jplistBox: $jplistBox\n            ,options: options\n\t\t};\t\n\t\t\n\t\treturn $.extend(this, self);\n\t};\n\t\n\t//api -----------------------------------------------------------------\n\t\n\t/**\n\t* API: convert dataview to jquery object\n\t* @return {jQueryObject}\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name dataviewToJqueryObject\n\t* @function\n\t*/\n\tInit.prototype.dataviewToJqueryObject = function(){\n\t\treturn dataviewToJqueryObject(this);\n\t};\n\t\n\t/**\n\t* API: convert dataitems to jquery object\n\t* @return {jQueryObject}\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name dataitemsToJqueryObject\n\t* @function\n\t*/\n\tInit.prototype.dataitemsToJqueryObject = function(){\n\t\treturn dataitemsToJqueryObject(this);\n\t};\n\t\n\t/**\n\t* API: reset dataview collection with initial dataitems set.\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name resetDataview\n\t* @function\n\t*/\n\tInit.prototype.resetDataview = function(){\n\t\tresetDataview(this);\n\t};\n\t\n\t/**\n\t* API: modify collection dataview with sorting, filter, pagination etc.\n\t* @param {Function} callback\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name modifyDataview\n\t* @function\n\t*/\n\tInit.prototype.modifyDataview = function(callback){\n\t\tmodifyDataview(this, callback);\n\t};\n\t\n\t/**\n\t* API: empty collection\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name empty\n\t* @function\n\t*/\n\tInit.prototype.empty = function(){\t\n\t\tempty(this);\n\t};\n\t\n\t/**\n\t* API: convetrs jQuery element (item) to dataitem and adds it to the dataitems collection\n\t* @param {jQueryObject} item - jquery item to add\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths - paths objects array\n\t* @param {number} index\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name addDataItem\n\t* @function\n\t*/\n\tInit.prototype.addDataItem = function(item, paths, index){\t\n\t\taddDataItem(this, item, paths, index);\n\t};\n\t\n\t/**\n\t* API: convetrs a set of jQuery elements (items) to dataitems and adds them to the dataitems collection\t\n\t* @param {jQueryObject} items - jquery items to add\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths - paths objects array\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name addDataItems\n\t* @function\n\t*/\n\tInit.prototype.addDataItems = function(items, paths){\t\t\n\t\taddDataItems(this, items, paths);\n\t};\n\t\n\t/**\n\t* API: searches for jQuery element (item) in the dataitems collection and deletes it\n\t* @param {jQueryObject} item - jquery element (item) to delete\n\t* @public\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name delDataitem\n\t* @function\n\t*/\n\tInit.prototype.delDataitem = function(item){\n\t\tdelDataitem(this, item);\n\t};\n\t\n\t/**\n\t* API: searches for jQuery elements (items) in the dataitems collection and deletes them\n\t* @param {jQueryObject} items - jquery element to delete\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name delDataitems\n\t* @function\n\t*/\n\tInit.prototype.delDataitems = function(items){\n\t\tdelDataitems(this, items);\n\t};\n\t\n\t/**\n\t* API: searches for dataitem in the collection (by id)\n\t* @param {jQueryObject} item - jquery element to delete\n\t* @return {number} - index of dataitem in dataitems array\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name indexOf\n\t* @function\n\t*/\n\tInit.prototype.indexOf = function(item){\n\t\treturn indexOf(this, item);\n\t};\n\t\n\t/**\n\t* API: get HTML of the collection in the current state (dataview): with the current filter, sorting etc.\n\t* @return {string}\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name dataviewToString\n\t* @function\n\t*/\n\tInit.prototype.dataviewToString = function(){\t\n\t\treturn dataviewToString(this);\n\t};\n\t\n\t/** \n\t* jplist collection\n    * @param {jQueryObject} $jplistBox - jplist jquery element\n\t* @param {Object} options - jplist user options\n\t* @constructor \n\t*\n\t* @memberOf jQuery.fn.jplist\n\t* @class Dataitems collection - collection of the items within jplist container \n\t*/\n\tjQuery.fn.jplist.services.Collection = function($jplistBox, options){\n\n\t\tvar self;\n\t\t\n\t\t//call constructor\n\t\tself = new Init($jplistBox, options);\n\t\t\n\t\t//properties\n        this.$jplistBox = $jplistBox;\n        this.options = options;\n\n\t\tthis.dataitems = self['dataitems'];\n\t\tthis.dataview = self['dataview'];\n\t\t\n\t\t//methods\n\t\tthis.resetDataview = self['resetDataview'];\n\t\tthis.modifyDataview = self['modifyDataview'];\t\n\t\tthis.addDataItem = self['addDataItem'];\t\n\t\tthis.addDataItems = self['addDataItems'];\t\n\t\tthis.empty = self['empty'];\n\t\tthis.delDataitem = self['delDataitem'];\t\n\t\tthis.delDataitems = self['delDataitems'];\t\n\t\tthis.indexOf = self['indexOf'];\t\t\t\n\t\tthis.dataviewToString = self['dataviewToString'];\t\n\t\tthis.dataviewToJqueryObject = self['dataviewToJqueryObject'];\n\t\tthis.dataitemsToJqueryObject = self['dataitemsToJqueryObject'];\n\t};\n})(jQuery);\n\n"],"sourceRoot":"/source/"}