{"version":3,"sources":["map/jplist/services/collection.js"],"names":[],"mappings":"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","file":"map/jplist/services/collection.js","sourcesContent":["/*global jQuery:false */\n(function ($) {\n\t'use strict';\t\t\n\t\t\n\t/**\n\t* dataview toString\n\t* @param {Object} self - jplist collection 'this' object\n\t* @return {string}\n\t*/\n\tvar dataviewToString = function(self){\n\t\n\t\tvar dataitem\n\t\t\t,html = \"\"\n\t\t\t,i;\n\t\t\n\t\tfor(i=0; i<self.dataview.length; i++){\n\t\t\n\t\t\t//get dataitem\n\t\t\tdataitem = self.dataview[i];\n\t\t\t\n\t\t\t//add dataitem html\n\t\t\thtml += dataitem.html;\n\t\t}\n\t\treturn html;\n\t};\n\t\n\t/**\n\t* convert dataview to jquery object\n\t* @return {jQueryObject}\n\t*/\n\tvar dataviewToJqueryObject = function(self){\n\t\t\n\t\treturn $(self.dataview).map(function(index, $element){\n\t\t\treturn $element.jqElement.get();\n\t\t});\n\t};\n\t\n\t/**\n\t* convert dataitems to jquery object\n\t* @return {jQueryObject}\n\t*/\n\tvar dataitemsToJqueryObject = function(self){\n\t\t\n\t\treturn $(self.dataitems).map(function(index, $element){\n\t\t\treturn $element.jqElement.get();\n\t\t});\n\t};\n\t\n\t/**\n\t* modify dataview (sort, filter etc.)\n\t* @param {Object} self - jplist collection 'this' object\n\t* @param {Function} callback\n\t*/\n\tvar modifyDataview = function(self, callback){\n\n\t\tif($.isFunction(callback)){\n\t\t\tcallback(self.dataview);\n\t\t}\n\t};\n\t\n\t/**\n\t* reset dataview: dataview <- dataitems\n\t* @param {Object} self - jplist collection 'this' object\n\t*/\n\tvar resetDataview = function(self){\n\t\tself.dataview = $.merge([], self.dataitems);\n\t};\n\t\t\n\t/**\n\t* find dataitem by its id in dataitems array\n\t* @param {Object} self - jplist collection 'this' object\t\n\t* @param {jQueryObject} item - item to add to dataitems array\n\t* @return {number} - index of dataitem in dataitems array, or -1 if not found\n\t*/\n\tvar indexOf = function(self, item){\n\t\t\n\t\tvar dataitem\n\t\t\t,index = -1\n\t\t\t,html1\n\t\t\t,html2;\n\t\t\n\t\tfor(var i=0; i<self.dataitems.length; i++){\n\t\t\n\t\t\t//get dataitem\n\t\t\tdataitem = self.dataitems[i];\n\t\t\t\n\t\t\t//get outer html\n\t\t\thtml1 = jQuery.fn.jplist.services.Helper.getOuterHtml(dataitem.jqElement);\n\t\t\thtml2 = jQuery.fn.jplist.services.Helper.getOuterHtml(item);\n\t\t\t\n\t\t\tif(html1 === html2){ //dataitem.jqElement.is(item)\t\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn index;\n\t};\n\t\n\t/**\n\t* delete dataitem from dataitems array\n\t* @param {Object} self - jplist collection 'this' object\t\n\t* @param {jQueryObject} $item - jquery element to delete\n\t*/\n\tvar delDataitem = function(self, $item){\n\t\n\t\tvar index;\n\t\t\n\t\tindex = indexOf(self, $item);\n\t\t\n\t\tif(index !== -1){\n\t\t\tself.dataitems.splice(index, 1);\n\n            //trigger del item event\n\t        self.$jplistBox.trigger(self.options.del_item_event, [$item, self.dataitems]);\n\t\t}\n\t};\n\t\n\t/**\n\t* delete dataitem collection from dataitems array\n\t* @param {Object} self - jplist collection 'this' object\t\n\t* @param {jQueryObject} items - jquery element to delete\n\t*/\n\tvar delDataitems = function(self, items){\n\t\n\t\titems.each(function(){\t\t\t\n\t\t\tdelDataitem(self, $(this));\n\t\t});\n\t};\n\t\n\t/**\n\t* add jquery item to jplist dataitems array\n\t* @param {Object} self - jplist collection 'this' object\n\t* @param {jQueryObject} item - item to add to dataitems array\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths - paths objects array\n\t* @param {number} index\n\t*/\n\tvar addDataItem = function(self, item, paths, index){\n\t\n\t\tvar dataItem;\n\t\t\t\n\t\t//create dataitem\n\t\tdataItem = new jQuery.fn.jplist.models.Dataitem(item, paths, index);\n\t\t\t\t\n\t\t//add item dataitems to array\n\t\tself.dataitems.push(dataItem);\n\n        //trigger add item event\n\t    self.$jplistBox.trigger(self.options.add_item_event, [dataItem, self.dataitems]);\n\t};\n\t\n\t/**\n\t* add jquery item collection to jplist dataitems array\n\t* @param {Object} self - jplist collection 'this' object\t\n\t* @param {jQueryObject} items - items to add to dataitems array\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths - paths objects array\n\t*/\n\tvar addDataItems = function(self, items, paths){\n\t\t\n\t\titems.each(function(index){\t\t\t\n\t\t\taddDataItem(self, $(this), paths, index);\n\t\t});\n\t};\n\t\n\t/**\n\t* empty collection\n\t* @param {Object} self - jplist collection 'this' object\t\n\t*/\n\tvar empty = function(self){\n\t\tself.dataitems = [];\n\t\tself.dataview = [];\n\t};\n\t\n\t/** \n\t* jplist collection constructor\n    * @param {jQueryObject} $jplistBox - jplist jquery element\n\t* @param {Object} options - jplist user options\n\t* @return {Object} - jplist collection\n\t* @constructor \n\t*/\n\tvar Init = function($jplistBox, options){\n\t\n\t\tvar self = {\n\t\t\tdataitems: []\n\t\t\t,dataview: []\n            ,$jplistBox: $jplistBox\n            ,options: options\n\t\t};\t\n\t\t\n\t\treturn $.extend(this, self);\n\t};\n\t\n\t//api -----------------------------------------------------------------\n\t\n\t/**\n\t* API: convert dataview to jquery object\n\t* @return {jQueryObject}\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name dataviewToJqueryObject\n\t* @function\n\t*/\n\tInit.prototype.dataviewToJqueryObject = function(){\n\t\treturn dataviewToJqueryObject(this);\n\t};\n\t\n\t/**\n\t* API: convert dataitems to jquery object\n\t* @return {jQueryObject}\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name dataitemsToJqueryObject\n\t* @function\n\t*/\n\tInit.prototype.dataitemsToJqueryObject = function(){\n\t\treturn dataitemsToJqueryObject(this);\n\t};\n\t\n\t/**\n\t* API: reset dataview collection with initial dataitems set.\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name resetDataview\n\t* @function\n\t*/\n\tInit.prototype.resetDataview = function(){\n\t\tresetDataview(this);\n\t};\n\t\n\t/**\n\t* API: modify collection dataview with sorting, filter, pagination etc.\n\t* @param {Function} callback\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name modifyDataview\n\t* @function\n\t*/\n\tInit.prototype.modifyDataview = function(callback){\n\t\tmodifyDataview(this, callback);\n\t};\n\t\n\t/**\n\t* API: empty collection\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name empty\n\t* @function\n\t*/\n\tInit.prototype.empty = function(){\t\n\t\tempty(this);\n\t};\n\t\n\t/**\n\t* API: convetrs jQuery element (item) to dataitem and adds it to the dataitems collection\n\t* @param {jQueryObject} item - jquery item to add\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths - paths objects array\n\t* @param {number} index\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name addDataItem\n\t* @function\n\t*/\n\tInit.prototype.addDataItem = function(item, paths, index){\t\n\t\taddDataItem(this, item, paths, index);\n\t};\n\t\n\t/**\n\t* API: convetrs a set of jQuery elements (items) to dataitems and adds them to the dataitems collection\t\n\t* @param {jQueryObject} items - jquery items to add\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths - paths objects array\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name addDataItems\n\t* @function\n\t*/\n\tInit.prototype.addDataItems = function(items, paths){\t\t\n\t\taddDataItems(this, items, paths);\n\t};\n\t\n\t/**\n\t* API: searches for jQuery element (item) in the dataitems collection and deletes it\n\t* @param {jQueryObject} item - jquery element (item) to delete\n\t* @public\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name delDataitem\n\t* @function\n\t*/\n\tInit.prototype.delDataitem = function(item){\n\t\tdelDataitem(this, item);\n\t};\n\t\n\t/**\n\t* API: searches for jQuery elements (items) in the dataitems collection and deletes them\n\t* @param {jQueryObject} items - jquery element to delete\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name delDataitems\n\t* @function\n\t*/\n\tInit.prototype.delDataitems = function(items){\n\t\tdelDataitems(this, items);\n\t};\n\t\n\t/**\n\t* API: searches for dataitem in the collection (by id)\n\t* @param {jQueryObject} item - jquery element to delete\n\t* @return {number} - index of dataitem in dataitems array\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name indexOf\n\t* @function\n\t*/\n\tInit.prototype.indexOf = function(item){\n\t\treturn indexOf(this, item);\n\t};\n\t\n\t/**\n\t* API: get HTML of the collection in the current state (dataview): with the current filter, sorting etc.\n\t* @return {string}\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name dataviewToString\n\t* @function\n\t*/\n\tInit.prototype.dataviewToString = function(){\t\n\t\treturn dataviewToString(this);\n\t};\n\t\n\t/** \n\t* jplist collection\n    * @param {jQueryObject} $jplistBox - jplist jquery element\n\t* @param {Object} options - jplist user options\n\t* @constructor \n\t*\n\t* @memberOf jQuery.fn.jplist\n\t* @class Dataitems collection - collection of the items within jplist container \n\t*/\n\tjQuery.fn.jplist.services.Collection = function($jplistBox, options){\n\n\t\tvar self;\n\t\t\n\t\t//call constructor\n\t\tself = new Init($jplistBox, options);\n\t\t\n\t\t//properties\n        this.$jplistBox = $jplistBox;\n        this.options = options;\n\n\t\tthis.dataitems = self['dataitems'];\n\t\tthis.dataview = self['dataview'];\n\t\t\n\t\t//methods\n\t\tthis.resetDataview = self['resetDataview'];\n\t\tthis.modifyDataview = self['modifyDataview'];\t\n\t\tthis.addDataItem = self['addDataItem'];\t\n\t\tthis.addDataItems = self['addDataItems'];\t\n\t\tthis.empty = self['empty'];\n\t\tthis.delDataitem = self['delDataitem'];\t\n\t\tthis.delDataitems = self['delDataitems'];\t\n\t\tthis.indexOf = self['indexOf'];\t\t\t\n\t\tthis.dataviewToString = self['dataviewToString'];\t\n\t\tthis.dataviewToJqueryObject = self['dataviewToJqueryObject'];\n\t\tthis.dataitemsToJqueryObject = self['dataitemsToJqueryObject'];\n\t};\n})(jQuery);\n\n"],"sourceRoot":"/source/"}