{"version":3,"sources":["map/jplist/services/collection.js"],"names":[],"mappings":"aAAA,wBACA,CAAC,SAAU,CAAV,CAAa,CACb,aAEA;;;;GAKA,GAAI,kBAAmB,QAAnB,iBAAmB,CAAS,IAAT,CAAc,CAEpC,GAAI,SAAJ,CACE,KAAO,EADT,CAEE,CAFF,CAIA,IAAI,EAAE,CAAN,CAAS,EAAE,KAAK,QAAL,CAAc,MAAzB,CAAiC,GAAjC,CAAqC,CAEpC;AACA,SAAW,KAAK,QAAL,CAAc,CAAd,CAAX,CAEA;AACA,MAAQ,SAAS,IAAjB,CACA,CACD,MAAO,KAAP,CACA,CAfD,CAiBA;;;GAIA,GAAI,wBAAyB,QAAzB,uBAAyB,CAAS,IAAT,CAAc,CAE1C,MAAO,GAAE,KAAK,QAAP,EAAiB,GAAjB,CAAqB,SAAS,KAAT,CAAgB,QAAhB,CAAyB,CACpD,MAAO,UAAS,SAAT,CAAmB,GAAnB,EAAP,CACA,CAFM,CAAP,CAGA,CALD,CAOA;;;GAIA,GAAI,yBAA0B,QAA1B,wBAA0B,CAAS,IAAT,CAAc,CAE3C,MAAO,GAAE,KAAK,SAAP,EAAkB,GAAlB,CAAsB,SAAS,KAAT,CAAgB,QAAhB,CAAyB,CACrD,MAAO,UAAS,SAAT,CAAmB,GAAnB,EAAP,CACA,CAFM,CAAP,CAGA,CALD,CAOA;;;;GAKA,GAAI,gBAAiB,QAAjB,eAAiB,CAAS,IAAT,CAAe,QAAf,CAAwB,CAE5C,GAAG,EAAE,UAAF,CAAa,QAAb,CAAH,CAA0B,CACzB,SAAS,KAAK,QAAd,EACA,CACD,CALD,CAOA;;;GAIA,GAAI,eAAgB,QAAhB,cAAgB,CAAS,IAAT,CAAc,CACjC,KAAK,QAAL,CAAgB,EAAE,KAAF,CAAQ,EAAR,CAAY,KAAK,SAAjB,CAAhB,CACA,CAFD,CAIA;;;;;GAMA,GAAI,SAAU,QAAV,QAAU,CAAS,IAAT,CAAe,IAAf,CAAoB,CAEjC,GAAI,SAAJ,CACE,MAAQ,CAAC,CADX,CAEE,KAFF,CAGE,KAHF,CAKA,IAAI,GAAI,GAAE,CAAV,CAAa,EAAE,KAAK,SAAL,CAAe,MAA9B,CAAsC,GAAtC,CAA0C,CAEzC;AACA,SAAW,KAAK,SAAL,CAAe,CAAf,CAAX,CAEA;AACA,MAAQ,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,MAA1B,CAAiC,YAAjC,CAA8C,SAAS,SAAvD,CAAR,CACA,MAAQ,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,MAA1B,CAAiC,YAAjC,CAA8C,IAA9C,CAAR,CAEA,GAAG,QAAU,KAAb,CAAmB,CAAE;AACpB,MAAQ,CAAR,CACA,MACA,CACD,CAED,MAAO,MAAP,CACA,CAvBD,CAyBA;;;;GAKA,GAAI,aAAc,QAAd,YAAc,CAAS,IAAT,CAAe,KAAf,CAAqB,CAEtC,GAAI,MAAJ,CAEA,MAAQ,QAAQ,IAAR,CAAc,KAAd,CAAR,CAEA,GAAG,QAAU,CAAC,CAAd,CAAgB,CACf,KAAK,SAAL,CAAe,MAAf,CAAsB,KAAtB,CAA6B,CAA7B,EAES;AACH,KAAK,UAAL,CAAgB,OAAhB,CAAwB,KAAK,OAAL,CAAa,cAArC,CAAqD,CAAC,KAAD,CAAQ,KAAK,SAAb,CAArD,EACN,CACD,CAZD,CAcA;;;;GAKA,GAAI,cAAe,QAAf,aAAe,CAAS,IAAT,CAAe,KAAf,CAAqB,CAEvC,MAAM,IAAN,CAAW,UAAU,CACpB,YAAY,IAAZ,CAAkB,EAAE,IAAF,CAAlB,EACA,CAFD,EAGA,CALD,CAOA;;;;;;GAOA,GAAI,aAAc,QAAd,YAAc,CAAS,IAAT,CAAe,IAAf,CAAqB,KAArB,CAA4B,KAA5B,CAAkC,CAEnD,GAAI,SAAJ,CAEA;AACA,SAAW,GAAI,QAAO,EAAP,CAAU,MAAV,CAAiB,MAAjB,CAAwB,QAA5B,CAAqC,IAArC,CAA2C,KAA3C,CAAkD,KAAlD,CAAX,CAEA;AACA,KAAK,SAAL,CAAe,IAAf,CAAoB,QAApB,EAEM;AACH,KAAK,UAAL,CAAgB,OAAhB,CAAwB,KAAK,OAAL,CAAa,cAArC,CAAqD,CAAC,QAAD,CAAW,KAAK,SAAhB,CAArD,EACH,CAZD,CAcA;;;;;GAMA,GAAI,cAAe,QAAf,aAAe,CAAS,IAAT,CAAe,KAAf,CAAsB,KAAtB,CAA4B,CAE9C,MAAM,IAAN,CAAW,SAAS,KAAT,CAAe,CACzB,YAAY,IAAZ,CAAkB,EAAE,IAAF,CAAlB,CAA2B,KAA3B,CAAkC,KAAlC,EACA,CAFD,EAGA,CALD,CAOA;;;GAIA,GAAI,OAAQ,QAAR,MAAQ,CAAS,IAAT,CAAc,CACzB,KAAK,SAAL,CAAiB,EAAjB,CACA,KAAK,QAAL,CAAgB,EAAhB,CACA,CAHD,CAKA;;;;;;GAOA,GAAI,MAAO,QAAP,KAAO,CAAS,UAAT,CAAqB,OAArB,CAA6B,CAEvC,GAAI,MAAO,CACV,UAAW,EADD,CAET,SAAU,EAFD,CAGA,WAAY,UAHZ,CAIA,QAAS,OAJT,CAAX,CAOA,MAAO,GAAE,MAAF,CAAS,IAAT,CAAe,IAAf,CAAP,CACA,CAVD,CAYA;AAEA;;;;;;;GAQA,KAAK,SAAL,CAAe,sBAAf,CAAwC,UAAU,CACjD,MAAO,wBAAuB,IAAvB,CAAP,CACA,CAFD,CAIA;;;;;;;GAQA,KAAK,SAAL,CAAe,uBAAf,CAAyC,UAAU,CAClD,MAAO,yBAAwB,IAAxB,CAAP,CACA,CAFD,CAIA;;;;;;GAOA,KAAK,SAAL,CAAe,aAAf,CAA+B,UAAU,CACxC,cAAc,IAAd,EACA,CAFD,CAIA;;;;;;;GAQA,KAAK,SAAL,CAAe,cAAf,CAAgC,SAAS,QAAT,CAAkB,CACjD,eAAe,IAAf,CAAqB,QAArB,EACA,CAFD,CAIA;;;;;;GAOA,KAAK,SAAL,CAAe,KAAf,CAAuB,UAAU,CAChC,MAAM,IAAN,EACA,CAFD,CAIA;;;;;;;;;GAUA,KAAK,SAAL,CAAe,WAAf,CAA6B,SAAS,IAAT,CAAe,KAAf,CAAsB,KAAtB,CAA4B,CACxD,YAAY,IAAZ,CAAkB,IAAlB,CAAwB,KAAxB,CAA+B,KAA/B,EACA,CAFD,CAIA;;;;;;;;GASA,KAAK,SAAL,CAAe,YAAf,CAA8B,SAAS,KAAT,CAAgB,KAAhB,CAAsB,CACnD,aAAa,IAAb,CAAmB,KAAnB,CAA0B,KAA1B,EACA,CAFD,CAIA;;;;;;;GAQA,KAAK,SAAL,CAAe,WAAf,CAA6B,SAAS,IAAT,CAAc,CAC1C,YAAY,IAAZ,CAAkB,IAAlB,EACA,CAFD,CAIA;;;;;;;GAQA,KAAK,SAAL,CAAe,YAAf,CAA8B,SAAS,KAAT,CAAe,CAC5C,aAAa,IAAb,CAAmB,KAAnB,EACA,CAFD,CAIA;;;;;;;;GASA,KAAK,SAAL,CAAe,OAAf,CAAyB,SAAS,IAAT,CAAc,CACtC,MAAO,SAAQ,IAAR,CAAc,IAAd,CAAP,CACA,CAFD,CAIA;;;;;;;GAQA,KAAK,SAAL,CAAe,gBAAf,CAAkC,UAAU,CAC3C,MAAO,kBAAiB,IAAjB,CAAP,CACA,CAFD,CAIA;;;;;;;;GASA,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,UAA1B,CAAuC,SAAS,UAAT,CAAqB,OAArB,CAA6B,CAEnE,GAAI,KAAJ,CAEA;AACA,KAAO,GAAI,KAAJ,CAAS,UAAT,CAAqB,OAArB,CAAP,CAEA;AACM,KAAK,UAAL,CAAkB,UAAlB,CACA,KAAK,OAAL,CAAe,OAAf,CAEN,KAAK,SAAL,CAAiB,KAAK,WAAL,CAAjB,CACA,KAAK,QAAL,CAAgB,KAAK,UAAL,CAAhB,CAEA;AACA,KAAK,aAAL,CAAqB,KAAK,eAAL,CAArB,CACA,KAAK,cAAL,CAAsB,KAAK,gBAAL,CAAtB,CACA,KAAK,WAAL,CAAmB,KAAK,aAAL,CAAnB,CACA,KAAK,YAAL,CAAoB,KAAK,cAAL,CAApB,CACA,KAAK,KAAL,CAAa,KAAK,OAAL,CAAb,CACA,KAAK,WAAL,CAAmB,KAAK,aAAL,CAAnB,CACA,KAAK,YAAL,CAAoB,KAAK,cAAL,CAApB,CACA,KAAK,OAAL,CAAe,KAAK,SAAL,CAAf,CACA,KAAK,gBAAL,CAAwB,KAAK,kBAAL,CAAxB,CACA,KAAK,sBAAL,CAA8B,KAAK,wBAAL,CAA9B,CACA,KAAK,uBAAL,CAA+B,KAAK,yBAAL,CAA/B,CACA,CA1BD,CA2BA,CA3WD,EA2WG,MA3WH","file":"map/jplist/services/collection.js","sourcesContent":["/*global jQuery:false */\n(function ($) {\n\t'use strict';\t\t\n\t\t\n\t/**\n\t* dataview toString\n\t* @param {Object} self - jplist collection 'this' object\n\t* @return {string}\n\t*/\n\tvar dataviewToString = function(self){\n\t\n\t\tvar dataitem\n\t\t\t,html = \"\"\n\t\t\t,i;\n\t\t\n\t\tfor(i=0; i<self.dataview.length; i++){\n\t\t\n\t\t\t//get dataitem\n\t\t\tdataitem = self.dataview[i];\n\t\t\t\n\t\t\t//add dataitem html\n\t\t\thtml += dataitem.html;\n\t\t}\n\t\treturn html;\n\t};\n\t\n\t/**\n\t* convert dataview to jquery object\n\t* @return {jQueryObject}\n\t*/\n\tvar dataviewToJqueryObject = function(self){\n\t\t\n\t\treturn $(self.dataview).map(function(index, $element){\n\t\t\treturn $element.jqElement.get();\n\t\t});\n\t};\n\t\n\t/**\n\t* convert dataitems to jquery object\n\t* @return {jQueryObject}\n\t*/\n\tvar dataitemsToJqueryObject = function(self){\n\t\t\n\t\treturn $(self.dataitems).map(function(index, $element){\n\t\t\treturn $element.jqElement.get();\n\t\t});\n\t};\n\t\n\t/**\n\t* modify dataview (sort, filter etc.)\n\t* @param {Object} self - jplist collection 'this' object\n\t* @param {Function} callback\n\t*/\n\tvar modifyDataview = function(self, callback){\n\n\t\tif($.isFunction(callback)){\n\t\t\tcallback(self.dataview);\n\t\t}\n\t};\n\t\n\t/**\n\t* reset dataview: dataview <- dataitems\n\t* @param {Object} self - jplist collection 'this' object\n\t*/\n\tvar resetDataview = function(self){\n\t\tself.dataview = $.merge([], self.dataitems);\n\t};\n\t\t\n\t/**\n\t* find dataitem by its id in dataitems array\n\t* @param {Object} self - jplist collection 'this' object\t\n\t* @param {jQueryObject} item - item to add to dataitems array\n\t* @return {number} - index of dataitem in dataitems array, or -1 if not found\n\t*/\n\tvar indexOf = function(self, item){\n\t\t\n\t\tvar dataitem\n\t\t\t,index = -1\n\t\t\t,html1\n\t\t\t,html2;\n\t\t\n\t\tfor(var i=0; i<self.dataitems.length; i++){\n\t\t\n\t\t\t//get dataitem\n\t\t\tdataitem = self.dataitems[i];\n\t\t\t\n\t\t\t//get outer html\n\t\t\thtml1 = jQuery.fn.jplist.services.Helper.getOuterHtml(dataitem.jqElement);\n\t\t\thtml2 = jQuery.fn.jplist.services.Helper.getOuterHtml(item);\n\t\t\t\n\t\t\tif(html1 === html2){ //dataitem.jqElement.is(item)\t\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn index;\n\t};\n\t\n\t/**\n\t* delete dataitem from dataitems array\n\t* @param {Object} self - jplist collection 'this' object\t\n\t* @param {jQueryObject} $item - jquery element to delete\n\t*/\n\tvar delDataitem = function(self, $item){\n\t\n\t\tvar index;\n\t\t\n\t\tindex = indexOf(self, $item);\n\t\t\n\t\tif(index !== -1){\n\t\t\tself.dataitems.splice(index, 1);\n\n            //trigger del item event\n\t        self.$jplistBox.trigger(self.options.del_item_event, [$item, self.dataitems]);\n\t\t}\n\t};\n\t\n\t/**\n\t* delete dataitem collection from dataitems array\n\t* @param {Object} self - jplist collection 'this' object\t\n\t* @param {jQueryObject} items - jquery element to delete\n\t*/\n\tvar delDataitems = function(self, items){\n\t\n\t\titems.each(function(){\t\t\t\n\t\t\tdelDataitem(self, $(this));\n\t\t});\n\t};\n\t\n\t/**\n\t* add jquery item to jplist dataitems array\n\t* @param {Object} self - jplist collection 'this' object\n\t* @param {jQueryObject} item - item to add to dataitems array\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths - paths objects array\n\t* @param {number} index\n\t*/\n\tvar addDataItem = function(self, item, paths, index){\n\t\n\t\tvar dataItem;\n\t\t\t\n\t\t//create dataitem\n\t\tdataItem = new jQuery.fn.jplist.models.Dataitem(item, paths, index);\n\t\t\t\t\n\t\t//add item dataitems to array\n\t\tself.dataitems.push(dataItem);\n\n        //trigger add item event\n\t    self.$jplistBox.trigger(self.options.add_item_event, [dataItem, self.dataitems]);\n\t};\n\t\n\t/**\n\t* add jquery item collection to jplist dataitems array\n\t* @param {Object} self - jplist collection 'this' object\t\n\t* @param {jQueryObject} items - items to add to dataitems array\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths - paths objects array\n\t*/\n\tvar addDataItems = function(self, items, paths){\n\t\t\n\t\titems.each(function(index){\t\t\t\n\t\t\taddDataItem(self, $(this), paths, index);\n\t\t});\n\t};\n\t\n\t/**\n\t* empty collection\n\t* @param {Object} self - jplist collection 'this' object\t\n\t*/\n\tvar empty = function(self){\n\t\tself.dataitems = [];\n\t\tself.dataview = [];\n\t};\n\t\n\t/** \n\t* jplist collection constructor\n    * @param {jQueryObject} $jplistBox - jplist jquery element\n\t* @param {Object} options - jplist user options\n\t* @return {Object} - jplist collection\n\t* @constructor \n\t*/\n\tvar Init = function($jplistBox, options){\n\t\n\t\tvar self = {\n\t\t\tdataitems: []\n\t\t\t,dataview: []\n            ,$jplistBox: $jplistBox\n            ,options: options\n\t\t};\t\n\t\t\n\t\treturn $.extend(this, self);\n\t};\n\t\n\t//api -----------------------------------------------------------------\n\t\n\t/**\n\t* API: convert dataview to jquery object\n\t* @return {jQueryObject}\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name dataviewToJqueryObject\n\t* @function\n\t*/\n\tInit.prototype.dataviewToJqueryObject = function(){\n\t\treturn dataviewToJqueryObject(this);\n\t};\n\t\n\t/**\n\t* API: convert dataitems to jquery object\n\t* @return {jQueryObject}\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name dataitemsToJqueryObject\n\t* @function\n\t*/\n\tInit.prototype.dataitemsToJqueryObject = function(){\n\t\treturn dataitemsToJqueryObject(this);\n\t};\n\t\n\t/**\n\t* API: reset dataview collection with initial dataitems set.\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name resetDataview\n\t* @function\n\t*/\n\tInit.prototype.resetDataview = function(){\n\t\tresetDataview(this);\n\t};\n\t\n\t/**\n\t* API: modify collection dataview with sorting, filter, pagination etc.\n\t* @param {Function} callback\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name modifyDataview\n\t* @function\n\t*/\n\tInit.prototype.modifyDataview = function(callback){\n\t\tmodifyDataview(this, callback);\n\t};\n\t\n\t/**\n\t* API: empty collection\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name empty\n\t* @function\n\t*/\n\tInit.prototype.empty = function(){\t\n\t\tempty(this);\n\t};\n\t\n\t/**\n\t* API: convetrs jQuery element (item) to dataitem and adds it to the dataitems collection\n\t* @param {jQueryObject} item - jquery item to add\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths - paths objects array\n\t* @param {number} index\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name addDataItem\n\t* @function\n\t*/\n\tInit.prototype.addDataItem = function(item, paths, index){\t\n\t\taddDataItem(this, item, paths, index);\n\t};\n\t\n\t/**\n\t* API: convetrs a set of jQuery elements (items) to dataitems and adds them to the dataitems collection\t\n\t* @param {jQueryObject} items - jquery items to add\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths - paths objects array\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name addDataItems\n\t* @function\n\t*/\n\tInit.prototype.addDataItems = function(items, paths){\t\t\n\t\taddDataItems(this, items, paths);\n\t};\n\t\n\t/**\n\t* API: searches for jQuery element (item) in the dataitems collection and deletes it\n\t* @param {jQueryObject} item - jquery element (item) to delete\n\t* @public\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name delDataitem\n\t* @function\n\t*/\n\tInit.prototype.delDataitem = function(item){\n\t\tdelDataitem(this, item);\n\t};\n\t\n\t/**\n\t* API: searches for jQuery elements (items) in the dataitems collection and deletes them\n\t* @param {jQueryObject} items - jquery element to delete\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name delDataitems\n\t* @function\n\t*/\n\tInit.prototype.delDataitems = function(items){\n\t\tdelDataitems(this, items);\n\t};\n\t\n\t/**\n\t* API: searches for dataitem in the collection (by id)\n\t* @param {jQueryObject} item - jquery element to delete\n\t* @return {number} - index of dataitem in dataitems array\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name indexOf\n\t* @function\n\t*/\n\tInit.prototype.indexOf = function(item){\n\t\treturn indexOf(this, item);\n\t};\n\t\n\t/**\n\t* API: get HTML of the collection in the current state (dataview): with the current filter, sorting etc.\n\t* @return {string}\n\t* @public\t\n\t* @memberOf jQuery.fn.jplist.services.Collection#\n\t* @name dataviewToString\n\t* @function\n\t*/\n\tInit.prototype.dataviewToString = function(){\t\n\t\treturn dataviewToString(this);\n\t};\n\t\n\t/** \n\t* jplist collection\n    * @param {jQueryObject} $jplistBox - jplist jquery element\n\t* @param {Object} options - jplist user options\n\t* @constructor \n\t*\n\t* @memberOf jQuery.fn.jplist\n\t* @class Dataitems collection - collection of the items within jplist container \n\t*/\n\tjQuery.fn.jplist.services.Collection = function($jplistBox, options){\n\n\t\tvar self;\n\t\t\n\t\t//call constructor\n\t\tself = new Init($jplistBox, options);\n\t\t\n\t\t//properties\n        this.$jplistBox = $jplistBox;\n        this.options = options;\n\n\t\tthis.dataitems = self['dataitems'];\n\t\tthis.dataview = self['dataview'];\n\t\t\n\t\t//methods\n\t\tthis.resetDataview = self['resetDataview'];\n\t\tthis.modifyDataview = self['modifyDataview'];\t\n\t\tthis.addDataItem = self['addDataItem'];\t\n\t\tthis.addDataItems = self['addDataItems'];\t\n\t\tthis.empty = self['empty'];\n\t\tthis.delDataitem = self['delDataitem'];\t\n\t\tthis.delDataitems = self['delDataitems'];\t\n\t\tthis.indexOf = self['indexOf'];\t\t\t\n\t\tthis.dataviewToString = self['dataviewToString'];\t\n\t\tthis.dataviewToJqueryObject = self['dataviewToJqueryObject'];\n\t\tthis.dataitemsToJqueryObject = self['dataitemsToJqueryObject'];\n\t};\n})(jQuery);\n\n"],"sourceRoot":"/source/"}