{"version":3,"sources":["map/jplist/actions/sort.js"],"names":[],"mappings":"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","file":"map/jplist/actions/sort.js","sourcesContent":["/*global jQuery:false */\n(function($){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Sort API\n\t* @type {Object} \n    * @class Sort actions (sort by number, text, datetime etc.)\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.actions.Sort = {};\n\t\n\t/**\n\t* get datetime format section/item\n\t* @param {string} replacedFormat\n\t* @return {string|number|null}\n\t*/\n\tvar getDatetimeFormatItem = function(replacedFormat, datetimeString){\n\t\n\t\tvar regex\n\t\t\t,regexValue\n\t\t\t,match\n\t\t\t,result = null;\n\t\t\n\t\t//init regex\t\t\n\t\tregexValue = replacedFormat.replace(/{year}|{month}|{day}|{hour}|{min}|{sec}/g, '.*');\n\t\tregex = new RegExp(regexValue, 'g');\n\t\t\n\t\t//call match\n\t\tmatch = regex.exec(datetimeString);\n\t\t\n\t\tif(match && match.length > 1){\n\t\t   \n\t\t\tresult = match[1];\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n\t\n\t/**\n\t* try parse datetime wilcard\n\t* @param {string|number} wilcard\n\t* @return {number}\n\t*/\n\tvar formatTryParse = function(wilcard, value){\n\t\n\t\tvar radix = 10\n\t\t\t,result = null;\n\t\t\n\t\t\n\t\tif(wilcard == '{month}'){\n\t\t\n\t\t\tvalue = value.toLowerCase();\n\t\t\t\n\t\t\tif(value === 'january' || value === 'jan' || value === 'jan.'){\n\t\t\t\tresult = 0;\n\t\t\t}\n\t\t\t\n\t\t\tif(value === 'february' || value === 'feb' || value === 'feb.'){\n\t\t\t\tresult = 1;\n\t\t\t}\n\t\t\t\n\t\t\tif(value === 'march' || value === 'mar' || value === 'mar.'){\n\t\t\t\tresult = 2;\n\t\t\t}\n\t\t\t\n\t\t\tif(value == 'april' || value === 'apr' || value === 'apr.'){\n\t\t\t\tresult = 3;\n\t\t\t}\n\t\t\t\n\t\t\tif(value === 'may'){\n\t\t\t\tresult = 4;\n\t\t\t}\n\t\t\t\n\t\t\tif(value == 'july' || value === 'jun' || value === 'jun.'){\n\t\t\t\tresult = 5;\n\t\t\t}\n\t\t\t\n\t\t\tif(value === 'april' || value === 'jul' || value === 'jul.'){\n\t\t\t\tresult = 6;\n\t\t\t}\n\t\t\t\n\t\t\tif(value === 'august' || value === 'aug' || value === 'aug.'){\n\t\t\t\tresult = 7;\n\t\t\t}\n\t\t\t\n\t\t\tif(value === 'september' || value === 'sep' || value === 'sep.'){\n\t\t\t\tresult = 8;\n\t\t\t}\n\t\t\t\n\t\t\tif(value === 'october' || value === 'oct' || value === 'oct.'){\n\t\t\t\tresult = 9;\n\t\t\t}\n\t\t\t\n\t\t\tif(value === 'november' || value === 'nov' || value === 'nov.'){\n\t\t\t\tresult = 10;\n\t\t\t}\n\t\t\t\n\t\t\tif(value === 'december' || value === 'dec' || value === 'dec.'){\n\t\t\t\tresult = 11;\n\t\t\t}\n\t\t\t\n\t\t\tif(result === null){\n\t\t\t\tresult = parseInt(value, radix);\n\t\t\t\t\n\t\t\t\tif(!isNaN(result)){\n\t\t\t\t\tresult--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tresult = parseInt(value, radix);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\treturn result;\n\t};\n\t\t\n\t/**\n\t* sort by index of dataitem (by id)\n\t* @param {jQuery.fn.jplist.models.Dataitem} dataitem1\n\t* @param {jQuery.fn.jplist.models.Dataitem} dataitem2\n\t* @param {string} order - sort order: asc or desc\n\t*/\n\tvar sortIndex = function(dataitem1, dataitem2, order){\n\t\n\t\tvar result\n\t\t\t,number1\n\t\t\t,number2;\t\t\n\t\t\t\n\t\t\t//remove other characters\n\t\t\tnumber1 = dataitem1['index'];\n\t\t\tnumber2 = dataitem2['index'];\n\t\t\t\n\t\t\tif(number1 === number2){\n\t\t\t\tresult = 0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(order == 'asc'){\n\t\t\t\t\tif(isNaN(number1)){\n\t\t\t\t\t\tresult = 1;\n\t\t\t\t\t}\t\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(isNaN(number2)){\n\t\t\t\t\t\t\tresult = -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tresult = number1 - number2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(isNaN(number1)){\n\t\t\t\t\t\tresult = 1;\n\t\t\t\t\t}\t\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(isNaN(number2)){\n\t\t\t\t\t\t\tresult = -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tresult = number2 - number1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn result;\n\t};\n\t\n\t/**\n\t* sort numbers\n\t* @param {jQuery.fn.jplist.models.Dataitem} dataitem1\n\t* @param {jQuery.fn.jplist.models.Dataitem} dataitem2\n\t* @param {string} order - sort order: asc or desc\n\t* @param {jQuery.fn.jplist.models.Path} path - path object\t\n\t*/\n\tvar sortNumbers = function(dataitem1, dataitem2, order, path){\n\t\n\t\tvar pathitem1\n\t\t\t\t,pathitem2\n\t\t\t\t,number1\n\t\t\t\t,number2\n\t\t\t\t,result;\n\t\t\t\n\t\t\tpathitem1 = dataitem1.findPathitem(path);\n\t\t\tpathitem2 = dataitem2.findPathitem(path);\t\t\t\n\t\t\t\n\t\t\tif(pathitem1 && pathitem2){\n\t\t\t\t//remove other characters\n\t\t\t\tnumber1 = parseFloat(pathitem1.text.replace(/[^0-9\\.]+/g,''));\n\t\t\t\tnumber2 = parseFloat(pathitem2.text.replace(/[^0-9\\.]+/g,''));\n\t\t\t\t\n\t\t\t\tif(number1 == number2){\n\t\t\t\t\tresult = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(order == 'asc'){\n\t\t\t\t\t\tif(isNaN(number1)){\n\t\t\t\t\t\t\tresult = 1;\n\t\t\t\t\t\t}\t\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tif(isNaN(number2)){\n\t\t\t\t\t\t\t\tresult = -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tresult = number1 - number2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(isNaN(number1)){\n\t\t\t\t\t\t\tresult = 1;\n\t\t\t\t\t\t}\t\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tif(isNaN(number2)){\n\t\t\t\t\t\t\t\tresult = -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tresult = number2 - number1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn 0;\n\t\t\t}\n\t};\n\t\t\n\t/**\n\t* sort text\n\t* @param {jQuery.fn.jplist.models.Dataitem} dataitem1\n\t* @param {jQuery.fn.jplist.models.Dataitem} dataitem2\n\t* @param {string} order - sort order: asc or desc\n\t* @param {jQuery.fn.jplist.models.Path} path - path object\n\t* @param {string} ignore - remove characters regex expression\n\t*/\n\tvar sortText = function(dataitem1, dataitem2, order, path, ignore){\n\t\t\n\t\tvar pathitem1\n\t\t\t,pathitem2\n\t\t\t,text1\n\t\t\t,text2\n\t\t\t,regexExpr;\n\t\t\n\t\tpathitem1 = dataitem1.findPathitem(path);\n\t\tpathitem2 = dataitem2.findPathitem(path);\t\n\t\t\n\t\tif(pathitem1 && pathitem2){\n\t\t\n\t\t\tif(ignore){\n\t\t\t\n\t\t\t\t//create regex\n\t\t\t\tregexExpr = new RegExp(ignore, 'ig');\n\t\t\t\t\n\t\t\t\t//remove other characters\n\t\t\t\ttext1 = pathitem1.text.toString().replace(regexExpr, '').toLowerCase();\n\t\t\t\ttext2 = pathitem2.text.toString().replace(regexExpr, '').toLowerCase();\n\n\t\t\t}\n\t\t\telse{\n\t\t\t\t\n\t\t\t\t//remove other characters\n\t\t\t\ttext1 = pathitem1.text.toString().toLowerCase(); //.replace(/[^a-zA-Z0-9]+/g,'')\n\t\t\t\ttext2 = pathitem2.text.toString().toLowerCase(); //.replace(/[^a-zA-Z0-9]+/g,'')\n\t\t\t}\n\t\t\t\n\t\t\tif(text1 == text2){\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(order == 'asc'){\n\t\t\t\t\treturn text1 > text2 ? 1 : -1;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn text1 < text2 ? 1 : -1; \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\treturn 0;\n\t\t}\n\t};\n\t\n\t/**\n\t* sort datetime\n\t* @param {jQuery.fn.jplist.models.Dataitem} dataitem1\n\t* @param {jQuery.fn.jplist.models.Dataitem} dataitem2\n\t* @param {string} order - sort order: asc or desc\n\t* @param {jQuery.fn.jplist.models.Path} path - path object\n\t* @param {string} dateTimeFormat\n\t*/\n\tvar sortDatetime = function(dataitem1, dataitem2, order, path, dateTimeFormat){\n\t\n\t\tvar pathitem1\n\t\t\t,pathitem2\n\t\t\t,date1\n\t\t\t,date2;\n\t\t\t\n\t\t\tpathitem1 = dataitem1.findPathitem(path);\n\t\t\tpathitem2 = dataitem2.findPathitem(path);\n\n\t\t\tif(pathitem1 && pathitem2){\n\n\t\t\t\t//remove other characters\n\t\t\t\tif(!$.trim(dateTimeFormat)){\n\t\t\t\t\tdate1 = new Date(Date.parse(pathitem1.text)); \n\t\t\t\t\tdate2 = new Date(Date.parse(pathitem2.text)); \n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tdate1 = jQuery.fn.jplist.actions.Sort.formatDatetime(pathitem1.text, dateTimeFormat);\n\t\t\t\t\tdate2 = jQuery.fn.jplist.actions.Sort.formatDatetime(pathitem2.text, dateTimeFormat);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(date1 == date2){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\telse{\n\n\t\t\t\t\tif(order == 'asc'){\n\t\t\t\t\t\treturn date1 > date2 ? 1 : -1; \n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\treturn date1 < date2 ? 1 : -1; \n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn 0;\n\t\t\t}\n\t};\n\t\n\t/**\n\t* Double Sort (recursive)\n\t* @param {jQuery.fn.jplist.models.Dataitem} dataitem1\n\t* @param {jQuery.fn.jplist.models.Dataitem} dataitem2\n\t* @param {Array.<jQuery.fn.jplist.models.Status>} statuses\n\t* @param {number} index - index in the statuses array\n\t* @return {number} - -1, 0, 1\n\t*/\n\tvar doubleSort = function(dataitem1, dataitem2, statuses, index){\n\t\n\t\tvar result = 0\n\t\t\t,currentStatus\n\t\t\t,path\n\t\t\t,order;\n\t\t\n\t\t//check current status data type\n\t\tif(statuses.length > 0){\n\t\t\t\n\t\t\t//get current status\n\t\t\tcurrentStatus = statuses[index];\n\t\t\t\n\t\t\tif(currentStatus.data.path != 'default'){\n\t\t\t\n\t\t\t\t//get path\n\t\t\t\tpath = new jQuery.fn.jplist.models.Path(currentStatus.data.path, currentStatus.data.type);\n\t\t\t\t\n\t\t\t\t//get order\n\t\t\t\torder = currentStatus.data.order;\n\t\t\t\t\n\t\t\t\t//get datetime format\n\t\t\t\tif(!currentStatus.data.dateTimeFormat){\n\t\t\t\t\n\t\t\t\t\tcurrentStatus.data.dateTimeFormat = '';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(!currentStatus.data.ignore){\n\t\t\t\t\tcurrentStatus.data.ignore = '';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tswitch(currentStatus.data.type){\n\t\t\t\t\t\n\t\t\t\t\tcase 'text':\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tresult = sortText(dataitem1, dataitem2, order, path, currentStatus.data.ignore);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\tcase 'number':\n\t\t\t\t\t\t\n\t\t\t\t\t\tresult = sortNumbers(dataitem1, dataitem2, order, path);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\tcase 'datetime':\n\n\t\t\t\t\t\tresult = sortDatetime(dataitem1, dataitem2, order, path, currentStatus.data.dateTimeFormat);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tcase 'date':\n\t\t\t\t\t\t\n\t\t\t\t\t\tresult = sortDatetime(dataitem1, dataitem2, order, path, currentStatus.data.dateTimeFormat);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tresult = sortIndex(dataitem1, dataitem2, 'asc');\t\t\t\t\n\t\t\t}\t\n\n\t\t\t//if items are equal\n\t\t\tif(result === 0){\n\t\t\t\t\n\t\t\t\tif(index + 1 < statuses.length){\n\t\t\t\t\t\n\t\t\t\t\t//get result (recursive)\n\t\t\t\t\tresult = doubleSort(dataitem1, dataitem2, statuses, index + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n\t\n\t/**\n\t* Get datetime from string with wildcards like {year}, {month}, {day}, {hour}, {min}, {sec}\n\t* @param {Date} datetime\n\t* @param {string} format\n\t* @return {Date}\n\t*/\n\tjQuery.fn.jplist.actions.Sort.formatDatetime = function(datetime, format){\n\t\n\t\tvar formattedDatetime\n\t\t\t,replacedFormat\n\t\t\t,year\n\t\t\t,month\n\t\t\t,day\n\t\t\t,hour\n\t\t\t,minute\n\t\t\t,second;\n\t\t\t\n\t\t\t/*\n\t\t\t,specials = [\n\t\t\t  '/', '.', '*', '+', '?', '|',\n\t\t\t  '(', ')', '[', ']', '{', '}', '\\\\'\n\t\t\t];*/\n\t\t\t\n\t\t//special characters\n\t\tformat = format.replace(/\\./g, '\\\\.');\t\n\t\tformat = format.replace(/\\(/g, '\\\\(');\n\t\tformat = format.replace(/\\)/g, '\\\\)');\n\t\tformat = format.replace(/\\[/g, '\\\\[');\n\t\tformat = format.replace(/\\]/g, '\\\\]');\n\t\t\n\t\t//get year\n\t\treplacedFormat = format.replace('{year}', '(.*)');\n\t\tyear = getDatetimeFormatItem(replacedFormat, datetime);\n\t\tif(year){\n\t\t\tyear = formatTryParse('{year}', year);\n\t\t}\n\t\t\n\t\t//get day\n\t\treplacedFormat = format.replace('{day}', '(.*)');\n\t\tday = getDatetimeFormatItem(replacedFormat, datetime);\n\t\tif(day){\n\t\t\tday = formatTryParse('{day}', day);\n\t\t}\n\t\t\n\t\t//get month: integer value representing the month, beginning with 0 for January to 11 for December\t\t\n\t\treplacedFormat = format.replace('{month}', '(.*)');\n\t\tmonth = getDatetimeFormatItem(replacedFormat, datetime);\n\t\tif(month){\n\t\t\tmonth = formatTryParse('{month}', month);\t\n\t\t}\t\n\t\t\n\t\t//get hour: integer value representing the hour of the day (0-23)\n\t\treplacedFormat = format.replace('{hour}', '(.*)');\n\t\thour = getDatetimeFormatItem(replacedFormat, datetime);\n\t\tif(hour){\n\t\t\thour = formatTryParse('{hour}', hour);\n\t\t}\n\t\t\n\t\t//get minute: integer value representing the minute segment (0-59) of a time reading\n\t\treplacedFormat = format.replace('{min}', '(.*)');\n\t\tminute = getDatetimeFormatItem(replacedFormat, datetime);\n\t\tif(minute){\n\t\t\tminute = formatTryParse('{min}', minute);\n\t\t}\n\t\t\n\t\t//get second: integer value representing the minute segment (0-59) of a time reading\n\t\treplacedFormat = format.replace('{sec}', '(.*)');\n\t\tsecond = getDatetimeFormatItem(replacedFormat, datetime);\n\t\tif(second){\n\t\t\tsecond = formatTryParse('{sec}', second);\n\t\t}\n\t\t\n\t\t//check NaN/null/undefined values ---------------------------------------------------\n\t\tif(!year || isNaN(year)){\n\t\t\tyear = 1900;\n\t\t}\n\t\t\n\t\tif(!month || isNaN(month)){\n\t\t\tmonth = 0;\n\t\t}\n\t\t\n\t\tif(!day || isNaN(day)){\n\t\t\tday = 1;\n\t\t}\n\t\t\n\t\tif(!hour || isNaN(hour)){\n\t\t\thour = 0;\n\t\t}\n\t\t\n\t\tif(!minute || isNaN(minute)){\n\t\t\tminute = 0;\n\t\t}\n\t\t\n\t\tif(!second || isNaN(second)){\n\t\t\tsecond = 0;\n\t\t}\n\t\t\n\t\tformattedDatetime = new Date(year, month, day, hour, minute, second);\n\t\t\n\t\treturn formattedDatetime;\n\t};\n\t\t\n\t/**\n\t* Main Sort\n\t* @param {Array.<jQuery.fn.jplist.models.Status>} statuses\n\t* @param {Array.<jQuery.fn.jplist.models.Dataitem>} dataview - collection dataview\n\t* @memberOf jQuery.fn.jplist.actions.Sort\n\t*/\n\tjQuery.fn.jplist.actions.Sort.doubleSort = function(statuses, dataview){\n\t\n\t\tdataview.sort(function(dataitem1, dataitem2){\t\n\t\t\treturn doubleSort(dataitem1, dataitem2, statuses, 0);\n\t\t});\n\t};\n\t\n\t/**\n\t* Sort numbers api (not used directly in the plugin)\n\t* @param {string} order - sort order: asc or desc\n\t* @param {jQuery.fn.jplist.models.Path} path - path object\n\t* @param {Array.<jQuery.fn.jplist.models.Dataitem>} dataview - collection dataview\n\t* @memberOf jQuery.fn.jplist.actions.Sort\n\t*/\n\tjQuery.fn.jplist.actions.Sort.numbers = function(order, path, dataview){\n\t\n\t\tdataview.sort(function(dataitem1, dataitem2){\n\t\t\treturn sortNumbers(dataitem1, dataitem2, order, path);\n\t\t});\n\t};\n\t\n\t/**\n\t* Sort text api (not used directly in the plugin)\n\t* @param {string} order - sort order: asc or desc\n\t* @param {jQuery.fn.jplist.models.Path} path - path object\n\t* @param {Array.<jQuery.fn.jplist.models.Dataitem>} dataview - collection dataview\n\t* @param {string} ignore - remove characters regex expression\n\t* @memberOf jQuery.fn.jplist.actions.Sort\n\t*/\n\tjQuery.fn.jplist.actions.Sort.text = function(order, path, dataview, ignore){\n\t\n\t\tdataview.sort(function(dataitem1, dataitem2){\n\t\t\treturn sortText(dataitem1, dataitem2, order, path, ignore);\n\t\t});\n\t};\n\t\t\n\t/**\n\t* Sort datetime api (not used directly in the plugin)\n\t* @param {string} order - sort order: asc or desc\n\t* @param {jQuery.fn.jplist.models.Path} path - path object\n\t* @param {Array.<jQuery.fn.jplist.models.Dataitem>} dataview - collection dataview\n\t* @param {string} dateTimeFormat\n\t* @memberOf jQuery.fn.jplist.actions.Sort\n\t*/\n\tjQuery.fn.jplist.actions.Sort.datetime = function(order, path, dataview, dateTimeFormat){\n\t\n\t\tdataview.sort(function(dataitem1, dataitem2){\n\t\t\treturn sortDatetime(dataitem1, dataitem2, order, path, dateTimeFormat);\n\t\t});\n\t};\n\t\n\n})(jQuery);\n\n"],"sourceRoot":"/source/"}