{"version":3,"sources":["map/jplist/view/panel-control.js"],"names":[],"mappings":"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","file":"map/jplist/view/panel-control.js","sourcesContent":["/*global jQuery:false */\n(function($){\n\t'use strict';\t\t\n\n\t/**\n\t* render control html\n\t* @param {Object} self - jplist panel control type 'this' object\n\t*/\n\tvar render = function(self){\n\t\t\n\t\tvar render;\n\t\t\n\t\tif(self.controlTypeClass){\t\n\t\t\t\n\t\t\t//get render method\n\t\t\trender = self.controlTypeClass['render'];\n\t\t\t\n\t\t\tif(render && $.isFunction(render)){\n\t\t\t\t\t\t\t\n\t\t\t\t//render html\n\t\t\t\trender(self);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* get control deep link\t\n\t* @param {Object} self - jplist panel control type 'this' object\n\t* @return {string} deep link\n\t*/\n\tvar getDeepLink = function(self){\n\t\t\n\t\tvar getDeepLinkFunc\n\t\t\t,deepLink = '';\n\t\t\n\t\tif(self.controlTypeClass){\t\n\t\t\t\n\t\t\t//get getStatusByDeepLink method\n\t\t\tgetDeepLinkFunc = self.controlTypeClass['getDeepLink'];\n\t\t\t\n\t\t\tif(getDeepLinkFunc && $.isFunction(getDeepLinkFunc)){\n\t\t\t\t\t\t\n\t\t\t\t//call function\n\t\t\t\tdeepLink = getDeepLinkFunc(self);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn deepLink;\n\t};\n\t\n\t/**\n\t* set control deep link\t\n\t* @param {Object} self - jplist panel control type 'this' object\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t*/\n\tvar getStatusByDeepLink = function(self, propName, propValue){\n\t\t\n\t\tvar getStatusByDeepLinkFunc\n\t\t\t,status = null;\n\t\t\n\t\tif(self.controlTypeClass){\t\n\t\t\t\n\t\t\t//get getStatusByDeepLink method\n\t\t\tgetStatusByDeepLinkFunc = self.controlTypeClass['getStatusByDeepLink'];\n\t\t\t\n\t\t\tif(getStatusByDeepLinkFunc && $.isFunction(getStatusByDeepLinkFunc)){\n\t\t\t\t\t\t\n\t\t\t\t//get updated status from control's 'getStatusByDeepLink' function\n\t\t\t\tstatus = getStatusByDeepLinkFunc(self, propName, propValue);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* get all paths\n\t* @param {Object} self - jplist panel conrtol 'this' object\n\t* @return {Array.<jQuery.fn.jplist.models.Path>}\n\t*/\n\tvar getPaths = function(self){\n\t\n\t\tvar paths = []\n\t\t\t,getPaths;\n\t\t\t\n\t\tif(self.controlTypeClass){\n\t\t\t\n\t\t\t//get getPaths method\n\t\t\tgetPaths = self.controlTypeClass['getPaths'];\n\t\t\t\n\t\t\tif(getPaths && $.isFunction(getPaths)){\n\t\t\t\t\t\t\t\n\t\t\t\t//getPaths\n\t\t\t\tgetPaths(self, paths);\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn paths;\n\t};\n\t\n\t/**\n\t* get current status\n\t* @param {Object} self - jplist panel conrtol 'this' object\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @return {jQuery.fn.jplist.models.Status}\n\t*/\n\tvar getStatus = function(self, isDefault){\n\t\n\t\tvar status = null\n\t\t\t,getStatus;\n\t\t\n\t\tif(self.controlTypeClass){\n\t\t\t\n\t\t\t//get getStatus method\n\t\t\tgetStatus = self.controlTypeClass['getStatus'];\n\t\t\t\n\t\t\tif(getStatus && $.isFunction(getStatus)){\n\t\t\t\t\t\t\t\n\t\t\t\t//getStatus\n\t\t\t\tstatus = getStatus(isDefault, self);\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* set status to control\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {boolean} isCookie - is status restored from cookies\n\t*/\n\tvar setStatus = function(self, status, isCookie){\n\t\n\t\tvar setStatus;\n\t\t\n\t\tif(status.action === self.action && status.name === self.name){//status.type == self.type \n\t\t  \n\t\t   if(self.controlTypeClass){\n\t\t\t\t\n\t\t\t\t//get setStatus method\n\t\t\t\tsetStatus = self.controlTypeClass['setStatus'];\n\t\t\t\t\n\t\t\t\tif(setStatus && $.isFunction(setStatus)){\n\t\t\t\t\t\t\n\t\t\t\t\t//setStatus\n\t\t\t\t\tsetStatus(status, self, isCookie);\n\t\t\t\t}\n\t\t\t}\n\t\t }\n\t};\n\t\n\t/**\n\t* init events\n\t* @param {Object} self - jplist panel control type 'this' object\n\t*/\n\tvar initEvents = function(self){\n\t\n\t\tvar initEvents;\n\t\t\n\t\tif(self.controlTypeClass){\n\t\t\t\n\t\t\t//get initEvents method\n\t\t\tinitEvents = self.controlTypeClass['initEvents'];\n\t\t\t\n\t\t\tif(initEvents && $.isFunction(initEvents)){\n\t\t\t\t\t\t\t\n\t\t\t\t//initEvents\n\t\t\t\tinitEvents(self);\n\t\t\t}\n\t\t}\t \n\t};\n\t\n\t/**\n\t* Panel control constructor\t\n\t* @param {jQueryObject} $jplistBox - jplist jquery element\n\t* @param {Object} options - jplist options\n\t* @param {jQueryObject} $control - jquery object\n\t* @param {jQuery.fn.jplist.controller.Events} events\n\t* @return {Object} - panel control control + this\n\t* @constructor \n\t*/\n\tvar Init = function($jplistBox, options, $control, events){\n\t\t\n\t\tvar self = {\t\t\t\n\t\t\t$jplistBox: $jplistBox\n\t\t\t,options: options\t\t\t\n\t\t\t,$control: $control\n\t\t\t,events: events\n\t\t\t\n\t\t\t,type: null\n\t\t\t,action: null\n\t\t\t,name: null\n            ,category: null\n\t\t\t,cookies: true //by default control is stored in cookies (if cookies are enabled)\n\t\t\t\n\t\t\t,controlType: null\n\t\t\t,controlTypeClass: null\n\t\t\t,controlTypeOptions: null\n\t\t}\n\t\t,temp;\n\t\t\n\t\t//set controls properties\n\t\tself.type = $control.attr('data-control-type');\n\t\tself.action = $control.attr('data-control-action');\n\t\tself.name = $control.attr('data-control-name');\n        self.category = $control.attr('data-control-category');\n\t\t\n\t\t//by default control is stored in cookies (if cookies are enabled)\n\t\t//if data-control-cookies=\"false\" - control is excluded from cookies\n\t\ttemp = $control.attr('data-control-cookies');\n\t\tif(temp && temp.toString() === 'false'){\n\t\t\tself.cookies = false;\n\t\t}\n\t\t\n\t\t//init control vars\n\t\tself.controlType = self.options.control_types[self.type];\n\t\t\n\t\tif(self.controlType){\n\t\t\n\t\t\t//get control type class\n\t\t\tif(self.controlType['class_name']){\n\t\t\t\tself.controlTypeClass = jQuery.fn.jplist.controls[self.controlType['class_name']];\n\t\t\t}\n\t\t\t\n\t\t\t//get options\n\t\t\tif(self.controlType['options']){\n\t\t\t\tself.controlTypeOptions = self.controlType['options'];\n\t\t\t}\n\t\t}\n\t\t\n\t\t//render control html\n\t\trender(self);\n\t\t\n\t\treturn $.extend(this, self);\n\t};\n\t\n\t/**\n\t* API: render control html\t\n\t* @memberOf jQuery.fn.jplist.view.PanelControl#\n\t* @public\t\n\t* @name render\n\t* @function\n\t*/\n\tInit.prototype.render = function(){\n\t\trender(this);\n\t};\n\t\n\t/**\n\t* API: set control status by deep link\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.view.PanelControl#\n\t* @public\t\n\t* @name getStatusByDeepLink\n\t* @function\n\t*/\n\tInit.prototype.getStatusByDeepLink = function(propName, propValue){\n\t\treturn getStatusByDeepLink(this, propName, propValue);\n\t};\n\t\n\t/**\n\t* API: get deep link from control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.view.PanelControl#\n\t* @public\t\n\t* @name getDeepLink\n\t* @function\n\t*/\n\tInit.prototype.getDeepLink = function(){\n\t\treturn getDeepLink(this);\n\t};\n\t\n\t/**\n\t* API: get all paths\n\t* @return {Array.<jQuery.fn.jplist.models.Path>}\n\t* @memberOf jQuery.fn.jplist.view.PanelControl#\n\t* @public\t\n\t* @name getPaths\n\t* @function\n\t*/\n\tInit.prototype.getPaths = function(){\n\t\treturn getPaths(this);\n\t};\n\t\n\t/**\n\t* API: get current status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @return {jQuery.fn.jplist.models.Status}\t\n\t* @memberOf jQuery.fn.jplist.view.PanelControl#\n\t* @public\t\n\t* @name getStatus\n\t* @function\n\t*/\n\tInit.prototype.getStatus = function(isDefault){\n\t\treturn getStatus(this, isDefault);\n\t};\n\t\n\t/**\n\t* API: set status to control\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.view.PanelControl#\n\t* @public\t\n\t* @name setStatus\n\t* @function\n\t*/\n\tInit.prototype.setStatus = function(status, isCookie){\n\t\tsetStatus(this, status, isCookie);\n\t};\n\t\n\t/**\n\t* API: init controls events\t\n\t* @memberOf jQuery.fn.jplist.view.PanelControl#\n\t* @public\t\n\t* @name initEvents\n\t* @function\n\t*/\n\tInit.prototype.initEvents = function(){\n\t\tinitEvents(this);\n\t};\n\t\n\t/**\n\t* panel control \n\t* @param {jQueryObject} $jplistBox - jplist jquery element\n\t* @param {Object} options - jplist options\n\t* @param {jQueryObject} $control\t\n\t* @param {jQuery.fn.jplist.controller.Events} events\n\t* @constructor \n\t* @memberOf jQuery.fn.jplist.view.PanelControl\n\t*\n    * @class Panel control - representation of any control on the panel\n    * @memberOf jQuery.fn.jplist.view\n\t*\n\t* @property {Object} options - user options\t\n\t* @property {jQueryObject} $jplistBox - jplist root element\n\t* @property {jQueryObject} $control - control jquery element\n\t* @property {jQuery.fn.jplist.controller.Events} events\n\t*\n\t* @property {string} name - control name\n\t* @property {string} type - control type\n\t* @property {string} action - control action\n    * @property {string} category - control category\n\t* @property {string} cookies - control cookies\n\t*\n\t* @property {string} controlType - control type object\n\t* @property {string} controlTypeClass - control class\n\t* @property {string} controlTypeOptions - control options\n\t*/\n\tjQuery.fn.jplist.view.PanelControl = function($jplistBox, options, $control, events){\n\n\t\tvar self;\n\t\t\n\t\t//init constructor\n\t\tself = new Init($jplistBox, options, $control, events);\n\t\t\n\t\t//init events\n\t\tinitEvents(self);\n\t\t\n\t\t//properties\n\t\tthis.options = self['options'];\n\t\tthis.$jplistBox = self['$jplistBox'];\n\t\tthis.$control = self['$control'];\n\t\tthis.events = self['events'];\n\t\t\n\t\t//control properties\n\t\tthis.type = self['type'];\n\t\tthis.action = self['action'];\n\t\tthis.name = self['name'];\n        this.category = self['category'];\n\t\tthis.cookies = self['cookies'];\n\t\t\n\t\t//control additional properties\n\t\tthis.controlType = self['controlType'];\n\t\tthis.controlTypeClass = self['controlTypeClass'];\n\t\tthis.controlTypeOptions = self['controlTypeOptions'];\n\t\t\n\t\t//methods\n\t\tthis.render = self['render'];\n\t\tthis.getPaths = self['getPaths'];\n\t\tthis.getStatus = self['getStatus'];\n\t\tthis.setStatus = self['setStatus'];\n\t\tthis.initEvents = self['initEvents'];\n\t\tthis.getStatusByDeepLink = self['getStatusByDeepLink'];\n\t\tthis.getDeepLink = self['getDeepLink'];\n\t};\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}