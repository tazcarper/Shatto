{"version":3,"sources":["map/jplist/view/panel.js"],"names":[],"mappings":"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","file":"map/jplist/view/panel.js","sourcesContent":["(function($){\n\t'use strict';\n\t\n\t/**\n\t* get panel controls\n\t* @param {Object} self - jplist panel 'this' object\n\t* @param {jQueryObject} $controls\n\t* @return {Array.<jQuery.fn.jplist.view.PanelControl>}\n\t*/\n\tvar getPanelControls = function(self, $controls){\n\t\n\t\tvar $control\n\t\t\t,control\n\t\t\t,controls = [];\n\t\t\n\t\tfor(var i=0; i<$controls.length; i++){\n\t\t\n\t\t\t//get jquery control\n\t\t\t$control = $controls.eq(i);\n\t\t\t\n\t\t\t//create new control\n\t\t\tcontrol = new jQuery.fn.jplist.view.PanelControl(self.$jplistBox, self.options, $control, self.events);\n\t\t\t\n\t\t\t//add to the list\n\t\t\tcontrols.push(control);\n\t\t}\n\t\t\n\t\treturn controls;\n\t};\n\t\n\t/**\n\t* set controls statuses by deep link params\n\t* @param {Object} self - jplist panel 'this' object\n\t* @param {Array.<Object>} params - array of params {controlName: '...', propName: '...', propValue: '...'}\n\t* @param {Array.<jQuery.fn.jplist.view.PanelControl>} controls\n\t*/\n\tvar setDeepLinks = function(self, params, controls){\n\t\t\n\t\tvar param\n\t\t\t,controlsWithSameName\n\t\t\t,control\n\t\t\t,status\n\t\t\t,newStatuses = []\n\t\t\t,oldStatuses\n\t\t\t,isDefault = false\n\t\t\t,i;\n\t\t\n\t\tfor(i=0; i<params.length; i++){\n\t\t\t\n\t\t\t//get param\n\t\t\tparam = params[i];\n\t\t\t\n\t\t\t//get all controls with the given name\n\t\t\tcontrolsWithSameName = jQuery.fn.jplist.services.Panel.findControlsByName(controls, param.controlName);\n\t\t\t\n\t\t\tfor(var j=0; j<controlsWithSameName.length; j++){\n\t\t\t\t\n\t\t\t\t//get control\n\t\t\t\tcontrol = controlsWithSameName[j];\n\t\t\t\t\n\t\t\t\t//set key-value pair\n\t\t\t\tstatus = control.getStatusByDeepLink(param.propName, param.propValue);\n\t\t\t\t\n\t\t\t\tif(status){\n\t\t\t\t\tnewStatuses.push(status);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\t//get current statuses\n\t\toldStatuses = jQuery.fn.jplist.services.Panel.getStatuses(self.controls, isDefault);\n\t\t\t\t\n\t\tfor(i=0; i<newStatuses.length; i++){\t\t\t\n\t\t\tjQuery.fn.jplist.services.Panel.mergeWithStatus(oldStatuses, newStatuses[i]);\n\t\t}\n\t\t\n\t\t//send ask event\n\t\tself.$jplistBox.trigger(self.options.ask_event, [oldStatuses]);\n\t};\n\t\n\t/**\n\t* get params from deep link url\n\t* @param {Object} self - jplist panel 'this' object\n\t* @param {string} hash - for example: paging-number=5~~sort-path~type~order=.title~text~asc~~paging-currentPage=1\n\t* @return {Array.<Object>} array of params {controlName: '...', propName: '...', propValue: '...'}\n\t*/\n\tvar getParamsFromDeepLinkUrl = function(self, hash){\n\t\t\n\t\tvar sections = []\n\t\t\t,section\n\t\t\t,params = []\n\t\t\t,param\n\t\t\t,pairSections\n\t\t\t,keySections\n\t\t\t,key\n\t\t\t,value;\n\t\t\n\t\tif(self.options.deep_linking && $.trim(hash) !== ''){\n\t\t\t\n\t\t\t//get sections\n\t\t\tsections = hash.split('~~');\n\t\t\t\n\t\t\tfor(var i=0; i<sections.length; i++){\n\t\t\t\t\n\t\t\t\t//get section\n\t\t\t\tsection = sections[i];\n\t\t\t\t\n\t\t\t\t//get pair: key + value\n\t\t\t\tpairSections = section.split('=');\n\t\t\t\t\n\t\t\t\tif(pairSections.length === 2){\n\t\t\t\t\t\n\t\t\t\t\t//get pair\n\t\t\t\t\tkey = pairSections[0];\n\t\t\t\t\tvalue = pairSections[1];\n\t\t\t\t\t\n\t\t\t\t\t//get key sections\n\t\t\t\t\tkeySections = key.split('--');\n\t\t\t\t\t\n\t\t\t\t\tif(keySections.length === 2){\n\t\t\t\t\t\t\n\t\t\t\t\t\tparam = {\n\t\t\t\t\t\t\tcontrolName: keySections[0]\n\t\t\t\t\t\t\t,propName: keySections[1]\n\t\t\t\t\t\t\t,propValue: value\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tparams.push(param);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn params;\n\t};\n\t\n\t/**\n\t* get deep links url from controls\n\t* @param {Object} self - jplist panel 'this' object\n\t* @param {Array.<jQuery.fn.jplist.view.PanelControl>} controls\n\t* @return {string} url\n\t*/\n\tvar getDeepLinksUrl = function(self, controls){\n\t\n\t\tvar control\n\t\t\t,url = ''\n\t\t\t,deepLinksArr = []\n\t\t\t,deepLink = '';\n\t\t\n\t\tfor(var i=0; i<controls.length; i++){\n\t\t\t\n\t\t\t//get control\n\t\t\tcontrol = controls[i];\n\t\t\t\n\t\t\t//get deep link\n\t\t\tdeepLink = $.trim(control.getDeepLink());\n\t\t\t\n\t\t\t//add it to the list\n\t\t\tif((deepLink !== '') && ($.inArray(deepLink, deepLinksArr) === -1)){\n\t\t\t\tdeepLinksArr.push(deepLink);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//init deep links url\n\t\turl = deepLinksArr.join('~~');\n\t\t\n\t\treturn url;\n\t};\n\t\n\t/**\n\t* set sticky position\n\t* @param {jQueryObject} $stickyEl - sticky element on the panel\n\t*/\n\tvar setStickyPosition = function($stickyEl){\n\t\t\n\t\tvar scrollTop = $(window).scrollTop()\n\t\t\t,top;\n\t\t\n\t\t//get top value\n\t\ttop = Number($stickyEl.data('top'));\n\t\t\n\t\tif(!isNaN(top)){\n\t\t\n\t\t\tif (scrollTop > top){ \n\t\t\t\t$stickyEl.addClass('jplist-sticky');\n\t\t\t}\n\t\t\telse{\n\t\t\t\t$stickyEl.removeClass('jplist-sticky');\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* init sticky elements\n\t* @param {jQueryObject} $sticky - sticky elements on the panel\n\t*/\n\tvar initSticky = function(self, $sticky){\n\t\t\t\n\t\t$sticky.each(function(){\n\t\t\t\n\t\t\tvar $stickyEl = $(this)\n\t\t\t\t,top = $stickyEl.offset().top;\n\t\t\t\n\t\t\t//save top value\n\t\t\t$stickyEl.data('top', top);\n\t\t\t\n\t\t\t//set position first time\n\t\t\tsetStickyPosition($stickyEl);\n\t\t});\n\t\t\n\t\t$(window).scroll(function(){\n\t\t\t\n\t\t\t$sticky.each(function(){\n\t\t\t\t\t\t\t\n\t\t\t\t//set position first time\n\t\t\t\tsetStickyPosition( $(this));\n\t\t\t});\n\t\t});\n\t};\n\t\n\t/**\n\t* init events\n\t* @param {Object} self - jplist panel 'this' object\n\t*/\n\tvar initEvents = function(self){\n\t\t\n\t\tvar control\n\t\t\t,NOT_RESTORED_FROM_COOKIES = false\n\t\t\t,RESTORED_FROM_COOKIES = true;\n\t\t\n\t\t//init events for every control in the panel\n\t\tfor(var i=0; i<self.controls.length; i++){\n\t\t\n\t\t\t//get control type\n\t\t\tcontrol = self.controls[i];\n\t\t\t\n\t\t\t//init control events\n\t\t\tcontrol.initEvents();\t\t\t\n\t\t}\n\t\t\n\t\t//event from controller to panel after html rebuild\n\t\tself.$jplistBox.on(self.options.answer_event, function(event, statusesArray, collection){\n\t\t\t\n\t\t\t//set statuses\n\t\t\tjQuery.fn.jplist.services.Panel.setStatuses(self.controls, statusesArray, NOT_RESTORED_FROM_COOKIES);\n\t\t});\n\t\t\n\t\t//event to panel -> panel sends ask event\n\t\tself.$jplistBox.on(self.options.force_ask_event, function(event, isDefault){\n\t\t\n\t\t\tvar statuses;\n\t\t\t\n\t\t\t//get current statuses\n\t\t\tstatuses = jQuery.fn.jplist.services.Panel.getStatuses(self.controls, isDefault);\n\t\t\t\n\t\t\t//trigger ask event\n\t\t\tself.$jplistBox.trigger(self.options.ask_event, [statuses]);\n\t\t});\t\t\n\t\t\n\t\t//event to panel -> restore panel from event data (statuses array)\n\t\tself.$jplistBox.on(self.options.restore_event, function(event, statusesArray){\n\t\t\t\n\t\t\t//restore drop downs\n\t\t\tjQuery.fn.jplist.services.Panel.setStatuses(self.controls, statusesArray, RESTORED_FROM_COOKIES);\n\t\t\t\n\t\t\t//ask event\n\t\t\tself.$jplistBox.trigger(self.options.ask_event, [statusesArray]);\n\t\t});\t\n\t\t\n\t\t//event to panel -> get all statuses and merge them with the given status, then send ask event\n\t\tself.$jplistBox.on(self.options.status_event, function(event, status){\t\t\t\n\t\t\t\n\t\t\tvar statuses\n\t\t\t\t,isDefault = false;\n\t\t\t\t\t\t\n\t\t\t//get current statuses\n\t\t\tstatuses = jQuery.fn.jplist.services.Panel.getStatuses(self.controls, isDefault);\n\t\t\t\n\t\t\t//merge\n\t\t\tstatuses = jQuery.fn.jplist.services.Panel.mergeWithStatus(statuses, status);\n\t\t\t\n\t\t\t//send ask event\n\t\t\tself.$jplistBox.trigger(self.options.ask_event, [statuses]);\n\t\t});\n\t\t\n\t\t//event to panel -> get deep links from all panel controls\n\t\tself.$jplistBox.on(self.options.change_url_deep_links_event, function(event){\t\n\t\t\n\t\t\tvar deepLinkUrl = '';\n\t\t\t\n\t\t\tif(self.options.deep_linking){\n\t\t\t\t\n\t\t\t\t//get deep link url\n\t\t\t\tdeepLinkUrl = getDeepLinksUrl(self, self.controls);\n\t\t\t\t\n\t\t\t\t//set new hash\n\t\t\t\t//window.location.hash = deepLinkUrl;\n\t\t\t\tjQuery.fn.jplist.services.Helper.replaceHash(deepLinkUrl);\n\t\t\t}\n\t\t});\n\t\t\n\t\t//event to panel -> set panel controls statuses by their deep links\n\t\tself.$jplistBox.on(self.options.set_deep_links_event, function(event){\t\n\t\t\t\n\t\t\tvar hash = $.trim(window.location.hash.replace('#', ''))\n\t\t\t\t,params;\n\t\t\t\n\t\t\t//set deep links\n\t\t\tparams = getParamsFromDeepLinkUrl(self, hash);\n\t\t\t\n\t\t\tif(params.length <= 0){\n\t\t\t\t\n\t\t\t\t//send panel redraw event\n\t\t\t\tself.$jplistBox.trigger(self.options.force_ask_event, [true]);\n\t\t\t}\n\t\t\telse{\t\t\t\t\n\t\t\t\tsetDeepLinks(self, params, self.controls);\t\t\t\t\n\t\t\t}\t\t\t\n\t\t});\n\t\t\n\t\t/**\n\t\t* bind rebuild panel event\n\t\t* @param {Object} event\n\t\t* @param {Function} callback\n\t\t*/\n\t\tself.$jplistBox.on(self.options.rebuild_panel_event, function(event, callback){\n\t\t\t\n\t\t\t//init panel controls\n\t\t\tself.$controls = self.$panel.find('[data-control-type]');\t\t\t\n\t\t\tself.controls = getPanelControls(self, self.$controls);\n\t\t\t\n\t\t\t//get panel paths\n\t\t\tself.paths = jQuery.fn.jplist.services.Panel.getPaths(self.controls);\n\t\t\t\n\t\t\t//init events for every control in the panel\n\t\t\tfor(var i=0; i<self.controls.length; i++){\n\t\t\t\n\t\t\t\t//get control type\n\t\t\t\tcontrol = self.controls[i];\n\t\t\t\t\n\t\t\t\t//init control events\n\t\t\t\tcontrol.initEvents();\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif($.isFunction(callback)){\n\t\t\t\tcallback(self.$controls, self.controls, self.paths);\n\t\t\t}\n\t\t});\t\t\n\t};\n\t\n\t/**\n\t* panel constructor\n\t* @param {jQueryObject} $jplistBox - jplist jquery element\n\t* @param {Object} options - jplist options\n\t* @param {jQuery.fn.jplist.controller.Events} events\n\t* @return {Object} - panel + this\n\t* @constructor \n\t*/\n\tvar Init = function($jplistBox, options, events){\n\t\n\t\tvar self = {\n\t\t\toptions: options\t//user options\t\n\t\t\t,$jplistBox: $jplistBox //jplist container\n\t\t\t,$panel: $jplistBox.find(options.panel_path) //panel jquery element\t\t\n\t\t\t,$controls: null //jquery controls\n\t\t\t,$sticky: null\n\t\t\t,events: events\n\t\t\t\t\t\n\t\t\t,paths: [] //all paths\t\n\t\t\t,controls: [] //panel controls\n\t\t};\t\t\t\n\n\t\t//init panel controls\n\t\tself.$controls = self.$panel.find('[data-control-type]');\t\t\t\n\t\tself.controls = getPanelControls(self, self.$controls);\n\t\t\n\t\t//get panel paths\n\t\tself.paths = jQuery.fn.jplist.services.Panel.getPaths(self.controls);\n\t\t\n\t\t//find sticky elements\n\t\tself.$sticky = self.$jplistBox.find('[data-sticky=\"true\"]');\n\t\t\n\t\t//init sticky\n\t\tif(self.$sticky.length > 0){\n\t\t\tinitSticky(self, self.$sticky);\n\t\t}\n\t\t\n\t\t//init events\n\t\tinitEvents(self);\n\t\t\n\t\treturn $.extend(this, self);\n\t};\n\t\n\t/**\n\t* Panel constructor\n\t* @param {jQueryObject} $jplistBox - jplist jquery element\n\t* @param {Object} options - jplist options\n\t* @param {jQuery.fn.jplist.controller.Events} events\n\t* @constructor \n    * @class Panel class - representation of jplist panel object\n    * @memberOf jQuery.fn.jplist\n\t*\n\t* @property {Object} options - user options\t\n\t* @property {jQueryObject} $jplistBox - jplist root element\n\t* @property {jQueryObject} $panel - panel jquery element\n\t* @property {jQueryObject} $sticky - sticky elements on the panel\n\t* @property {jQuery.fn.jplist.controller.Events} events\n\t* @property {jQueryObject} $controls - jquery controls list\n\t* @property {Array.<jQuery.fn.jplist.models.Path>} paths - all controls paths\n\t* @property {Array.<jQuery.fn.jplist.view.PanelControl>} paths - all controls\n\t*/\n\tjQuery.fn.jplist.view.Panel = function($jplistBox, options, events){\n\t\n\t\tvar self;\t\n\n\t\t//call constructor\n\t\tself = new Init($jplistBox, options, events);\n\t\t\n\t\t//properties\n\t\tthis.paths = self['paths'];\n\t\tthis.controls = self['controls'];\n\t};\n})(jQuery);"],"sourceRoot":"/source/"}