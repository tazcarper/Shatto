{"version":3,"sources":["map/jplist/controls/toggle-filters/button-filter-group.js"],"names":[],"mappings":"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","file":"map/jplist/controls/toggle-filters/button-filter-group.js","sourcesContent":["(function($){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Button filter group control\n\t* @type {Object} \n    * @class ButtonFilter - Button filter groups\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.controls.ButtonFilterGroup = {};\n\n\t/**\n\t* Render control html\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.ButtonFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonFilterGroup.render = function(control){\n\n        var $buttons = control.$control.find('[data-button]');\n\n        //in every button: save its data\n\t\t$buttons.each(function(){\t\t\t\n            $(this).data('selected', false);\n\t\t});\n\n\t\t//save data\n\t\tcontrol.$control.data('$buttons', $buttons);\n\t};\n\t\n\t/**\n\t* Get deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.controls.ButtonFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonFilterGroup.getDeepLink = function(control){\n\n        return '';\n\t};\n\t\n\t/**\n\t* Set deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.ButtonFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonFilterGroup.getStatusByDeepLink = function(control, propName, propValue){\n\t\t\n\t\treturn null;\n\t};\n\t\n\t/**\n\t* Get control paths\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths\n\t* @memberOf jQuery.fn.jplist.controls.ButtonFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonFilterGroup.getPaths = function(control, paths){\n\n        var $control = control.$control\n\t\t\t,$buttons = $control.data('$buttons')\n\t\t\t,$button\n\t\t\t,dataPath\n\t\t\t,path;\n\n\t\tif($buttons){\n\t\t\tfor(var i=0; i<$buttons.length; i++){\n\n\t\t\t\t//get checkbox\n\t\t\t\t$button = $buttons.eq(i);\n\n\t\t\t\t//get data-path\n\t\t\t\tdataPath = $button.attr('data-path');\n\n\t\t\t\tif(dataPath){\n\n\t\t\t\t\t//create path object\n\t\t\t\t\tpath = new jQuery.fn.jplist.models.Path(dataPath, 'text');\n\n\t\t\t\t\t//add path to the paths list\n\t\t\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, paths)){\n\t\t\t\t\t\tpaths.push(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Get control status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.ButtonFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonFilterGroup.getStatus = function(isDefault, control){\n\n        var $control = control.$control\n\t\t\t,$buttons = $control.data('$buttons')\n\t\t\t,data\n\t\t\t,pathGroup = []\n\t\t\t,$button\n\t\t\t,dataPath\n\t\t\t,status\n            ,i\n            ,selected;\n\n\t\tif(isDefault){\n\n\t\t\t//init path group\n\t\t\tfor(i=0; i<$buttons.length; i++){\n\n\t\t\t\t//get button\n\t\t\t\t$button = $buttons.eq(i);\n\n\t\t\t\t//get button data\n\t\t\t\tselected = $button.data('selected');\n\n\t\t\t\tif(!!selected){\n\n\t\t\t\t\t//get data-path\n\t\t\t\t\tdataPath = $button.attr('data-path');\n\n\t\t\t\t\tif(dataPath){\n\t\t\t\t\t\tpathGroup.push(dataPath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\n\t\t\t//init path group\n\t\t\tfor(i=0; i<$buttons.length; i++){\n\n\t\t\t\t//get button\n\t\t\t\t$button = $buttons.eq(i);\n\n                //get button data\n\t\t\t\tselected = $button.data('selected');\n\n                if(!!selected){\n\n                    //get data-path\n                    dataPath = $button.attr('data-path');\n\n                    if(dataPath){\n                        pathGroup.push(dataPath);\n                    }\n                }\n\n\t\t\t}\n\t\t}\n\n\t\t//init status related data\n\t\tdata = {\n             pathGroup: pathGroup\n\t\t\t,filterType: 'pathGroup'\n        };\n\n\t\t//init status\n\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Set control status\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.controls.ButtonFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonFilterGroup.setStatus = function(status, control, isCookie){\n\n        var path\n\t\t\t,$control = control.$control\n\t\t\t,$button\n\t\t\t,$buttons = $control.data('$buttons');\n\n\t\tif($buttons){\n\n\t\t\t//reset\tall buttons\n\t\t\t$buttons.each(function(){\n                $(this).removeClass('selected');\n\t\t\t});\n\n\t\t\tif(status.data && status.data.pathGroup && $['isArray'](status.data.pathGroup) && status.data.pathGroup.length > 0){\n\n\t\t\t\tfor(var i=0; i<status.data.pathGroup.length; i++){\n\n\t\t\t\t\t//get path\n\t\t\t\t\tpath = status.data.pathGroup[i];\n\n\t\t\t\t\t$button = $buttons.filter('[data-path=\"' + path + '\"]');\n\n\t\t\t\t\tif($button.length > 0){\n\t\t\t\t\t\t$button.addClass('selected');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Init control events\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.ButtonFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonFilterGroup.initEvents = function(control){\n\t\t\n\t\tvar selected\n            ,$buttons = control.$control.data('$buttons');\n\n        if($buttons){\n\n            $buttons.off('click').on('click', function(){\n\n                var $button;\n\n                //get button\n                $button = $(this);\n\n                //get selected value\n\t\t\t    selected = $button.data('selected');\n\n                //toggle value\n\t\t\t    $button.data('selected', !selected);\n\n                control.events.lastStatus = jQuery.fn.jplist.controls.ButtonFilterGroup.getStatus(false, control);\n\t\t\t    control.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\n            });\n        }\n\t};\n\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}