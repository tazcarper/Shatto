{"version":3,"sources":["map/jplist/controls/toggle-filters/button-text-filter.js"],"names":[],"mappings":"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","file":"map/jplist/controls/toggle-filters/button-text-filter.js","sourcesContent":["(function($){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Button text filter control\n\t* @type {Object} \n    * @class ButtonTextFilter - Button text filters\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter = {};\n\n\t/**\n\t* Render control html\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.render = function(control){\n\n\t\tcontrol.$control.data('selected', false);\n\t\tcontrol.$control.data('dataPath', control.$control.attr('data-path'));\n\t\tcontrol.$control.data('dataText', control.$control.attr('data-text'));\n\t};\n\t\n\t/**\n\t* Status object related data (using in communication with controller)\n\t* @param {string} dataPath - data-path attribute\n\t* @param {string} value - button text filter data-text value\n\t* @param {string} ignore - ignore characters regex (defined in javascript in control's options)\n\t* @param {Boolean} selected - if button is selected\n\t* @constructor\n\t* @function\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.statusRelatedData = function(dataPath, value, ignore, selected){\n\t\t\n\t\treturn {\n\t\t\tpath: dataPath\t\t\n\t\t\t,ignore: ignore\n\t\t\t,value: value\n\t\t\t,selected: selected\n\t\t\t,filterType: 'text' //used in controller to define filter type\n\t\t};\n\t};\n\t\n\t/**\n\t* Get deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.getDeepLink = function(control){\n\t\t\n\t\tvar deepLink = ''\n\t\t\t,status\n\t\t\t,isDefault = false;\n\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.ButtonTextFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data && status.data.selected){\n\t\t\t\t\n\t\t\t//init deep link\n\t\t\tdeepLink = control.name + '--selected=true';\n\t\t}\n\t\t\n\t\treturn deepLink;\n\t};\n\t\n\t/**\n\t* Set deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.getStatusByDeepLink = function(control, propName, propValue){\n\t\t\n\t\tvar isDefault = true\n\t\t\t,status;\n\t\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.ButtonTextFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data){\n\t\t\n\t\t\tif(propName === 'selected'){\n\t\t\t\t\n\t\t\t\t//set current page\n\t\t\t\tstatus.data.selected = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Get control paths\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.getPaths = function(control, paths){\n\t\n\t\tvar jqPath\n\t\t\t,path;\t\t\n\t\t\t\t\n\t\t//ger data-path attribute\n\t\tjqPath = control.$control.data('dataPath');\n\t\t\n\t\t//init path\n\t\tif(jqPath && $.trim(jqPath) !== ''){\n\t\t\n\t\t\tpath = new jQuery.fn.jplist.models.Path(jqPath, 'text');\n\t\t\t\t\t\t\n\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, paths)){\n\t\t\t\tpaths.push(path);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Get control status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.getStatus = function(isDefault, control){\n\t\t\n\t\tvar selected\n\t\t\t,data\n\t\t\t,status\n\t\t\t,ignore = ''\n\t\t\t,value = ''\n\t\t\t,dataPath\n\t\t\t,dataText;\n\t\t\n\t\t//get attributes\n\t\tdataPath = control.$control.data('dataPath');\n\t\tdataText = control.$control.data('dataText');\n\t\t\n\t\tif(control.controlTypeOptions && control.controlTypeOptions.ignore){\n\t\t \n\t\t\t//get ignore characters\n\t\t\tignore = control.controlTypeOptions.ignore;\n\t\t}\n\t\t\n\t\tif(isDefault){\n\t\t\tselected = false;\n\t\t}\n\t\telse{\n\t\t\t//get selected value\n\t\t\tselected = control.$control.data('selected');\n\t\t}\n\t\t\n\t\tif(selected){\n\t\t\tvalue = dataText;\n\t\t}\n\t\telse{\n\t\t\tvalue = '';\n\t\t}\n\t\t\n\t\t//create status related data object\n\t\tdata = new jQuery.fn.jplist.controls.ButtonTextFilter.statusRelatedData(dataPath, value, ignore, selected);\n\t\t\n\t\t//init status\n\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Set control status\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.setStatus = function(status, control, isCookie){\n\t\t\n\t\t//update 'data'\n\t\tcontrol.$control.data('selected', status.data.selected);\n\t\t\n\t\t//update class\n\t\tif(status.data.selected){\n\t\t\tcontrol.$control.addClass('selected');\n\t\t}\n\t\telse{\n\t\t\tcontrol.$control.removeClass('selected');\n\t\t}\n\t};\n\t\n\t/**\n\t* Init control events\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.initEvents = function(control){\n\t\t\n\t\tvar selected;\n\n        /**\n         * control on click\n         */\n\t\tcontrol.$control.off().click(function(){\n\t\t\t\n\t\t\t//get selected value\n\t\t\tselected = control.$control.data('selected');\n\t\t\t\n\t\t\t//toggle value\n\t\t\tcontrol.$control.data('selected', !selected);\n\t\t\t\n\t\t\t//update class\n\t\t\tif(selected){\n\t\t\t\tcontrol.$control.removeClass('selected');\n\t\t\t}\n\t\t\telse{\t\t\t\t\n\t\t\t\tcontrol.$control.addClass('selected');\n\t\t\t}\n\t\t\t\n\t\t\t//trigger force ask event\n\t\t\tcontrol.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\t\t});\n\t};\n\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}