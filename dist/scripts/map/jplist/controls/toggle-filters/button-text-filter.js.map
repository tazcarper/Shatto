{"version":3,"sources":["map/jplist/controls/toggle-filters/button-text-filter.js"],"names":[],"mappings":"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","file":"map/jplist/controls/toggle-filters/button-text-filter.js","sourcesContent":["(function($){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Button text filter control\n\t* @type {Object} \n    * @class ButtonTextFilter - Button text filters\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter = {};\n\n\t/**\n\t* Render control html\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.render = function(control){\n\n\t\tcontrol.$control.data('selected', false);\n\t\tcontrol.$control.data('dataPath', control.$control.attr('data-path'));\n\t\tcontrol.$control.data('dataText', control.$control.attr('data-text'));\n\t};\n\t\n\t/**\n\t* Status object related data (using in communication with controller)\n\t* @param {string} dataPath - data-path attribute\n\t* @param {string} value - button text filter data-text value\n\t* @param {string} ignore - ignore characters regex (defined in javascript in control's options)\n\t* @param {Boolean} selected - if button is selected\n\t* @constructor\n\t* @function\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.statusRelatedData = function(dataPath, value, ignore, selected){\n\t\t\n\t\treturn {\n\t\t\tpath: dataPath\t\t\n\t\t\t,ignore: ignore\n\t\t\t,value: value\n\t\t\t,selected: selected\n\t\t\t,filterType: 'text' //used in controller to define filter type\n\t\t};\n\t};\n\t\n\t/**\n\t* Get deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.getDeepLink = function(control){\n\t\t\n\t\tvar deepLink = ''\n\t\t\t,status\n\t\t\t,isDefault = false;\n\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.ButtonTextFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data && status.data.selected){\n\t\t\t\t\n\t\t\t//init deep link\n\t\t\tdeepLink = control.name + '--selected=true';\n\t\t}\n\t\t\n\t\treturn deepLink;\n\t};\n\t\n\t/**\n\t* Set deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.getStatusByDeepLink = function(control, propName, propValue){\n\t\t\n\t\tvar isDefault = true\n\t\t\t,status;\n\t\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.ButtonTextFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data){\n\t\t\n\t\t\tif(propName === 'selected'){\n\t\t\t\t\n\t\t\t\t//set current page\n\t\t\t\tstatus.data.selected = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Get control paths\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.getPaths = function(control, paths){\n\t\n\t\tvar jqPath\n\t\t\t,path;\t\t\n\t\t\t\t\n\t\t//ger data-path attribute\n\t\tjqPath = control.$control.data('dataPath');\n\t\t\n\t\t//init path\n\t\tif(jqPath && $.trim(jqPath) !== ''){\n\t\t\n\t\t\tpath = new jQuery.fn.jplist.models.Path(jqPath, 'text');\n\t\t\t\t\t\t\n\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, paths)){\n\t\t\t\tpaths.push(path);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Get control status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.getStatus = function(isDefault, control){\n\t\t\n\t\tvar selected\n\t\t\t,data\n\t\t\t,status\n\t\t\t,ignore = ''\n\t\t\t,value = ''\n\t\t\t,dataPath\n\t\t\t,dataText;\n\t\t\n\t\t//get attributes\n\t\tdataPath = control.$control.data('dataPath');\n\t\tdataText = control.$control.data('dataText');\n\t\t\n\t\tif(control.controlTypeOptions && control.controlTypeOptions.ignore){\n\t\t \n\t\t\t//get ignore characters\n\t\t\tignore = control.controlTypeOptions.ignore;\n\t\t}\n\t\t\n\t\tif(isDefault){\n\t\t\tselected = false;\n\t\t}\n\t\telse{\n\t\t\t//get selected value\n\t\t\tselected = control.$control.data('selected');\n\t\t}\n\t\t\n\t\tif(selected){\n\t\t\tvalue = dataText;\n\t\t}\n\t\telse{\n\t\t\tvalue = '';\n\t\t}\n\t\t\n\t\t//create status related data object\n\t\tdata = new jQuery.fn.jplist.controls.ButtonTextFilter.statusRelatedData(dataPath, value, ignore, selected);\n\t\t\n\t\t//init status\n\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Set control status\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.setStatus = function(status, control, isCookie){\n\t\t\n\t\t//update 'data'\n\t\tcontrol.$control.data('selected', status.data.selected);\n\t\t\n\t\t//update class\n\t\tif(status.data.selected){\n\t\t\tcontrol.$control.addClass('selected');\n\t\t}\n\t\telse{\n\t\t\tcontrol.$control.removeClass('selected');\n\t\t}\n\t};\n\t\n\t/**\n\t* Init control events\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.initEvents = function(control){\n\t\t\n\t\tvar selected;\n\n        /**\n         * control on click\n         */\n\t\tcontrol.$control.off().click(function(){\n\t\t\t\n\t\t\t//get selected value\n\t\t\tselected = control.$control.data('selected');\n\t\t\t\n\t\t\t//toggle value\n\t\t\tcontrol.$control.data('selected', !selected);\n\t\t\t\n\t\t\t//update class\n\t\t\tif(selected){\n\t\t\t\tcontrol.$control.removeClass('selected');\n\t\t\t}\n\t\t\telse{\t\t\t\t\n\t\t\t\tcontrol.$control.addClass('selected');\n\t\t\t}\n\t\t\t\n\t\t\t//trigger force ask event\n\t\t\tcontrol.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\t\t});\n\t};\n\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}