{"version":3,"sources":["map/jplist/controls/toggle-filters/button-text-filter.js"],"names":[],"mappings":"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","file":"map/jplist/controls/toggle-filters/button-text-filter.js","sourcesContent":["(function($){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Button text filter control\n\t* @type {Object} \n    * @class ButtonTextFilter - Button text filters\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter = {};\n\n\t/**\n\t* Render control html\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.render = function(control){\n\n\t\tcontrol.$control.data('selected', false);\n\t\tcontrol.$control.data('dataPath', control.$control.attr('data-path'));\n\t\tcontrol.$control.data('dataText', control.$control.attr('data-text'));\n\t};\n\t\n\t/**\n\t* Status object related data (using in communication with controller)\n\t* @param {string} dataPath - data-path attribute\n\t* @param {string} value - button text filter data-text value\n\t* @param {string} ignore - ignore characters regex (defined in javascript in control's options)\n\t* @param {Boolean} selected - if button is selected\n\t* @constructor\n\t* @function\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.statusRelatedData = function(dataPath, value, ignore, selected){\n\t\t\n\t\treturn {\n\t\t\tpath: dataPath\t\t\n\t\t\t,ignore: ignore\n\t\t\t,value: value\n\t\t\t,selected: selected\n\t\t\t,filterType: 'text' //used in controller to define filter type\n\t\t};\n\t};\n\t\n\t/**\n\t* Get deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.getDeepLink = function(control){\n\t\t\n\t\tvar deepLink = ''\n\t\t\t,status\n\t\t\t,isDefault = false;\n\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.ButtonTextFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data && status.data.selected){\n\t\t\t\t\n\t\t\t//init deep link\n\t\t\tdeepLink = control.name + '--selected=true';\n\t\t}\n\t\t\n\t\treturn deepLink;\n\t};\n\t\n\t/**\n\t* Set deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.getStatusByDeepLink = function(control, propName, propValue){\n\t\t\n\t\tvar isDefault = true\n\t\t\t,status;\n\t\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.ButtonTextFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data){\n\t\t\n\t\t\tif(propName === 'selected'){\n\t\t\t\t\n\t\t\t\t//set current page\n\t\t\t\tstatus.data.selected = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Get control paths\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.getPaths = function(control, paths){\n\t\n\t\tvar jqPath\n\t\t\t,path;\t\t\n\t\t\t\t\n\t\t//ger data-path attribute\n\t\tjqPath = control.$control.data('dataPath');\n\t\t\n\t\t//init path\n\t\tif(jqPath && $.trim(jqPath) !== ''){\n\t\t\n\t\t\tpath = new jQuery.fn.jplist.models.Path(jqPath, 'text');\n\t\t\t\t\t\t\n\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, paths)){\n\t\t\t\tpaths.push(path);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Get control status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.getStatus = function(isDefault, control){\n\t\t\n\t\tvar selected\n\t\t\t,data\n\t\t\t,status\n\t\t\t,ignore = ''\n\t\t\t,value = ''\n\t\t\t,dataPath\n\t\t\t,dataText;\n\t\t\n\t\t//get attributes\n\t\tdataPath = control.$control.data('dataPath');\n\t\tdataText = control.$control.data('dataText');\n\t\t\n\t\tif(control.controlTypeOptions && control.controlTypeOptions.ignore){\n\t\t \n\t\t\t//get ignore characters\n\t\t\tignore = control.controlTypeOptions.ignore;\n\t\t}\n\t\t\n\t\tif(isDefault){\n\t\t\tselected = false;\n\t\t}\n\t\telse{\n\t\t\t//get selected value\n\t\t\tselected = control.$control.data('selected');\n\t\t}\n\t\t\n\t\tif(selected){\n\t\t\tvalue = dataText;\n\t\t}\n\t\telse{\n\t\t\tvalue = '';\n\t\t}\n\t\t\n\t\t//create status related data object\n\t\tdata = new jQuery.fn.jplist.controls.ButtonTextFilter.statusRelatedData(dataPath, value, ignore, selected);\n\t\t\n\t\t//init status\n\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Set control status\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.setStatus = function(status, control, isCookie){\n\t\t\n\t\t//update 'data'\n\t\tcontrol.$control.data('selected', status.data.selected);\n\t\t\n\t\t//update class\n\t\tif(status.data.selected){\n\t\t\tcontrol.$control.addClass('selected');\n\t\t}\n\t\telse{\n\t\t\tcontrol.$control.removeClass('selected');\n\t\t}\n\t};\n\t\n\t/**\n\t* Init control events\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilter\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilter.initEvents = function(control){\n\t\t\n\t\tvar selected;\n\n        /**\n         * control on click\n         */\n\t\tcontrol.$control.off().click(function(){\n\t\t\t\n\t\t\t//get selected value\n\t\t\tselected = control.$control.data('selected');\n\t\t\t\n\t\t\t//toggle value\n\t\t\tcontrol.$control.data('selected', !selected);\n\t\t\t\n\t\t\t//update class\n\t\t\tif(selected){\n\t\t\t\tcontrol.$control.removeClass('selected');\n\t\t\t}\n\t\t\telse{\t\t\t\t\n\t\t\t\tcontrol.$control.addClass('selected');\n\t\t\t}\n\t\t\t\n\t\t\t//trigger force ask event\n\t\t\tcontrol.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\t\t});\n\t};\n\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}