{"version":3,"sources":["map/jplist/controls/toggle-filters/checkbox-filters.js"],"names":[],"mappings":";;AAAA,CAAC,UAAS,MAAT,EAAgB;AAChB;;;;;;;;AADgB;AAShB,QAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,cAA1B,GAA2C,EAA3C;;;;;;;AATgB,OAgBhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,cAA1B,CAAyC,MAAzC,GAAkD,UAAS,OAAT,EAAiB;;;AAGlE,MAAI,YAAY,QAAQ,QAAR,CAAiB,GAAjB,CAAqB,CAArB,EAAwB,OAAxB;;;AAHkD,MAM/D,cAAc,IAAd,EAAmB;AACrB,eAAY,KAAZ,CADqB;GAAtB;;;AANkE,SAWlE,CAAQ,QAAR,CAAiB,IAAjB,CAAsB,iBAAtB,EAAyC,SAAzC,EAXkE;EAAjB;;;;;;;;AAhBlC,OAoChB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,cAA1B,CAAyC,WAAzC,GAAuD,UAAS,OAAT,EAAiB;;AAEvE,MAAI,WAAW,EAAX;MACF,MADF;MAEE,YAAY,KAAZ;;;AAJqE,QAOvE,GAAS,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,cAA1B,CAAyC,SAAzC,CAAmD,SAAnD,EAA8D,OAA9D,CAAT,CAPuE;;AASvE,MAAG,OAAO,IAAP,IAAe,OAAO,IAAP,CAAY,SAAZ,EAAsB;;;AAGvC,cAAW,QAAQ,IAAR,GAAe,kBAAf,CAH4B;GAAxC;;AAMA,SAAO,QAAP,CAfuE;EAAjB;;;;;;;;;;AApCvC,OA8DhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,cAA1B,CAAyC,mBAAzC,GAA+D,UAAS,OAAT,EAAkB,QAAlB,EAA4B,SAA5B,EAAsC;;AAEpG,MAAI,YAAY,IAAZ;MACF,MADF;;;AAFoG,QAMpG,GAAS,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,cAA1B,CAAyC,SAAzC,CAAmD,SAAnD,EAA8D,OAA9D,CAAT,CANoG;;AAQpG,MAAG,OAAO,IAAP,EAAY;;AAEd,OAAG,aAAa,WAAb,EAAyB;;;AAG3B,WAAO,IAAP,CAAY,SAAZ,GAAwB,IAAxB;;;;AAH2B,IAA5B;GAFD;;AAYA,SAAO,MAAP,CApBoG;EAAtC;;;;;;;;AA9D/C,OA2FhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,cAA1B,CAAyC,QAAzC,GAAoD,UAAS,OAAT,EAAkB,KAAlB,EAAwB;;AAE3E,MAAI,MAAJ,EACE,IADF,EAEE,oBAFF;;;AAF2E,QAO3E,GAAS,QAAQ,QAAR,CAAiB,IAAjB,CAAsB,WAAtB,CAAT;;;AAP2E,MAUxE,MAAH,EAAU;;;AAGT,UAAO,IAAI,OAAO,EAAP,CAAU,MAAV,CAAiB,MAAjB,CAAwB,IAAxB,CAA6B,MAAjC,EAAyC,MAAzC,CAAP;;;AAHS,OAMN,CAAC,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,YAA/B,CAA4C,IAA5C,EAAkD,KAAlD,CAAD,EAA0D;AAC5D,UAAM,IAAN,CAAW,IAAX,EAD4D;IAA7D;GAND;;;AAV2E,sBAsB3E,GAAuB,QAAQ,UAAR,CAAmB,IAAnB,CAAwB,yBAAyB,QAAQ,IAAR,GAAe,0BAAxC,GAAqE,QAAQ,MAAR,GAAiB,qBAAtF,CAA/C;;;AAtB2E,SAyB3E,CAAQ,UAAR,CAAmB,IAAnB,CAAwB,kBAAxB,EAA4C,oBAA5C,EAzB2E;EAAxB;;;;;;;;;AA3FpC,OA8HhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,cAA1B,CAAyC,SAAzC,GAAqD,UAAS,SAAT,EAAoB,OAApB,EAA4B;;AAEhF,MAAI,SAAS,IAAT;MACF,IADF;MAEE,SAFF;MAGE,SAHF;MAIE,QAAQ,KAAR;MACA,oBALF;;;AAFgF,WAUhF,GAAY,QAAQ,QAAR,CAAiB,IAAjB,CAAsB,YAAtB,CAAZ;;;AAVgF,MAa7E,aAAa,UAAU,QAAV,OAAyB,IAAzB,EAA8B;;AAE7C,WAAQ,IAAR,CAF6C;GAA9C;;;AAbgF,MAmB7E,SAAH,EAAa;;;AAGZ,eAAY,QAAQ,QAAR,CAAiB,IAAjB,CAAsB,iBAAtB,CAAZ,CAHY;AAIZ,OAAG,cAAc,IAAd,EAAmB;AACrB,gBAAY,KAAZ,CADqB;IAAtB;GAJD,MAQI;;AAEH,eAAY,QAAQ,QAAR,CAAiB,GAAjB,CAAqB,CAArB,EAAwB,OAAxB,CAFT;GARJ;;AAaA,MAAG,UAAU,KAAV,EAAgB;;AAClB,UAAO;AACN,UAAM,QAAQ,QAAR,CAAiB,IAAjB,CAAsB,WAAtB,CAAN;AACC,UAAM,MAAN;AACA,gBAAY,MAAZ;AACA,eAAW,SAAX;IAJF,CADkB;GAAnB,MAQI;;;;AAGH,0BAAuB,QAAQ,UAAR,CAAmB,IAAnB,CAAwB,kBAAxB,CAAvB,CAHG;;AAKH,UAAO;AACN,UAAM,QAAQ,QAAR,CAAiB,IAAjB,CAAsB,WAAtB,CAAN;AACC,UAAM,MAAN;AACA,gBAAY,eAAZ;AACA,wBAAoB,qBAAqB,MAArB,CAA4B,UAA5B,CAApB;AACA,eAAW,SAAX;IALF,CALG;GARJ;;AAuBA,MAAG,UAAU,KAAV,EAAgB;AAClB,OAAG,SAAH,EAAa;AACZ,aAAS,IAAI,OAAO,EAAP,CAAU,MAAV,CAAiB,MAAjB,CAAwB,MAAxB,CAA+B,QAAQ,IAAR,EAAc,QAAQ,MAAR,EAAgB,QAAQ,IAAR,EAAc,IAA/E,EAAqF,QAAQ,OAAR,EAAiB,QAAQ,QAAR,CAA/G,CADY;AAEZ,WAAO,MAAP,CAFY;IAAb,MAII;AACH,SAAK,UAAL,GAAkB,EAAlB,CADG;AAEH,aAAS,IAAI,OAAO,EAAP,CAAU,MAAV,CAAiB,MAAjB,CAAwB,MAAxB,CAA+B,QAAQ,IAAR,EAAc,QAAQ,MAAR,EAAgB,QAAQ,IAAR,EAAc,IAA/E,EAAqF,QAAQ,OAAR,EAAiB,QAAQ,QAAR,CAA/G,CAFG;AAGH,WAAO,MAAP,CAHG;IAJJ;GADD,MAWI;AACH,OAAG,SAAH,EAAa;AACZ,SAAK,UAAL,GAAkB,EAAlB,CADY;AAEZ,aAAS,IAAI,OAAO,EAAP,CAAU,MAAV,CAAiB,MAAjB,CAAwB,MAAxB,CAA+B,QAAQ,IAAR,EAAc,QAAQ,MAAR,EAAgB,QAAQ,IAAR,EAAc,IAA/E,EAAqF,QAAQ,OAAR,EAAiB,QAAQ,QAAR,CAA/G,CAFY;AAGZ,WAAO,MAAP,CAHY;IAAb,MAKI;AACH,aAAS,IAAI,OAAO,EAAP,CAAU,MAAV,CAAiB,MAAjB,CAAwB,MAAxB,CAA+B,QAAQ,IAAR,EAAc,QAAQ,MAAR,EAAgB,QAAQ,IAAR,EAAc,IAA/E,EAAqF,QAAQ,OAAR,EAAiB,QAAQ,QAAR,CAA/G,CADG;AAEH,WAAO,MAAP,CAFG;IALJ;GAZD;EAvDoD;;;;;;;;;AA9HrC,OAqNhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,cAA1B,CAAyC,SAAzC,GAAqD,UAAS,MAAT,EAAiB,OAAjB,EAA0B,QAA1B,EAAmC;;AAEvF,MAAI,SAAJ;MACE,SADF;MAEE,QAAQ,KAAR;;;AAJqF,WAOvF,GAAY,QAAQ,QAAR,CAAiB,IAAjB,CAAsB,YAAtB,CAAZ;;;AAPuF,MAUpF,aAAa,UAAU,QAAV,OAAyB,IAAzB,EAA8B;;AAE7C,WAAQ,IAAR,CAF6C;GAA9C;;;AAVuF,WAgBvF,GAAY,QAAQ,QAAR,CAAiB,IAAjB,CAAsB,WAAtB,CAAZ;;;AAhBuF,MAmBpF,OAAO,IAAP,CAAY,SAAZ,KAA0B,IAA1B,EAA+B;AACjC,WAAQ,QAAR,CAAiB,GAAjB,CAAqB,CAArB,EAAwB,OAAxB,GAAkC,KAAlC,CADiC;GAAlC,MAGI;AACH,WAAQ,QAAR,CAAiB,GAAjB,CAAqB,CAArB,EAAwB,OAAxB,GAAkC,IAAlC,CADG;GAHJ;EAnBoD;;;;;;;AArNrC,OAqPhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,cAA1B,CAAyC,UAAzC,GAAsD,UAAS,OAAT,EAAiB;;AAEtE,UAAQ,QAAR,CAAiB,GAAjB,GAAuB,MAAvB,CAA8B,YAAU;AACvC,WAAQ,MAAR,CAAe,UAAf,GAA4B,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,cAA1B,CAAyC,SAAzC,CAAmD,KAAnD,EAA0D,OAA1D,CAA5B,CADuC;AAEvC,WAAQ,UAAR,CAAmB,OAAnB,CAA2B,QAAQ,OAAR,CAAgB,eAAhB,EAAiC,CAAC,KAAD,CAA5D,EAFuC;GAAV,CAA9B,CAFsE;EAAjB,CArPtC;CAAhB,CAAD,CA8PG,MA9PH","file":"map/jplist/controls/toggle-filters/checkbox-filters.js","sourcesContent":["(function(jQuery){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Checkbox filter control\n\t* @type {Object} \n    * @class CheckboxFilter - checkbox filter control\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter = {};\t\n\t\n\t/**\n\t* Render control html\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.render = function(control){\n\t\t\n\t\t//on html render: get the default values of the checkbox (if checked, true or false)\n\t\tvar isChecked = control.$control.get(0).checked;\n\t\t\n\t\t//if undefined, set false\n\t\tif(isChecked !== true){\n\t\t\tisChecked = false;\n\t\t}\n\t\t\n\t\t//save the default values to the 'data'\n\t\tcontrol.$control.data('default-checked', isChecked);\n\t};\n\t\n\t/**\n\t* Get deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.getDeepLink = function(control){\n\t\t\n\t\tvar deepLink = ''\n\t\t\t,status\n\t\t\t,isDefault = false;\n\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.CheckboxFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data && status.data.isChecked){\n\t\t\t\t\n\t\t\t//init deep link\n\t\t\tdeepLink = control.name + '--isChecked=true';\n\t\t}\n\t\t\n\t\treturn deepLink;\n\t};\n\t\t\n\t/**\n\t* Set deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.getStatusByDeepLink = function(control, propName, propValue){\n\t\t\n\t\tvar isDefault = true\n\t\t\t,status;\n\t\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.CheckboxFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data){\n\t\t\n\t\t\tif(propName === 'isChecked'){\n\t\t\t\t\n\t\t\t\t//set current page\n\t\t\t\tstatus.data.isChecked = true;\n\t\t\t\t\n\t\t\t\t//trigger status event\n\t\t\t\t//control.$jplistBox.trigger(control.options.status_event, [status]);\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Get control paths\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.getPaths = function(control, paths){\n\t\n\t\tvar jqPath\n\t\t\t,path\n\t\t\t,allCheckboxesOrPaths;\t\t\n\t\t\t\t\n\t\t//ger data-path attribute\n\t\tjqPath = control.$control.attr('data-path');\n\t\t\n\t\t//init path\n\t\tif(jqPath){\n\t\t   \n\t\t    //create path object\n\t\t\tpath = new jQuery.fn.jplist.models.Path(jqPath, 'text');\n\t\t\t\n\t\t\t//add path to the paths list\n\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, paths)){\n\t\t\t\tpaths.push(path);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//get list of all checkboxes with or logic\n\t\tallCheckboxesOrPaths = control.$jplistBox.find('[data-control-type=\"' + control.type + '\"][data-control-action=\"' + control.action + '\"][data-logic=\"or\"]');\n\t\t\n\t\t//save all checkboxes to the 'data'\n\t\tcontrol.$jplistBox.data('jplist-all-cb-or', allCheckboxesOrPaths);\n\t};\n\t\n\t/**\n\t* Get control status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.getStatus = function(isDefault, control){\n\t\t\n\t\tvar status = null\n\t\t\t,data\n\t\t\t,isChecked\n\t\t\t,dataLogic\n\t\t\t,logic = 'and'\n\t\t\t,allCheckboxesOrPaths;\n\t\t\t\n\t\t//get data-logic attribute\n\t\tdataLogic = control.$control.attr('data-logic');\n\t\t\n\t\t//get logic: or/and\n\t\tif(dataLogic && dataLogic.toString() === 'or'){\n\t\t\n\t\t\tlogic = 'or';\n\t\t}\n\t\t\n\t\t//get checkbox value:\n\t\tif(isDefault){\t\n\t\t\n\t\t\t//if default, get the value saved in 'data'\n\t\t\tisChecked = control.$control.data('default-checked');\n\t\t\tif(isChecked !== true){\n\t\t\t\tisChecked = false;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\t//if not default, get checkbox current value\n\t\t\tisChecked = control.$control.get(0).checked;\n\t\t}\t\t\n\t\t\n\t\tif(logic === 'and'){ //AND logic:\n\t\t\tdata = {\n\t\t\t\tpath: control.$control.attr('data-path')\n\t\t\t\t,type: 'text'\n\t\t\t\t,filterType: 'path'\n\t\t\t\t,isChecked: isChecked\n\t\t\t};\n\t\t}\n\t\telse{ //OR logic\t\t\n\t\t\n\t\t\t//get list of all checkboxes with or logic\n\t\t\tallCheckboxesOrPaths = control.$jplistBox.data('jplist-all-cb-or');\n\t\t\n\t\t\tdata = {\n\t\t\t\tpath: control.$control.attr('data-path')\n\t\t\t\t,type: 'text'\n\t\t\t\t,filterType: 'inverted_path'\n\t\t\t\t,checked_checkboxes: allCheckboxesOrPaths.filter(':checked')\n\t\t\t\t,isChecked: isChecked\n\t\t\t};\n\t\t}\n\t\t\n\t\t\n\t\tif(logic === 'and'){\n\t\t\tif(isChecked){\n\t\t\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\t\treturn status;\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdata.filterType = '';\n\t\t\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\t\treturn status;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(isChecked){\n\t\t\t\tdata.filterType = '';\n\t\t\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\t\treturn status;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\t\treturn status;\n\t\t\t}\n\t\t}\n\t\t\t\n\t};\n\t\n\t/**\n\t* Set control status\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.setStatus = function(status, control, isCookie){\n\t\t\n\t\tvar data_path\n\t\t\t,dataLogic\n\t\t\t,logic = 'and';\n\t\t\n\t\t//get data-logic attribute\n\t\tdataLogic = control.$control.attr('data-logic');\n\t\t\n\t\t//get logic\n\t\tif(dataLogic && dataLogic.toString() === 'or'){\n\t\t\n\t\t\tlogic = 'or';\n\t\t}\n\t\t\n\t\t//get data path\n\t\tdata_path = control.$control.attr('data-path');\n\t\t//console.log(status.data.isChecked);\n\t\t\n\t\tif(status.data.isChecked !== true){\n\t\t\tcontrol.$control.get(0).checked = false;\n\t\t}\n\t\telse{\n\t\t\tcontrol.$control.get(0).checked = true;\n\t\t}\n\t};\n\t\n\t/**\n\t* Init control events\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.initEvents = function(control){\n\t\t\n\t\tcontrol.$control.off().change(function(){\n\t\t\tcontrol.events.lastStatus = jQuery.fn.jplist.controls.CheckboxFilter.getStatus(false, control);\n\t\t\tcontrol.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\t\t});\n\t};\n\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}