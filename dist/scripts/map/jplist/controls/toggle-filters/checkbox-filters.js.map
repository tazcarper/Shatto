{"version":3,"sources":["map/jplist/controls/toggle-filters/checkbox-filters.js"],"names":[],"mappings":"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","file":"map/jplist/controls/toggle-filters/checkbox-filters.js","sourcesContent":["(function(jQuery){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Checkbox filter control\n\t* @type {Object} \n    * @class CheckboxFilter - checkbox filter control\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter = {};\t\n\t\n\t/**\n\t* Render control html\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.render = function(control){\n\t\t\n\t\t//on html render: get the default values of the checkbox (if checked, true or false)\n\t\tvar isChecked = control.$control.get(0).checked;\n\t\t\n\t\t//if undefined, set false\n\t\tif(isChecked !== true){\n\t\t\tisChecked = false;\n\t\t}\n\t\t\n\t\t//save the default values to the 'data'\n\t\tcontrol.$control.data('default-checked', isChecked);\n\t};\n\t\n\t/**\n\t* Get deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.getDeepLink = function(control){\n\t\t\n\t\tvar deepLink = ''\n\t\t\t,status\n\t\t\t,isDefault = false;\n\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.CheckboxFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data && status.data.isChecked){\n\t\t\t\t\n\t\t\t//init deep link\n\t\t\tdeepLink = control.name + '--isChecked=true';\n\t\t}\n\t\t\n\t\treturn deepLink;\n\t};\n\t\t\n\t/**\n\t* Set deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.getStatusByDeepLink = function(control, propName, propValue){\n\t\t\n\t\tvar isDefault = true\n\t\t\t,status;\n\t\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.CheckboxFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data){\n\t\t\n\t\t\tif(propName === 'isChecked'){\n\t\t\t\t\n\t\t\t\t//set current page\n\t\t\t\tstatus.data.isChecked = true;\n\t\t\t\t\n\t\t\t\t//trigger status event\n\t\t\t\t//control.$jplistBox.trigger(control.options.status_event, [status]);\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Get control paths\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.getPaths = function(control, paths){\n\t\n\t\tvar jqPath\n\t\t\t,path\n\t\t\t,allCheckboxesOrPaths;\t\t\n\t\t\t\t\n\t\t//ger data-path attribute\n\t\tjqPath = control.$control.attr('data-path');\n\t\t\n\t\t//init path\n\t\tif(jqPath){\n\t\t   \n\t\t    //create path object\n\t\t\tpath = new jQuery.fn.jplist.models.Path(jqPath, 'text');\n\t\t\t\n\t\t\t//add path to the paths list\n\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, paths)){\n\t\t\t\tpaths.push(path);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//get list of all checkboxes with or logic\n\t\tallCheckboxesOrPaths = control.$jplistBox.find('[data-control-type=\"' + control.type + '\"][data-control-action=\"' + control.action + '\"][data-logic=\"or\"]');\n\t\t\n\t\t//save all checkboxes to the 'data'\n\t\tcontrol.$jplistBox.data('jplist-all-cb-or', allCheckboxesOrPaths);\n\t};\n\t\n\t/**\n\t* Get control status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.getStatus = function(isDefault, control){\n\t\t\n\t\tvar status = null\n\t\t\t,data\n\t\t\t,isChecked\n\t\t\t,dataLogic\n\t\t\t,logic = 'and'\n\t\t\t,allCheckboxesOrPaths;\n\t\t\t\n\t\t//get data-logic attribute\n\t\tdataLogic = control.$control.attr('data-logic');\n\t\t\n\t\t//get logic: or/and\n\t\tif(dataLogic && dataLogic.toString() === 'or'){\n\t\t\n\t\t\tlogic = 'or';\n\t\t}\n\t\t\n\t\t//get checkbox value:\n\t\tif(isDefault){\t\n\t\t\n\t\t\t//if default, get the value saved in 'data'\n\t\t\tisChecked = control.$control.data('default-checked');\n\t\t\tif(isChecked !== true){\n\t\t\t\tisChecked = false;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\t//if not default, get checkbox current value\n\t\t\tisChecked = control.$control.get(0).checked;\n\t\t}\t\t\n\t\t\n\t\tif(logic === 'and'){ //AND logic:\n\t\t\tdata = {\n\t\t\t\tpath: control.$control.attr('data-path')\n\t\t\t\t,type: 'text'\n\t\t\t\t,filterType: 'path'\n\t\t\t\t,isChecked: isChecked\n\t\t\t};\n\t\t}\n\t\telse{ //OR logic\t\t\n\t\t\n\t\t\t//get list of all checkboxes with or logic\n\t\t\tallCheckboxesOrPaths = control.$jplistBox.data('jplist-all-cb-or');\n\t\t\n\t\t\tdata = {\n\t\t\t\tpath: control.$control.attr('data-path')\n\t\t\t\t,type: 'text'\n\t\t\t\t,filterType: 'inverted_path'\n\t\t\t\t,checked_checkboxes: allCheckboxesOrPaths.filter(':checked')\n\t\t\t\t,isChecked: isChecked\n\t\t\t};\n\t\t}\n\t\t\n\t\t\n\t\tif(logic === 'and'){\n\t\t\tif(isChecked){\n\t\t\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\t\treturn status;\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdata.filterType = '';\n\t\t\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\t\treturn status;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(isChecked){\n\t\t\t\tdata.filterType = '';\n\t\t\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\t\treturn status;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\t\treturn status;\n\t\t\t}\n\t\t}\n\t\t\t\n\t};\n\t\n\t/**\n\t* Set control status\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.setStatus = function(status, control, isCookie){\n\t\t\n\t\tvar data_path\n\t\t\t,dataLogic\n\t\t\t,logic = 'and';\n\t\t\n\t\t//get data-logic attribute\n\t\tdataLogic = control.$control.attr('data-logic');\n\t\t\n\t\t//get logic\n\t\tif(dataLogic && dataLogic.toString() === 'or'){\n\t\t\n\t\t\tlogic = 'or';\n\t\t}\n\t\t\n\t\t//get data path\n\t\tdata_path = control.$control.attr('data-path');\n\t\t//console.log(status.data.isChecked);\n\t\t\n\t\tif(status.data.isChecked !== true){\n\t\t\tcontrol.$control.get(0).checked = false;\n\t\t}\n\t\telse{\n\t\t\tcontrol.$control.get(0).checked = true;\n\t\t}\n\t};\n\t\n\t/**\n\t* Init control events\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxFilter.initEvents = function(control){\n\t\t\n\t\tcontrol.$control.off().change(function(){\n\t\t\tcontrol.events.lastStatus = jQuery.fn.jplist.controls.CheckboxFilter.getStatus(false, control);\n\t\t\tcontrol.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\t\t});\n\t};\n\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}