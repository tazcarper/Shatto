{"version":3,"sources":["map/jplist/controls/toggle-filters/radio-buttons-filters.js"],"names":[],"mappings":"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","file":"map/jplist/controls/toggle-filters/radio-buttons-filters.js","sourcesContent":["(function($){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Radio button filter control\n\t* @type {Object} \n    * @class RadioButtonsFilter control - radio buttons filters\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.controls.RadioButtonsFilter = {};\t\n\t\n\t/**\n\t* Render control html\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.RadioButtonsFilter\n\t*/\n\tjQuery.fn.jplist.controls.RadioButtonsFilter.render = function(control){\n\t\t\n\t\t//on html render: get the default values of the checkbox (if checked, true or false)\n\t\tvar selected = control.$control.get(0).checked;\n\t\t\n\t\t//if undefined, set false\n\t\tif(selected !== true){\n\t\t\tselected = false;\n\t\t}\n\t\t\n\t\t//save the default values to the 'data'\n\t\tcontrol.$control.data('default-checked', selected);\n\t};\n\t\n\t/**\n\t* Get control paths\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths\n\t* @memberOf jQuery.fn.jplist.controls.RadioButtonsFilter\n\t*/\n\tjQuery.fn.jplist.controls.RadioButtonsFilter.getPaths = function(control, paths){\n\t\n\t\tvar jqPath\n\t\t\t,path;\t\t\n\t\t\t\t\n\t\t//ger data-path attribute\n\t\tjqPath = control.$control.attr('data-path');\n\t\t\n\t\t//init path\n\t\tif(jqPath && $.trim(jqPath) !== ''){\n\t\t\n\t\t\tpath = new jQuery.fn.jplist.models.Path(jqPath, 'text');\n\t\t\t\n\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, paths)){\n\t\t\t\tpaths.push(path);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Get deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.controls.RadioButtonsFilter\n\t*/\n\tjQuery.fn.jplist.controls.RadioButtonsFilter.getDeepLink = function(control){\n\t\t\n\t\tvar deepLink = ''\n\t\t\t,status\n\t\t\t,isDefault = false;\n\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.RadioButtonsFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data && status.data.selected){\n\t\t\t\t\n\t\t\t//init deep link\n\t\t\tdeepLink = control.name + '--selected=true';\n\t\t}\n\t\t\n\t\treturn deepLink;\n\t};\n\t\n\t/**\n\t* Set deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.RadioButtonsFilter\n\t*/\n\tjQuery.fn.jplist.controls.RadioButtonsFilter.getStatusByDeepLink = function(control, propName, propValue){\n\t\t\n\t\tvar isDefault = true\n\t\t\t,status;\n\t\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.RadioButtonsFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data){\n\t\t\n\t\t\tif(propName === 'selected'){\n\t\t\t\t\n\t\t\t\t//set current page\n\t\t\t\tstatus.data.selected = true;\n\t\t\t\t\n\t\t\t\t//trigger status event\n\t\t\t\t//control.$jplistBox.trigger(control.options.status_event, [status]);\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Get control status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.RadioButtonsFilter\n\t*/\n\tjQuery.fn.jplist.controls.RadioButtonsFilter.getStatus = function(isDefault, control){\n\t\t\n\t\tvar status = null\n\t\t\t,data\n\t\t\t,selected;\n\t\t\n\t\tif(isDefault){\t\n\t\t\n\t\t\t//if default, get the value saved in 'data'\n\t\t\tselected = control.$control.data('default-checked');\n\t\t\tif(selected !== true){\n\t\t\t\tselected = false;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tselected = control.$control.get(0).checked;\n\t\t}\t\t\n\t\t\n\t\tdata = {\n\t\t\tpath: control.$control.attr('data-path')\n\t\t\t,type: 'text'\n\t\t\t,filterType: 'path'\n\t\t\t,selected: selected\n\t\t};\t\t\n\t\t\t\n\t\tif(selected){\n\t\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\t\n\t\t\treturn status;\n\t\t}\n\t\telse{\n\t\t\tdata.filterType = '';\n\t\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\treturn status;\n\t\t}\n\t\t\t\n\t};\n\t\n\t/**\n\t* Set control status\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.controls.RadioButtonsFilter\n\t*/\n\tjQuery.fn.jplist.controls.RadioButtonsFilter.setStatus = function(status, control, isCookie){\n\t\n\t\tif(status.data.selected !== true){\n\t\t\tcontrol.$control.get(0).checked = false;\n\t\t}\n\t\telse{\n\t\t\tcontrol.$control.get(0).checked = true;\n\t\t}\n\t};\n\t\n\t/**\n\t* Init control events\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.RadioButtonsFilter\n\t*/\n\tjQuery.fn.jplist.controls.RadioButtonsFilter.initEvents = function(control){\n\t\t\n\t\tcontrol.$control.off().change(function(){\n\t\t\tcontrol.events.lastStatus = jQuery.fn.jplist.controls.RadioButtonsFilter.getStatus(false, control);\n\t\t\tcontrol.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\t\t});\n\t};\n\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}