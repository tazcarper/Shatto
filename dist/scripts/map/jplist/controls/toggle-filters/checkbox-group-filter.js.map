{"version":3,"sources":["map/jplist/controls/toggle-filters/checkbox-group-filter.js"],"names":[],"mappings":"aAAA,CAAC,SAAS,MAAT,CAAgB,CAChB,a;;;;;GAQA,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAAgD,EAAhD,C;;;;;GAQA,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,iBAA9C,CAAkE,SAAS,SAAT,CAAmB,CAEpF,OAAO,CACN,UAAW,SADL,CAEL,WAAY,WAFP,CAAP,CAIA,CAND,C;;;;GAaA,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,MAA9C,CAAuD,SAAS,OAAT,CAAiB,CAEvE,IAAI,SAAW,QAAQ,QAAvB,CACE,YAAc,SAAS,IAAT,CAAc,aAAd,CADhB,C;AAIA,YAAY,IAAZ,CAAiB,UAAU,CAC1B,IAAI,IAAM,EAAE,IAAF,CAAV,CACA,IAAI,IAAJ,CAAS,SAAT,CAAoB,IAAI,GAAJ,CAAQ,CAAR,EAAW,OAA/B,EACA,CAHD,E;AAMA,SAAS,IAAT,CAAc,YAAd,CAA4B,WAA5B,EACA,CAbD,C;;;;;GAqBA,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,WAA9C,CAA4D,SAAS,OAAT,CAAiB,CAE5E,IAAI,SAAW,EAAf,CACE,MADF,CAEE,UAAY,KAFd,CAGE,MAAQ,EAHV,C;AAMA,OAAS,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,SAA9C,CAAwD,SAAxD,CAAmE,OAAnE,CAAT,CAEA,GAAG,OAAO,IAAP,EAAe,EAAE,SAAF,EAAa,OAAO,IAAP,CAAY,SAAzB,CAAf,EAAsD,OAAO,IAAP,CAAY,SAAZ,CAAsB,MAAtB,CAA+B,CAAxF,CAA0F,CAEzF,IAAI,IAAI,EAAE,CAAV,CAAa,EAAE,OAAO,IAAP,CAAY,SAAZ,CAAsB,MAArC,CAA6C,GAA7C,CAAiD,CAEhD,GAAG,QAAU,EAAb,CAAgB,CACf,OAAS,GAAT,CACA,CAED,OAAS,OAAO,IAAP,CAAY,SAAZ,CAAsB,CAAtB,CAAT,CACA,C;AAGD,SAAW,QAAQ,IAAR,CAAe,cAAf,CAAgC,KAA3C,CACA,CAED,OAAO,QAAP,CACA,CA1BD,C;;;;;;;GAoCA,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,mBAA9C,CAAoE,SAAS,OAAT,CAAkB,QAAlB,CAA4B,SAA5B,CAAsC,CAEzG,IAAI,UAAY,IAAhB,CACE,MADF,CAEE,QAFF,C;AAKA,OAAS,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,SAA9C,CAAwD,SAAxD,CAAmE,OAAnE,CAAT,CAEA,GAAG,OAAO,IAAV,CAAe,CAEd,GAAG,WAAa,WAAhB,CAA4B,CAE3B,SAAW,UAAU,KAAV,CAAgB,GAAhB,CAAX,CAEA,GAAG,SAAS,MAAT,CAAkB,CAArB,CAAuB,CAEtB,OAAO,IAAP,CAAY,SAAZ,CAAwB,QAAxB,C;;AAIA,CACD,CACD,CAED,OAAO,MAAP,CACA,CA1BD,C;;;;;GAkCA,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,QAA9C,CAAyD,SAAS,OAAT,CAAkB,KAAlB,CAAwB,CAEhF,IAAI,SAAW,QAAQ,QAAvB,CACE,WAAa,SAAS,IAAT,CAAc,YAAd,CADf,CAEE,EAFF,CAGE,QAHF,CAIE,IAJF,CAMA,GAAG,UAAH,CAAc,CACb,IAAI,IAAI,EAAE,CAAV,CAAa,EAAE,WAAW,MAA1B,CAAkC,GAAlC,CAAsC,C;AAGrC,GAAK,WAAW,EAAX,CAAc,CAAd,CAAL,C;AAGA,SAAW,GAAG,IAAH,CAAQ,WAAR,CAAX,CAEA,GAAG,QAAH,CAAY,C;AAGX,KAAO,IAAI,OAAO,EAAP,CAAU,MAAV,CAAiB,MAAjB,CAAwB,IAA5B,CAAiC,QAAjC,CAA2C,MAA3C,CAAP,C;AAGA,GAAG,CAAC,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,YAA/B,CAA4C,IAA5C,CAAkD,KAAlD,CAAJ,CAA6D,CAC5D,MAAM,IAAN,CAAW,IAAX,EACA,CACD,CACD,CACD,CAED,CA9BD,C;;;;;;GAuCA,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,SAA9C,CAA0D,SAAS,SAAT,CAAoB,OAApB,CAA4B,CAErF,IAAI,SAAW,QAAQ,QAAvB,CACE,YAAc,SAAS,IAAT,CAAc,YAAd,CADhB,CAEE,IAFF,CAGE,UAAY,EAHd,CAIE,GAJF,CAKE,MALF,CAME,QANF,CAOE,MAPF,CAQW,CARX,CAUA,GAAG,SAAH,CAAa,C;AAGZ,IAAI,EAAE,CAAN,CAAS,EAAE,YAAY,MAAvB,CAA+B,GAA/B,CAAmC,C;AAGlC,IAAM,YAAY,EAAZ,CAAe,CAAf,CAAN,C;AAGA,OAAS,IAAI,IAAJ,CAAS,SAAT,CAAT,CAEA,GAAG,CAAC,CAAC,MAAL,CAAY,C;AAGX,SAAW,IAAI,IAAJ,CAAS,WAAT,CAAX,CAEA,GAAG,QAAH,CAAY,CACX,UAAU,IAAV,CAAe,QAAf,EACA,CACD,CACD,CACD,CArBD,KAsBI,C;AAGH,IAAI,EAAE,CAAN,CAAS,EAAE,YAAY,MAAvB,CAA+B,GAA/B,CAAmC,C;AAGlC,IAAM,YAAY,EAAZ,CAAe,CAAf,CAAN,C;AAGA,SAAW,IAAI,IAAJ,CAAS,WAAT,CAAX,CAEA,GAAG,UAAY,IAAI,GAAJ,CAAQ,CAAR,EAAW,OAA1B,CAAkC,CACjC,UAAU,IAAV,CAAe,QAAf,EACA,CACD,CACD,C;AAGD,KAAO,IAAI,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,iBAAlD,CAAoE,SAApE,CAAP,C;AAGA,OAAS,IAAI,OAAO,EAAP,CAAU,MAAV,CAAiB,MAAjB,CAAwB,MAA5B,CAAmC,QAAQ,IAA3C,CAAiD,QAAQ,MAAzD,CAAiE,QAAQ,IAAzE,CAA+E,IAA/E,CAAqF,QAAQ,OAA7F,CAAsG,QAAQ,QAA9G,CAAT,CAEA,OAAO,MAAP,CACA,CA1DD,C;;;;;;GAmEA,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,SAA9C,CAA0D,SAAS,MAAT,CAAiB,OAAjB,CAA0B,QAA1B,CAAmC,CAE5F,IAAI,IAAJ,CACE,SAAW,QAAQ,QADrB,CAEE,GAFF,CAGE,YAAc,SAAS,IAAT,CAAc,YAAd,CAHhB,CAKA,GAAG,WAAH,CAAe,C;AAGd,YAAY,IAAZ,CAAiB,UAAU,CAC1B,EAAE,IAAF,EAAQ,GAAR,CAAY,CAAZ,EAAe,OAAf,CAAyB,KAAzB,CACA,CAFD,EAIA,GAAG,OAAO,IAAP,EAAe,OAAO,IAAP,CAAY,SAA3B,EAAwC,EAAE,SAAF,EAAa,OAAO,IAAP,CAAY,SAAzB,CAAxC,EAA+E,OAAO,IAAP,CAAY,SAAZ,CAAsB,MAAtB,CAA+B,CAAjH,CAAmH,CAElH,IAAI,IAAI,EAAE,CAAV,CAAa,EAAE,OAAO,IAAP,CAAY,SAAZ,CAAsB,MAArC,CAA6C,GAA7C,CAAiD,C;AAGhD,KAAO,OAAO,IAAP,CAAY,SAAZ,CAAsB,CAAtB,CAAP,CAEA,IAAM,YAAY,MAAZ,CAAmB,eAAiB,IAAjB,CAAwB,IAA3C,CAAN,CAEA,GAAG,IAAI,MAAJ,CAAa,CAAhB,CAAkB,CACjB,IAAI,GAAJ,CAAQ,CAAR,EAAW,OAAX,CAAqB,IAArB,C;AAEA,CACD,CACD,CACD,CACD,CA9BD,C;;;;GAqCA,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,UAA9C,CAA2D,SAAS,OAAT,CAAiB,CAE3E,IAAI,SAAW,QAAQ,QAAvB,CACE,WAAa,SAAS,IAAT,CAAc,YAAd,CADf,CAGA,WAAW,GAAX,CAAe,QAAf,EAAyB,MAAzB,CAAgC,UAAU,CACzC,QAAQ,MAAR,CAAe,UAAf,CAA4B,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,SAA9C,CAAwD,KAAxD,CAA+D,OAA/D,CAA5B,CACA,QAAQ,UAAR,CAAmB,OAAnB,CAA2B,QAAQ,OAAR,CAAgB,eAA3C,CAA4D,CAAC,KAAD,CAA5D,EACA,CAHD,EAIA,CATD,CAYA,CApRD,EAoRG,MApRH","file":"map/jplist/controls/toggle-filters/checkbox-group-filter.js","sourcesContent":["(function(jQuery){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Checkbox group filter control\n\t* @type {Object} \n    * @class CheckboxGroupFilter - group of checkboxes control\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter = {};\t\n\t\n\t/**\n\t* Status object related data\n\t* @param {Array.<string>} pathGroup - list of paths\n\t* @constructor\n\t* @function\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.statusRelatedData = function(pathGroup){\n\t\t\n\t\treturn {\n\t\t\tpathGroup: pathGroup\n\t\t\t,filterType: 'pathGroup'\n\t\t};\n\t};\n\t\n\t/**\n\t* CheckboxGroupFilter control html\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.render = function(control){\n\t\t\n\t\tvar $control = control.$control\n\t\t\t,$checkboxes = $control.find('[data-path]');\n\t\t\n\t\t//in every checkbox: save if it's checked in it's data\n\t\t$checkboxes.each(function(){\t\t\t\n\t\t\tvar $cb = $(this);\t\t\t\n\t\t\t$cb.data('checked', $cb.get(0).checked);\n\t\t});\n\t\t\n\t\t//save vars to the 'data'\n\t\t$control.data('checkboxes', $checkboxes);\n\t};\n\t\n\t/**\n\t* Get deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.getDeepLink = function(control){\n\t\t\n\t\tvar deepLink = ''\n\t\t\t,status\n\t\t\t,isDefault = false\n\t\t\t,value = '';\n\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.CheckboxGroupFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data && $['isArray'](status.data.pathGroup) && status.data.pathGroup.length > 0){\n\t\t\t\n\t\t\tfor(var i=0; i<status.data.pathGroup.length; i++){\n\t\t\t\t\n\t\t\t\tif(value !== ''){\n\t\t\t\t\tvalue += '~';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvalue += status.data.pathGroup[i];\n\t\t\t}\n\t\t\t\n\t\t\t//init deep link\n\t\t\tdeepLink = control.name + '--pathGroup=' + value;\n\t\t}\n\t\t\n\t\treturn deepLink;\n\t};\n\t\n\t/**\n\t* Set deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.getStatusByDeepLink = function(control, propName, propValue){\n\t\t\n\t\tvar isDefault = true\n\t\t\t,status\n\t\t\t,sections;\n\t\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.CheckboxGroupFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data){\n\t\t\n\t\t\tif(propName === 'pathGroup'){\n\t\t\t\t\n\t\t\t\tsections = propValue.split('~');\n\t\t\t\t\n\t\t\t\tif(sections.length > 0){\n\t\t\t\t\t\n\t\t\t\t\tstatus.data.pathGroup = sections;\n\t\t\t\t\t\n\t\t\t\t\t//trigger status event\n\t\t\t\t\t//control.$jplistBox.trigger(control.options.status_event, [status]);\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Get control paths\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.getPaths = function(control, paths){\n\t\n\t\tvar $control = control.$control\n\t\t\t,checkboxes = $control.data('checkboxes')\n\t\t\t,cb\n\t\t\t,dataPath\n\t\t\t,path;\n\n\t\tif(checkboxes){\n\t\t\tfor(var i=0; i<checkboxes.length; i++){\n\n\t\t\t\t//get checkbox\n\t\t\t\tcb = checkboxes.eq(i);\n\n\t\t\t\t//get data-path\n\t\t\t\tdataPath = cb.attr('data-path');\n\n\t\t\t\tif(dataPath){\n\n\t\t\t\t\t//create path object\n\t\t\t\t\tpath = new jQuery.fn.jplist.models.Path(dataPath, 'text');\n\n\t\t\t\t\t//add path to the paths list\n\t\t\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, paths)){\n\t\t\t\t\t\tpaths.push(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t};\n\t\n\t/**\n\t* Get control status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.getStatus = function(isDefault, control){\n\t\n\t\tvar $control = control.$control\n\t\t\t,$checkboxes = $control.data('checkboxes')\n\t\t\t,data\n\t\t\t,pathGroup = []\n\t\t\t,$cb\n\t\t\t,cbData\n\t\t\t,dataPath\n\t\t\t,status\n            ,i;\n\t\t\n\t\tif(isDefault){\n\t\t\t\n\t\t\t//init path group\n\t\t\tfor(i=0; i<$checkboxes.length; i++){\n\t\t\t\t\t\n\t\t\t\t//get checkbox\n\t\t\t\t$cb = $checkboxes.eq(i);\t\n\n\t\t\t\t//get checkbox data\n\t\t\t\tcbData = $cb.data('checked');\n\t\t\t\t\n\t\t\t\tif(!!cbData){\n\t\t\t\t\n\t\t\t\t\t//get data-path\n\t\t\t\t\tdataPath = $cb.attr('data-path');\n\t\t\t\t\t\n\t\t\t\t\tif(dataPath){\n\t\t\t\t\t\tpathGroup.push(dataPath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\n\t\t\t//init path group\n\t\t\tfor(i=0; i<$checkboxes.length; i++){\n\n\t\t\t\t//get checkbox\n\t\t\t\t$cb = $checkboxes.eq(i);\t\t\t\n\t\t\t\t\n\t\t\t\t//get data-path\n\t\t\t\tdataPath = $cb.attr('data-path');\n\t\t\t\t\n\t\t\t\tif(dataPath && $cb.get(0).checked){\n\t\t\t\t\tpathGroup.push(dataPath);\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t}\t\t\n\t\t\n\t\t//init status related data\n\t\tdata = new jQuery.fn.jplist.controls.CheckboxGroupFilter.statusRelatedData(pathGroup);\n\t\t\n\t\t//init status\n\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\n\t\treturn status;\t\t\t\n\t};\n\t\n\t/**\n\t* Set control status\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.setStatus = function(status, control, isCookie){\n\t\t\n\t\tvar path\n\t\t\t,$control = control.$control\n\t\t\t,$cb\n\t\t\t,$checkboxes = $control.data('checkboxes');\n\t\t\t\n\t\tif($checkboxes){\n\t\t\n\t\t\t//reset\tall checkboxes\n\t\t\t$checkboxes.each(function(){\n\t\t\t\t$(this).get(0).checked = false;\n\t\t\t});\n\t\t\n\t\t\tif(status.data && status.data.pathGroup && $['isArray'](status.data.pathGroup) && status.data.pathGroup.length > 0){\n\t\t\t\t\n\t\t\t\tfor(var i=0; i<status.data.pathGroup.length; i++){\n\t\t\t\t\t\n\t\t\t\t\t//get path\n\t\t\t\t\tpath = status.data.pathGroup[i];\n\t\t\t\t\t\n\t\t\t\t\t$cb = $checkboxes.filter('[data-path=\"' + path + '\"]');\n\t\t\t\t\t\n\t\t\t\t\tif($cb.length > 0){\n\t\t\t\t\t\t$cb.get(0).checked = true;\n\t\t\t\t\t\t//$cb.trigger('change');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Init control events\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.initEvents = function(control){\n\t\t\n\t\tvar $control = control.$control\n\t\t\t,checkboxes = $control.data('checkboxes');\n\t\t\t\n\t\tcheckboxes.off('change').change(function(){\n\t\t\tcontrol.events.lastStatus = jQuery.fn.jplist.controls.CheckboxGroupFilter.getStatus(false, control);\n\t\t\tcontrol.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\t\t});\n\t};\n\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}