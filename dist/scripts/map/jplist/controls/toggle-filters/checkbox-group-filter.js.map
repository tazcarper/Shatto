{"version":3,"sources":["map/jplist/controls/toggle-filters/checkbox-group-filter.js"],"names":[],"mappings":"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","file":"map/jplist/controls/toggle-filters/checkbox-group-filter.js","sourcesContent":["(function(jQuery){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Checkbox group filter control\n\t* @type {Object} \n    * @class CheckboxGroupFilter - group of checkboxes control\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter = {};\t\n\t\n\t/**\n\t* Status object related data\n\t* @param {Array.<string>} pathGroup - list of paths\n\t* @constructor\n\t* @function\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.statusRelatedData = function(pathGroup){\n\t\t\n\t\treturn {\n\t\t\tpathGroup: pathGroup\n\t\t\t,filterType: 'pathGroup'\n\t\t};\n\t};\n\t\n\t/**\n\t* CheckboxGroupFilter control html\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.render = function(control){\n\t\t\n\t\tvar $control = control.$control\n\t\t\t,$checkboxes = $control.find('[data-path]');\n\t\t\n\t\t//in every checkbox: save if it's checked in it's data\n\t\t$checkboxes.each(function(){\t\t\t\n\t\t\tvar $cb = $(this);\t\t\t\n\t\t\t$cb.data('checked', $cb.get(0).checked);\n\t\t});\n\t\t\n\t\t//save vars to the 'data'\n\t\t$control.data('checkboxes', $checkboxes);\n\t};\n\t\n\t/**\n\t* Get deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.getDeepLink = function(control){\n\t\t\n\t\tvar deepLink = ''\n\t\t\t,status\n\t\t\t,isDefault = false\n\t\t\t,value = '';\n\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.CheckboxGroupFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data && $['isArray'](status.data.pathGroup) && status.data.pathGroup.length > 0){\n\t\t\t\n\t\t\tfor(var i=0; i<status.data.pathGroup.length; i++){\n\t\t\t\t\n\t\t\t\tif(value !== ''){\n\t\t\t\t\tvalue += '~';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvalue += status.data.pathGroup[i];\n\t\t\t}\n\t\t\t\n\t\t\t//init deep link\n\t\t\tdeepLink = control.name + '--pathGroup=' + value;\n\t\t}\n\t\t\n\t\treturn deepLink;\n\t};\n\t\n\t/**\n\t* Set deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.getStatusByDeepLink = function(control, propName, propValue){\n\t\t\n\t\tvar isDefault = true\n\t\t\t,status\n\t\t\t,sections;\n\t\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.CheckboxGroupFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data){\n\t\t\n\t\t\tif(propName === 'pathGroup'){\n\t\t\t\t\n\t\t\t\tsections = propValue.split('~');\n\t\t\t\t\n\t\t\t\tif(sections.length > 0){\n\t\t\t\t\t\n\t\t\t\t\tstatus.data.pathGroup = sections;\n\t\t\t\t\t\n\t\t\t\t\t//trigger status event\n\t\t\t\t\t//control.$jplistBox.trigger(control.options.status_event, [status]);\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Get control paths\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.getPaths = function(control, paths){\n\t\n\t\tvar $control = control.$control\n\t\t\t,checkboxes = $control.data('checkboxes')\n\t\t\t,cb\n\t\t\t,dataPath\n\t\t\t,path;\n\n\t\tif(checkboxes){\n\t\t\tfor(var i=0; i<checkboxes.length; i++){\n\n\t\t\t\t//get checkbox\n\t\t\t\tcb = checkboxes.eq(i);\n\n\t\t\t\t//get data-path\n\t\t\t\tdataPath = cb.attr('data-path');\n\n\t\t\t\tif(dataPath){\n\n\t\t\t\t\t//create path object\n\t\t\t\t\tpath = new jQuery.fn.jplist.models.Path(dataPath, 'text');\n\n\t\t\t\t\t//add path to the paths list\n\t\t\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, paths)){\n\t\t\t\t\t\tpaths.push(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t};\n\t\n\t/**\n\t* Get control status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.getStatus = function(isDefault, control){\n\t\n\t\tvar $control = control.$control\n\t\t\t,$checkboxes = $control.data('checkboxes')\n\t\t\t,data\n\t\t\t,pathGroup = []\n\t\t\t,$cb\n\t\t\t,cbData\n\t\t\t,dataPath\n\t\t\t,status\n            ,i;\n\t\t\n\t\tif(isDefault){\n\t\t\t\n\t\t\t//init path group\n\t\t\tfor(i=0; i<$checkboxes.length; i++){\n\t\t\t\t\t\n\t\t\t\t//get checkbox\n\t\t\t\t$cb = $checkboxes.eq(i);\t\n\n\t\t\t\t//get checkbox data\n\t\t\t\tcbData = $cb.data('checked');\n\t\t\t\t\n\t\t\t\tif(!!cbData){\n\t\t\t\t\n\t\t\t\t\t//get data-path\n\t\t\t\t\tdataPath = $cb.attr('data-path');\n\t\t\t\t\t\n\t\t\t\t\tif(dataPath){\n\t\t\t\t\t\tpathGroup.push(dataPath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\n\t\t\t//init path group\n\t\t\tfor(i=0; i<$checkboxes.length; i++){\n\n\t\t\t\t//get checkbox\n\t\t\t\t$cb = $checkboxes.eq(i);\t\t\t\n\t\t\t\t\n\t\t\t\t//get data-path\n\t\t\t\tdataPath = $cb.attr('data-path');\n\t\t\t\t\n\t\t\t\tif(dataPath && $cb.get(0).checked){\n\t\t\t\t\tpathGroup.push(dataPath);\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t}\t\t\n\t\t\n\t\t//init status related data\n\t\tdata = new jQuery.fn.jplist.controls.CheckboxGroupFilter.statusRelatedData(pathGroup);\n\t\t\n\t\t//init status\n\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\n\t\treturn status;\t\t\t\n\t};\n\t\n\t/**\n\t* Set control status\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.setStatus = function(status, control, isCookie){\n\t\t\n\t\tvar path\n\t\t\t,$control = control.$control\n\t\t\t,$cb\n\t\t\t,$checkboxes = $control.data('checkboxes');\n\t\t\t\n\t\tif($checkboxes){\n\t\t\n\t\t\t//reset\tall checkboxes\n\t\t\t$checkboxes.each(function(){\n\t\t\t\t$(this).get(0).checked = false;\n\t\t\t});\n\t\t\n\t\t\tif(status.data && status.data.pathGroup && $['isArray'](status.data.pathGroup) && status.data.pathGroup.length > 0){\n\t\t\t\t\n\t\t\t\tfor(var i=0; i<status.data.pathGroup.length; i++){\n\t\t\t\t\t\n\t\t\t\t\t//get path\n\t\t\t\t\tpath = status.data.pathGroup[i];\n\t\t\t\t\t\n\t\t\t\t\t$cb = $checkboxes.filter('[data-path=\"' + path + '\"]');\n\t\t\t\t\t\n\t\t\t\t\tif($cb.length > 0){\n\t\t\t\t\t\t$cb.get(0).checked = true;\n\t\t\t\t\t\t//$cb.trigger('change');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Init control events\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.initEvents = function(control){\n\t\t\n\t\tvar $control = control.$control\n\t\t\t,checkboxes = $control.data('checkboxes');\n\t\t\t\n\t\tcheckboxes.off('change').change(function(){\n\t\t\tcontrol.events.lastStatus = jQuery.fn.jplist.controls.CheckboxGroupFilter.getStatus(false, control);\n\t\t\tcontrol.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\t\t});\n\t};\n\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}