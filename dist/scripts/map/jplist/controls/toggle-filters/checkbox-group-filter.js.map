{"version":3,"sources":["map/jplist/controls/toggle-filters/checkbox-group-filter.js"],"names":[],"mappings":";;AAAA,CAAC,UAAS,MAAT,EAAgB;AAChB;;;;;;;;AADgB;AAShB,QAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,GAAgD,EAAhD;;;;;;;;AATgB,OAiBhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,iBAA9C,GAAkE,UAAS,SAAT,EAAmB;;AAEpF,SAAO;AACN,cAAW,SAAX;AACC,eAAY,WAAZ;GAFF,CAFoF;EAAnB;;;;;;;AAjBlD,OA8BhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,MAA9C,GAAuD,UAAS,OAAT,EAAiB;;AAEvE,MAAI,WAAW,QAAQ,QAAR;MACb,cAAc,SAAS,IAAT,CAAc,aAAd,CAAd;;;AAHqE,aAMvE,CAAY,IAAZ,CAAiB,YAAU;AAC1B,OAAI,MAAM,EAAE,IAAF,CAAN,CADsB;AAE1B,OAAI,IAAJ,CAAS,SAAT,EAAoB,IAAI,GAAJ,CAAQ,CAAR,EAAW,OAAX,CAApB,CAF0B;GAAV,CAAjB;;;AANuE,UAYvE,CAAS,IAAT,CAAc,YAAd,EAA4B,WAA5B,EAZuE;EAAjB;;;;;;;;AA9BvC,OAmDhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,WAA9C,GAA4D,UAAS,OAAT,EAAiB;;AAE5E,MAAI,WAAW,EAAX;MACF,MADF;MAEE,YAAY,KAAZ;MACA,QAAQ,EAAR;;;AAL0E,QAQ5E,GAAS,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,SAA9C,CAAwD,SAAxD,EAAmE,OAAnE,CAAT,CAR4E;;AAU5E,MAAG,OAAO,IAAP,IAAe,EAAE,SAAF,EAAa,OAAO,IAAP,CAAY,SAAZ,CAA5B,IAAsD,OAAO,IAAP,CAAY,SAAZ,CAAsB,MAAtB,GAA+B,CAA/B,EAAiC;;AAEzF,QAAI,IAAI,IAAE,CAAF,EAAK,IAAE,OAAO,IAAP,CAAY,SAAZ,CAAsB,MAAtB,EAA8B,GAA7C,EAAiD;;AAEhD,QAAG,UAAU,EAAV,EAAa;AACf,cAAS,GAAT,CADe;KAAhB;;AAIA,aAAS,OAAO,IAAP,CAAY,SAAZ,CAAsB,CAAtB,CAAT,CANgD;IAAjD;;;AAFyF,WAYzF,GAAW,QAAQ,IAAR,GAAe,cAAf,GAAgC,KAAhC,CAZ8E;GAA1F;;AAeA,SAAO,QAAP,CAzB4E;EAAjB;;;;;;;;;;AAnD5C,OAuFhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,mBAA9C,GAAoE,UAAS,OAAT,EAAkB,QAAlB,EAA4B,SAA5B,EAAsC;;AAEzG,MAAI,YAAY,IAAZ;MACF,MADF;MAEE,QAFF;;;AAFyG,QAOzG,GAAS,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,SAA9C,CAAwD,SAAxD,EAAmE,OAAnE,CAAT,CAPyG;;AASzG,MAAG,OAAO,IAAP,EAAY;;AAEd,OAAG,aAAa,WAAb,EAAyB;;AAE3B,eAAW,UAAU,KAAV,CAAgB,GAAhB,CAAX,CAF2B;;AAI3B,QAAG,SAAS,MAAT,GAAkB,CAAlB,EAAoB;;AAEtB,YAAO,IAAP,CAAY,SAAZ,GAAwB,QAAxB;;;;AAFsB,KAAvB;IAJD;GAFD;;AAgBA,SAAO,MAAP,CAzByG;EAAtC;;;;;;;;AAvFpD,OAyHhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,QAA9C,GAAyD,UAAS,OAAT,EAAkB,KAAlB,EAAwB;;AAEhF,MAAI,WAAW,QAAQ,QAAR;MACb,aAAa,SAAS,IAAT,CAAc,YAAd,CAAb;MACA,EAFF;MAGE,QAHF;MAIE,IAJF,CAFgF;;AAQhF,MAAG,UAAH,EAAc;AACb,QAAI,IAAI,IAAE,CAAF,EAAK,IAAE,WAAW,MAAX,EAAmB,GAAlC,EAAsC;;;AAGrC,SAAK,WAAW,EAAX,CAAc,CAAd,CAAL;;;AAHqC,YAMrC,GAAW,GAAG,IAAH,CAAQ,WAAR,CAAX,CANqC;;AAQrC,QAAG,QAAH,EAAY;;;AAGX,YAAO,IAAI,OAAO,EAAP,CAAU,MAAV,CAAiB,MAAjB,CAAwB,IAAxB,CAA6B,QAAjC,EAA2C,MAA3C,CAAP;;;AAHW,SAMR,CAAC,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,YAA/B,CAA4C,IAA5C,EAAkD,KAAlD,CAAD,EAA0D;AAC5D,YAAM,IAAN,CAAW,IAAX,EAD4D;MAA7D;KAND;IARD;GADD;EARwD;;;;;;;;;AAzHzC,OAgKhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,SAA9C,GAA0D,UAAS,SAAT,EAAoB,OAApB,EAA4B;;AAErF,MAAI,WAAW,QAAQ,QAAR;MACb,cAAc,SAAS,IAAT,CAAc,YAAd,CAAd;MACA,IAFF;MAGE,YAAY,EAAZ;MACA,GAJF;MAKE,MALF;MAME,QANF;MAOE,MAPF;MAQW,CARX,CAFqF;;AAYrF,MAAG,SAAH,EAAa;;;AAGZ,QAAI,IAAE,CAAF,EAAK,IAAE,YAAY,MAAZ,EAAoB,GAA/B,EAAmC;;;AAGlC,UAAM,YAAY,EAAZ,CAAe,CAAf,CAAN;;;AAHkC,UAMlC,GAAS,IAAI,IAAJ,CAAS,SAAT,CAAT,CANkC;;AAQlC,QAAG,CAAC,CAAC,MAAD,EAAQ;;;AAGX,gBAAW,IAAI,IAAJ,CAAS,WAAT,CAAX,CAHW;;AAKX,SAAG,QAAH,EAAY;AACX,gBAAU,IAAV,CAAe,QAAf,EADW;MAAZ;KALD;IARD;GAHD,MAsBI;;;AAGH,QAAI,IAAE,CAAF,EAAK,IAAE,YAAY,MAAZ,EAAoB,GAA/B,EAAmC;;;AAGlC,UAAM,YAAY,EAAZ,CAAe,CAAf,CAAN;;;AAHkC,YAMlC,GAAW,IAAI,IAAJ,CAAS,WAAT,CAAX,CANkC;;AAQlC,QAAG,YAAY,IAAI,GAAJ,CAAQ,CAAR,EAAW,OAAX,EAAmB;AACjC,eAAU,IAAV,CAAe,QAAf,EADiC;KAAlC;IARD;GAzBD;;;AAZqF,MAoDrF,GAAO,IAAI,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,iBAA9C,CAAgE,SAApE,CAAP;;;AApDqF,QAuDrF,GAAS,IAAI,OAAO,EAAP,CAAU,MAAV,CAAiB,MAAjB,CAAwB,MAAxB,CAA+B,QAAQ,IAAR,EAAc,QAAQ,MAAR,EAAgB,QAAQ,IAAR,EAAc,IAA/E,EAAqF,QAAQ,OAAR,EAAiB,QAAQ,QAAR,CAA/G,CAvDqF;;AAyDrF,SAAO,MAAP,CAzDqF;EAA5B;;;;;;;;;AAhK1C,OAmOhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,SAA9C,GAA0D,UAAS,MAAT,EAAiB,OAAjB,EAA0B,QAA1B,EAAmC;;AAE5F,MAAI,IAAJ;MACE,WAAW,QAAQ,QAAR;MACX,GAFF;MAGE,cAAc,SAAS,IAAT,CAAc,YAAd,CAAd,CAL0F;;AAO5F,MAAG,WAAH,EAAe;;;AAGd,eAAY,IAAZ,CAAiB,YAAU;AAC1B,MAAE,IAAF,EAAQ,GAAR,CAAY,CAAZ,EAAe,OAAf,GAAyB,KAAzB,CAD0B;IAAV,CAAjB,CAHc;;AAOd,OAAG,OAAO,IAAP,IAAe,OAAO,IAAP,CAAY,SAAZ,IAAyB,EAAE,SAAF,EAAa,OAAO,IAAP,CAAY,SAAZ,CAArD,IAA+E,OAAO,IAAP,CAAY,SAAZ,CAAsB,MAAtB,GAA+B,CAA/B,EAAiC;;AAElH,SAAI,IAAI,IAAE,CAAF,EAAK,IAAE,OAAO,IAAP,CAAY,SAAZ,CAAsB,MAAtB,EAA8B,GAA7C,EAAiD;;;AAGhD,YAAO,OAAO,IAAP,CAAY,SAAZ,CAAsB,CAAtB,CAAP,CAHgD;;AAKhD,WAAM,YAAY,MAAZ,CAAmB,iBAAiB,IAAjB,GAAwB,IAAxB,CAAzB,CALgD;;AAOhD,SAAG,IAAI,MAAJ,GAAa,CAAb,EAAe;AACjB,UAAI,GAAJ,CAAQ,CAAR,EAAW,OAAX,GAAqB,IAArB;;AADiB,MAAlB;KAPD;IAFD;GAPD;EAPyD;;;;;;;AAnO1C,OAwQhB,CAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,UAA9C,GAA2D,UAAS,OAAT,EAAiB;;AAE3E,MAAI,WAAW,QAAQ,QAAR;MACb,aAAa,SAAS,IAAT,CAAc,YAAd,CAAb,CAHyE;;AAK3E,aAAW,GAAX,CAAe,QAAf,EAAyB,MAAzB,CAAgC,YAAU;AACzC,WAAQ,MAAR,CAAe,UAAf,GAA4B,OAAO,EAAP,CAAU,MAAV,CAAiB,QAAjB,CAA0B,mBAA1B,CAA8C,SAA9C,CAAwD,KAAxD,EAA+D,OAA/D,CAA5B,CADyC;AAEzC,WAAQ,UAAR,CAAmB,OAAnB,CAA2B,QAAQ,OAAR,CAAgB,eAAhB,EAAiC,CAAC,KAAD,CAA5D,EAFyC;GAAV,CAAhC,CAL2E;EAAjB,CAxQ3C;CAAhB,CAAD,CAoRG,MApRH","file":"map/jplist/controls/toggle-filters/checkbox-group-filter.js","sourcesContent":["(function(jQuery){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Checkbox group filter control\n\t* @type {Object} \n    * @class CheckboxGroupFilter - group of checkboxes control\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter = {};\t\n\t\n\t/**\n\t* Status object related data\n\t* @param {Array.<string>} pathGroup - list of paths\n\t* @constructor\n\t* @function\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.statusRelatedData = function(pathGroup){\n\t\t\n\t\treturn {\n\t\t\tpathGroup: pathGroup\n\t\t\t,filterType: 'pathGroup'\n\t\t};\n\t};\n\t\n\t/**\n\t* CheckboxGroupFilter control html\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.render = function(control){\n\t\t\n\t\tvar $control = control.$control\n\t\t\t,$checkboxes = $control.find('[data-path]');\n\t\t\n\t\t//in every checkbox: save if it's checked in it's data\n\t\t$checkboxes.each(function(){\t\t\t\n\t\t\tvar $cb = $(this);\t\t\t\n\t\t\t$cb.data('checked', $cb.get(0).checked);\n\t\t});\n\t\t\n\t\t//save vars to the 'data'\n\t\t$control.data('checkboxes', $checkboxes);\n\t};\n\t\n\t/**\n\t* Get deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.getDeepLink = function(control){\n\t\t\n\t\tvar deepLink = ''\n\t\t\t,status\n\t\t\t,isDefault = false\n\t\t\t,value = '';\n\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.CheckboxGroupFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data && $['isArray'](status.data.pathGroup) && status.data.pathGroup.length > 0){\n\t\t\t\n\t\t\tfor(var i=0; i<status.data.pathGroup.length; i++){\n\t\t\t\t\n\t\t\t\tif(value !== ''){\n\t\t\t\t\tvalue += '~';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvalue += status.data.pathGroup[i];\n\t\t\t}\n\t\t\t\n\t\t\t//init deep link\n\t\t\tdeepLink = control.name + '--pathGroup=' + value;\n\t\t}\n\t\t\n\t\treturn deepLink;\n\t};\n\t\n\t/**\n\t* Set deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.getStatusByDeepLink = function(control, propName, propValue){\n\t\t\n\t\tvar isDefault = true\n\t\t\t,status\n\t\t\t,sections;\n\t\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.CheckboxGroupFilter.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data){\n\t\t\n\t\t\tif(propName === 'pathGroup'){\n\t\t\t\t\n\t\t\t\tsections = propValue.split('~');\n\t\t\t\t\n\t\t\t\tif(sections.length > 0){\n\t\t\t\t\t\n\t\t\t\t\tstatus.data.pathGroup = sections;\n\t\t\t\t\t\n\t\t\t\t\t//trigger status event\n\t\t\t\t\t//control.$jplistBox.trigger(control.options.status_event, [status]);\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Get control paths\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.getPaths = function(control, paths){\n\t\n\t\tvar $control = control.$control\n\t\t\t,checkboxes = $control.data('checkboxes')\n\t\t\t,cb\n\t\t\t,dataPath\n\t\t\t,path;\n\n\t\tif(checkboxes){\n\t\t\tfor(var i=0; i<checkboxes.length; i++){\n\n\t\t\t\t//get checkbox\n\t\t\t\tcb = checkboxes.eq(i);\n\n\t\t\t\t//get data-path\n\t\t\t\tdataPath = cb.attr('data-path');\n\n\t\t\t\tif(dataPath){\n\n\t\t\t\t\t//create path object\n\t\t\t\t\tpath = new jQuery.fn.jplist.models.Path(dataPath, 'text');\n\n\t\t\t\t\t//add path to the paths list\n\t\t\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, paths)){\n\t\t\t\t\t\tpaths.push(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t};\n\t\n\t/**\n\t* Get control status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.getStatus = function(isDefault, control){\n\t\n\t\tvar $control = control.$control\n\t\t\t,$checkboxes = $control.data('checkboxes')\n\t\t\t,data\n\t\t\t,pathGroup = []\n\t\t\t,$cb\n\t\t\t,cbData\n\t\t\t,dataPath\n\t\t\t,status\n            ,i;\n\t\t\n\t\tif(isDefault){\n\t\t\t\n\t\t\t//init path group\n\t\t\tfor(i=0; i<$checkboxes.length; i++){\n\t\t\t\t\t\n\t\t\t\t//get checkbox\n\t\t\t\t$cb = $checkboxes.eq(i);\t\n\n\t\t\t\t//get checkbox data\n\t\t\t\tcbData = $cb.data('checked');\n\t\t\t\t\n\t\t\t\tif(!!cbData){\n\t\t\t\t\n\t\t\t\t\t//get data-path\n\t\t\t\t\tdataPath = $cb.attr('data-path');\n\t\t\t\t\t\n\t\t\t\t\tif(dataPath){\n\t\t\t\t\t\tpathGroup.push(dataPath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\n\t\t\t//init path group\n\t\t\tfor(i=0; i<$checkboxes.length; i++){\n\n\t\t\t\t//get checkbox\n\t\t\t\t$cb = $checkboxes.eq(i);\t\t\t\n\t\t\t\t\n\t\t\t\t//get data-path\n\t\t\t\tdataPath = $cb.attr('data-path');\n\t\t\t\t\n\t\t\t\tif(dataPath && $cb.get(0).checked){\n\t\t\t\t\tpathGroup.push(dataPath);\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t}\t\t\n\t\t\n\t\t//init status related data\n\t\tdata = new jQuery.fn.jplist.controls.CheckboxGroupFilter.statusRelatedData(pathGroup);\n\t\t\n\t\t//init status\n\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\n\t\treturn status;\t\t\t\n\t};\n\t\n\t/**\n\t* Set control status\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.setStatus = function(status, control, isCookie){\n\t\t\n\t\tvar path\n\t\t\t,$control = control.$control\n\t\t\t,$cb\n\t\t\t,$checkboxes = $control.data('checkboxes');\n\t\t\t\n\t\tif($checkboxes){\n\t\t\n\t\t\t//reset\tall checkboxes\n\t\t\t$checkboxes.each(function(){\n\t\t\t\t$(this).get(0).checked = false;\n\t\t\t});\n\t\t\n\t\t\tif(status.data && status.data.pathGroup && $['isArray'](status.data.pathGroup) && status.data.pathGroup.length > 0){\n\t\t\t\t\n\t\t\t\tfor(var i=0; i<status.data.pathGroup.length; i++){\n\t\t\t\t\t\n\t\t\t\t\t//get path\n\t\t\t\t\tpath = status.data.pathGroup[i];\n\t\t\t\t\t\n\t\t\t\t\t$cb = $checkboxes.filter('[data-path=\"' + path + '\"]');\n\t\t\t\t\t\n\t\t\t\t\tif($cb.length > 0){\n\t\t\t\t\t\t$cb.get(0).checked = true;\n\t\t\t\t\t\t//$cb.trigger('change');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Init control events\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.CheckboxGroupFilter\n\t*/\n\tjQuery.fn.jplist.controls.CheckboxGroupFilter.initEvents = function(control){\n\t\t\n\t\tvar $control = control.$control\n\t\t\t,checkboxes = $control.data('checkboxes');\n\t\t\t\n\t\tcheckboxes.off('change').change(function(){\n\t\t\tcontrol.events.lastStatus = jQuery.fn.jplist.controls.CheckboxGroupFilter.getStatus(false, control);\n\t\t\tcontrol.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\t\t});\n\t};\n\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}