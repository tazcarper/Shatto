{"version":3,"sources":["map/jplist/controls/toggle-filters/button-text-filter-group.js"],"names":[],"mappings":"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","file":"map/jplist/controls/toggle-filters/button-text-filter-group.js","sourcesContent":["(function($){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Button text filter group control\n\t* @type {Object} \n    * @class ButtonFilter - Button text filter groups\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup = {};\n\n\t/**\n\t* Render control html\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.render = function(control){\n\n        var $buttons = control.$control.find('[data-button]')\n\t\t\t,$btn;\n\n        //in every button: save its data\n\t\t$buttons.each(function(){\t\n\n\t\t\t//get button\n\t\t\t$btn = $(this);\n\t\t\t\n            $btn.data('selected', false);\n\t\t\t$btn.data('dataPath', $btn.attr('data-path'));\n\t\t\t$btn.data('dataText', $btn.attr('data-text'));\n\t\t});\n\n\t\t//save data\n\t\tcontrol.$control.data('$buttons', $buttons);\n\t};\n\t\n\t/**\n\t* Status object related data (using in communication with controller)\n\t* @param {Array.<Object>} textAndPathsGroup - list of Objects like {text: '', path: '', selected: true/false}\t\n\t* @param {string} ignore - ignore characters regex (defined in javascript in control's options)\n\t* @constructor\n\t* @function\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.statusRelatedData = function(textAndPathsGroup, ignore){\n\t\t\t\t\n\t\treturn {\n\t\t\ttextAndPathsGroup: textAndPathsGroup\n\t\t\t,ignore: ignore\n\t\t\t,filterType: 'textFilterPathGroup' //used in controller to define filter type\n\t\t};\n\t};\n\t\n\t/**\n\t* Get deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.getDeepLink = function(control){\n\n        return '';\n\t};\n\t\n\t/**\n\t* Set deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.getStatusByDeepLink = function(control, propName, propValue){\n\t\t\n\t\treturn null;\n\t};\n\t\n\t/**\n\t* Get control paths\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.getPaths = function(control, paths){\n\n        var $control = control.$control\n\t\t\t,$buttons = $control.data('$buttons')\n\t\t\t,$button\n\t\t\t,dataPath\n\t\t\t,path;\n\n\t\tif($buttons){\n\t\t\tfor(var i=0; i<$buttons.length; i++){\n\n\t\t\t\t//get checkbox\n\t\t\t\t$button = $buttons.eq(i);\n\n\t\t\t\t//get data-path\n\t\t\t\tdataPath = $button.attr('data-path');\n\n\t\t\t\tif(dataPath){\n\n\t\t\t\t\t//create path object\n\t\t\t\t\tpath = new jQuery.fn.jplist.models.Path(dataPath, 'text');\n\n\t\t\t\t\t//add path to the paths list\n\t\t\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, paths)){\n\t\t\t\t\t\tpaths.push(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Get control status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.getStatus = function(isDefault, control){\n\n        var $control = control.$control\n\t\t\t,$buttons = $control.data('$buttons')\n\t\t\t,data\n\t\t\t,textAndPathsGroup = []\n\t\t\t,$button\n\t\t\t,status\n\t\t\t,ignore = ''\n            ,i\n            ,selected;\n\n\t\tif(control.controlTypeOptions && control.controlTypeOptions.ignore){\n\t\t \n\t\t\t//get ignore characters\n\t\t\tignore = control.controlTypeOptions.ignore;\n\t\t}\n\t\t\n\t\tif(isDefault){\n\n\t\t\t//init path group\n\t\t\tfor(i=0; i<$buttons.length; i++){\n\n\t\t\t\t//get button\n\t\t\t\t$button = $buttons.eq(i);\n\n\t\t\t\t//get button data\n\t\t\t\tselected = $button.data('selected');\n\n\t\t\t\ttextAndPathsGroup.push({\n\t\t\t\t\tselected: !!selected\n\t\t\t\t\t,text: $button.data('dataText')\n\t\t\t\t\t,path: $button.data('dataPath')\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse{\n\n\t\t\t//init path group\n\t\t\tfor(i=0; i<$buttons.length; i++){\n\n\t\t\t\t//get button\n\t\t\t\t$button = $buttons.eq(i);\n\n                //get button data\n\t\t\t\tselected = $button.data('selected');\t\t\t\t\n\t\t\t\t\n\t\t\t\ttextAndPathsGroup.push({\n\t\t\t\t\tselected: !!selected\n\t\t\t\t\t,text: $button.data('dataText')\n\t\t\t\t\t,path: $button.data('dataPath')\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\t//init status related data\n\t\tdata = new jQuery.fn.jplist.controls.ButtonTextFilterGroup.statusRelatedData(textAndPathsGroup, ignore);\n\t\t\n\t\t//init status\n\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Set control status\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.setStatus = function(status, control, isCookie){\n\n        var textAndPath\n\t\t\t,$control = control.$control\n\t\t\t,$button\n\t\t\t,$buttons = $control.data('$buttons');\n\n\t\tif($buttons){\n\t\t\t\n\t\t\t//reset\tall buttons\n\t\t\t$buttons.each(function(){\n                $(this).removeClass('selected');\n\t\t\t});\n\n\t\t\tif(status.data && status.data.textAndPathsGroup && $['isArray'](status.data.textAndPathsGroup) && status.data.textAndPathsGroup.length > 0){\n\n\t\t\t\tfor(var i=0; i<status.data.textAndPathsGroup.length; i++){\n\n\t\t\t\t\t//get \"text and path\" object\n\t\t\t\t\ttextAndPath = status.data.textAndPathsGroup[i];\n\t\t\t\t\t\n\t\t\t\t\t$button = $buttons.filter('[data-path=\"' + textAndPath.path + '\"][data-text=\"' + textAndPath.text + '\"]');\n\t\t\t\t\t\n\t\t\t\t\tif($button.length > 0){\n\t\t\t\t\t\n\t\t\t\t\t\t//update button data\n\t\t\t\t\t\t$button.data('selected', textAndPath.selected);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(textAndPath.selected){\n\t\t\t\t\t\t\t$button.addClass('selected');\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t$button.removeClass('selected');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Init control events\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.initEvents = function(control){\n\t\t\n\t\tvar selected\n            ,$buttons = control.$control.data('$buttons');\n\n        if($buttons){\n\n            $buttons.off('click').on('click', function(){\n\t\t\t\t\n                var $button = $(this);\n\t\t\t\t\n                //get selected value\n\t\t\t    selected = $button.data('selected');\n\n                //toggle value\n\t\t\t    $button.data('selected', !selected);\n\t\t\t\t\n                control.events.lastStatus = jQuery.fn.jplist.controls.ButtonTextFilterGroup.getStatus(false, control);\n\t\t\t    control.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\n            });\n        }\n\t};\n\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}