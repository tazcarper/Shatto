{"version":3,"sources":["map/jplist/controls/toggle-filters/button-text-filter-group.js"],"names":[],"mappings":"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","file":"map/jplist/controls/toggle-filters/button-text-filter-group.js","sourcesContent":["(function($){\n\t'use strict';\t\t\n\t\n\t/** \n\t* Button text filter group control\n\t* @type {Object} \n    * @class ButtonFilter - Button text filter groups\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup = {};\n\n\t/**\n\t* Render control html\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.render = function(control){\n\n        var $buttons = control.$control.find('[data-button]')\n\t\t\t,$btn;\n\n        //in every button: save its data\n\t\t$buttons.each(function(){\t\n\n\t\t\t//get button\n\t\t\t$btn = $(this);\n\t\t\t\n            $btn.data('selected', false);\n\t\t\t$btn.data('dataPath', $btn.attr('data-path'));\n\t\t\t$btn.data('dataText', $btn.attr('data-text'));\n\t\t});\n\n\t\t//save data\n\t\tcontrol.$control.data('$buttons', $buttons);\n\t};\n\t\n\t/**\n\t* Status object related data (using in communication with controller)\n\t* @param {Array.<Object>} textAndPathsGroup - list of Objects like {text: '', path: '', selected: true/false}\t\n\t* @param {string} ignore - ignore characters regex (defined in javascript in control's options)\n\t* @constructor\n\t* @function\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.statusRelatedData = function(textAndPathsGroup, ignore){\n\t\t\t\t\n\t\treturn {\n\t\t\ttextAndPathsGroup: textAndPathsGroup\n\t\t\t,ignore: ignore\n\t\t\t,filterType: 'textFilterPathGroup' //used in controller to define filter type\n\t\t};\n\t};\n\t\n\t/**\n\t* Get deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.getDeepLink = function(control){\n\n        return '';\n\t};\n\t\n\t/**\n\t* Set deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.getStatusByDeepLink = function(control, propName, propValue){\n\t\t\n\t\treturn null;\n\t};\n\t\n\t/**\n\t* Get control paths\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {Array.<jQuery.fn.jplist.models.Path>} paths\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.getPaths = function(control, paths){\n\n        var $control = control.$control\n\t\t\t,$buttons = $control.data('$buttons')\n\t\t\t,$button\n\t\t\t,dataPath\n\t\t\t,path;\n\n\t\tif($buttons){\n\t\t\tfor(var i=0; i<$buttons.length; i++){\n\n\t\t\t\t//get checkbox\n\t\t\t\t$button = $buttons.eq(i);\n\n\t\t\t\t//get data-path\n\t\t\t\tdataPath = $button.attr('data-path');\n\n\t\t\t\tif(dataPath){\n\n\t\t\t\t\t//create path object\n\t\t\t\t\tpath = new jQuery.fn.jplist.models.Path(dataPath, 'text');\n\n\t\t\t\t\t//add path to the paths list\n\t\t\t\t\tif(!jQuery.fn.jplist.services.Path.isPathInList(path, paths)){\n\t\t\t\t\t\tpaths.push(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Get control status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.getStatus = function(isDefault, control){\n\n        var $control = control.$control\n\t\t\t,$buttons = $control.data('$buttons')\n\t\t\t,data\n\t\t\t,textAndPathsGroup = []\n\t\t\t,$button\n\t\t\t,status\n\t\t\t,ignore = ''\n            ,i\n            ,selected;\n\n\t\tif(control.controlTypeOptions && control.controlTypeOptions.ignore){\n\t\t \n\t\t\t//get ignore characters\n\t\t\tignore = control.controlTypeOptions.ignore;\n\t\t}\n\t\t\n\t\tif(isDefault){\n\n\t\t\t//init path group\n\t\t\tfor(i=0; i<$buttons.length; i++){\n\n\t\t\t\t//get button\n\t\t\t\t$button = $buttons.eq(i);\n\n\t\t\t\t//get button data\n\t\t\t\tselected = $button.data('selected');\n\n\t\t\t\ttextAndPathsGroup.push({\n\t\t\t\t\tselected: !!selected\n\t\t\t\t\t,text: $button.data('dataText')\n\t\t\t\t\t,path: $button.data('dataPath')\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse{\n\n\t\t\t//init path group\n\t\t\tfor(i=0; i<$buttons.length; i++){\n\n\t\t\t\t//get button\n\t\t\t\t$button = $buttons.eq(i);\n\n                //get button data\n\t\t\t\tselected = $button.data('selected');\t\t\t\t\n\t\t\t\t\n\t\t\t\ttextAndPathsGroup.push({\n\t\t\t\t\tselected: !!selected\n\t\t\t\t\t,text: $button.data('dataText')\n\t\t\t\t\t,path: $button.data('dataPath')\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\t//init status related data\n\t\tdata = new jQuery.fn.jplist.controls.ButtonTextFilterGroup.statusRelatedData(textAndPathsGroup, ignore);\n\t\t\n\t\t//init status\n\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Set control status\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.setStatus = function(status, control, isCookie){\n\n        var textAndPath\n\t\t\t,$control = control.$control\n\t\t\t,$button\n\t\t\t,$buttons = $control.data('$buttons');\n\n\t\tif($buttons){\n\t\t\t\n\t\t\t//reset\tall buttons\n\t\t\t$buttons.each(function(){\n                $(this).removeClass('selected');\n\t\t\t});\n\n\t\t\tif(status.data && status.data.textAndPathsGroup && $['isArray'](status.data.textAndPathsGroup) && status.data.textAndPathsGroup.length > 0){\n\n\t\t\t\tfor(var i=0; i<status.data.textAndPathsGroup.length; i++){\n\n\t\t\t\t\t//get \"text and path\" object\n\t\t\t\t\ttextAndPath = status.data.textAndPathsGroup[i];\n\t\t\t\t\t\n\t\t\t\t\t$button = $buttons.filter('[data-path=\"' + textAndPath.path + '\"][data-text=\"' + textAndPath.text + '\"]');\n\t\t\t\t\t\n\t\t\t\t\tif($button.length > 0){\n\t\t\t\t\t\n\t\t\t\t\t\t//update button data\n\t\t\t\t\t\t$button.data('selected', textAndPath.selected);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(textAndPath.selected){\n\t\t\t\t\t\t\t$button.addClass('selected');\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t$button.removeClass('selected');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Init control events\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.ButtonTextFilterGroup\n\t*/\n\tjQuery.fn.jplist.controls.ButtonTextFilterGroup.initEvents = function(control){\n\t\t\n\t\tvar selected\n            ,$buttons = control.$control.data('$buttons');\n\n        if($buttons){\n\n            $buttons.off('click').on('click', function(){\n\t\t\t\t\n                var $button = $(this);\n\t\t\t\t\n                //get selected value\n\t\t\t    selected = $button.data('selected');\n\n                //toggle value\n\t\t\t    $button.data('selected', !selected);\n\t\t\t\t\n                control.events.lastStatus = jQuery.fn.jplist.controls.ButtonTextFilterGroup.getStatus(false, control);\n\t\t\t    control.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\n            });\n        }\n\t};\n\t\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}