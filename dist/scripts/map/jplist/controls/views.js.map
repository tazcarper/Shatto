{"version":3,"sources":["map/jplist/controls/views.js"],"names":[],"mappings":"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","file":"map/jplist/controls/views.js","sourcesContent":["(function($){\n\t'use strict';\t\t\n\t\n\t/** \n\t* List/grid view control\n\t* @type {Object} \n    * @class Views control - used for grid/list view\n    * @memberOf jQuery.fn.jplist\n\t*/\n\tjQuery.fn.jplist.controls.Views = {};\n\t\n\t/**\n\t* Status object related data (using in communication with controller)\n\t* @param {boolean} isGrid - does control have class 'grid'\n\t* @constructor\n\t* @function\n\t*/\n\tjQuery.fn.jplist.controls.Views.statusRelatedData = function(isGrid){\n\t\t\n\t\treturn {\n\t\t\tisGrid: isGrid\n\t\t};\n\t};\n\t\n\t/**\n\t* Render control html\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.Views\n\t*/\n\tjQuery.fn.jplist.controls.Views.render = function(control){\n\t\t\n\t\tvar listBtn\n\t\t\t,gridBtn\n            ,defaultGrid = 'list-view';\n\n        if(control.$jplistBox.hasClass('grid')){\n            defaultGrid = 'grid-view';\n        }\n\n\t\t//find buttons\n\t\tlistBtn = control.$control.find('.list-view');\n\t\tgridBtn = control.$control.find('.grid-view');\n\t\t\n\t\t//add to the data\n\t\tcontrol.$control.data('list-view-btn', listBtn);\n\t\tcontrol.$control.data('grid-view-btn', gridBtn);\n        control.$control.data('default-grid', defaultGrid);\n\t};\n\t\n\t/**\n\t* Get deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {string} deep link\n\t* @memberOf jQuery.fn.jplist.controls.Views\n\t*/\n\tjQuery.fn.jplist.controls.Views.getDeepLink = function(control){\n\t\t\n\t\tvar deepLink = ''\n\t\t\t,status\n\t\t\t,isDefault = false;\n\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.Views.getStatus(isDefault, control);\n\n\t\tif(status.data && status.data.isGrid){\n\n\t\t\t//init deep link\n\t\t\tdeepLink = control.name + '--isGrid=true';\n\t\t}\n\t\t\n\t\treturn deepLink;\n\t};\n\t\n\t/**\n\t* Set deep link\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {string} propName - deep link property name\n\t* @param {string} propValue - deep link property value\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.Views\n\t*/\n\tjQuery.fn.jplist.controls.Views.getStatusByDeepLink = function(control, propName, propValue){\n\t\t\n\t\tvar isDefault = true\n\t\t\t,status;\n\t\t\t\n\t\t//get status\n\t\tstatus = jQuery.fn.jplist.controls.Views.getStatus(isDefault, control);\n\t\t\n\t\tif(status.data){\n\t\t\n\t\t\tif(propName === 'isGrid'){\n\t\t\t\t\n\t\t\t\t//set current page\n\t\t\t\tstatus.data.isGrid = true;\n\t\t\t\t\n\t\t\t\t//trigger status event\n\t\t\t\t//control.$jplistBox.trigger(control.options.status_event, [status]);\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn status;\n\t};\n\t\n\t/**\n\t* Get control status\n\t* @param {boolean} isDefault - if true, get default (initial) control status; else - get current control status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @return {jQuery.fn.jplist.models.Status}\n\t* @memberOf jQuery.fn.jplist.controls.Views\n\t*/\n\tjQuery.fn.jplist.controls.Views.getStatus = function(isDefault, control){\n\t\t\n\t\tvar data\n\t\t\t,status\n            ,defaultGrid\n            ,isGrid = false;\n\t\t\t\t\t\n        if(isDefault){\n            defaultGrid = control.$control.data('default-grid');\n\n            if(defaultGrid && defaultGrid === 'grid-view'){\n\n                //create status related data\n\t\t        isGrid = true;\n            }\n        }\n        else{\n            isGrid = control.$jplistBox.hasClass('grid');\n        }\n\t\t\n\t\t//create status related data\n\t\tdata = new jQuery.fn.jplist.controls.Views.statusRelatedData(isGrid);\n\t\t\n\t\t//create status\n\t\tstatus = new jQuery.fn.jplist.models.Status(control.name, control.action, control.type, data, control.cookies, control.category);\n\t\t\n\t\treturn status;\t\t\t\n\t};\n\t\n\t/**\n\t* Set control status\n\t* @param {jQuery.fn.jplist.models.Status} status\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @param {boolean} isCookie - is status restored from cookies\n\t* @memberOf jQuery.fn.jplist.controls.Views\n\t*/\n\tjQuery.fn.jplist.controls.Views.setStatus = function(status, control, isCookie){\n\t\n\t\tvar isGrid;\t\t\n\t\tif(status.data){\n\t\t\tif(!control.cookies && isCookie){\n\t\t\t\n\t\t\t\t//change class\n\t\t\t\tcontrol.$jplistBox.removeClass('grid');\n\t\t\t\tstatus.data.isGrid = false;\n\t\t\t\t\n\t\t\t\t//force ask status event\t\n\t\t\t\tcontrol.$jplistBox.trigger(control.options.status_event, [status]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//should control have class 'grid'?\n\t\t\t\tisGrid = status.data.isGrid;\n\t\t\t\t\n\t\t\t\tif(isGrid){\n\t\t\t\t\tcontrol.$jplistBox.addClass('grid');\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tcontrol.$jplistBox.removeClass('grid');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t* Init control events\n\t* @param {jQuery.fn.jplist.view.PanelControl} control\n\t* @memberOf jQuery.fn.jplist.controls.Views\n\t*/\n\tjQuery.fn.jplist.controls.Views.initEvents = function(control){\n\t\n\t\tvar $listBtn\n\t\t\t,$gridBtn;\n\t\t\t\n\t\t//find buttons\n\t\t$listBtn = control.$control.data('list-view-btn');\n\t\t$gridBtn = control.$control.data('grid-view-btn');\n\t\t\n\t\tif($listBtn.length > 0){\n\t\t\t$listBtn.off('click').on('click', function(){\n\t\t\t\n\t\t\t\t//change class\n\t\t\t\tcontrol.$jplistBox.removeClass('grid');\n\t\t\t\t\n\t\t\t\t//update last status\n\t\t\t\tcontrol.events.lastStatus = jQuery.fn.jplist.controls.Views.getStatus(false, control);\n\t\t\t\n\t\t\t\t//force ask event\t\t\t\n\t\t\t\tcontrol.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\t\t\t});\n\t\t}\n\t\t\n\t\tif($gridBtn.length > 0){\n\t\t\t$gridBtn.off('click').on('click', function(){\n\t\t\t\n\t\t\t\t//change class\n\t\t\t\tcontrol.$jplistBox.addClass('grid');\n\t\t\t\t\n\t\t\t\t//update last status\n\t\t\t\tcontrol.events.lastStatus = jQuery.fn.jplist.controls.Views.getStatus(false, control);\n\t\t\t\t\n\t\t\t\t//force ask event\t\t\t\n\t\t\t\tcontrol.$jplistBox.trigger(control.options.force_ask_event, [false]);\n\t\t\t});\n\t\t}\n\t};\n\t\n})(jQuery);\n\n"],"sourceRoot":"/source/"}