{"version":3,"sources":["plugins/framework/bootstrap.js"],"names":[],"mappings":"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","file":"plugins/framework/bootstrap.js","sourcesContent":["/*!\n * FormValidation (http://formvalidation.io)\n * The best jQuery plugin to validate form fields. Support Bootstrap, Foundation, Pure, SemanticUI, UIKit and custom frameworks\n *\n * @version     v0.7.1, built on 2016-02-01 12:00:57 AM\n * @author      https://twitter.com/formvalidation\n * @copyright   (c) 2013 - 2016 Nguyen Huu Phuoc\n * @license     http://formvalidation.io/license/\n */\n/**\n * This class supports validating Bootstrap form (http://getbootstrap.com/)\n */\n(function($) {\n    FormValidation.Framework.Bootstrap = function(element, options, namespace) {\n        options = $.extend(true, {\n            button: {\n                selector: '[type=\"submit\"]:not([formnovalidate])',\n                // The class of disabled button\n                // http://getbootstrap.com/css/#buttons-disabled\n                disabled: 'disabled'\n            },\n            err: {\n                // http://getbootstrap.com/css/#forms-help-text\n                clazz: 'help-block',\n                parent: '^(.*)col-(xs|sm|md|lg)-(offset-){0,1}[0-9]+(.*)$'\n            },\n            // This feature requires Bootstrap v3.1.0 or later (http://getbootstrap.com/css/#forms-control-validation).\n            // Since Bootstrap doesn't provide any methods to know its version, this option cannot be on/off automatically.\n            // In other word, to use this feature you have to upgrade your Bootstrap to v3.1.0 or later.\n            //\n            // Examples:\n            // - Use Glyphicons icons:\n            //  icon: {\n            //      valid: 'glyphicon glyphicon-ok',\n            //      invalid: 'glyphicon glyphicon-remove',\n            //      validating: 'glyphicon glyphicon-refresh',\n            //      feedback: 'form-control-feedback'\n            //  }\n            // - Use FontAwesome icons:\n            //  icon: {\n            //      valid: 'fa fa-check',\n            //      invalid: 'fa fa-times',\n            //      validating: 'fa fa-refresh',\n            //      feedback: 'form-control-feedback'\n            //  }\n            icon: {\n                valid: null,\n                invalid: null,\n                validating: null,\n                feedback: 'form-control-feedback'\n            },\n            row: {\n                // By default, each field is placed inside the <div class=\"form-group\"></div>\n                // http://getbootstrap.com/css/#forms\n                selector: '.form-group',\n                valid: 'has-success',\n                invalid: 'has-error',\n                feedback: 'has-feedback'\n            }\n        }, options);\n\n        FormValidation.Base.apply(this, [element, options, namespace]);\n    };\n\n    FormValidation.Framework.Bootstrap.prototype = $.extend({}, FormValidation.Base.prototype, {\n        /**\n         * Specific framework might need to adjust the icon position\n         *\n         * @param {jQuery} $field The field element\n         * @param {jQuery} $icon The icon element\n         */\n        _fixIcon: function($field, $icon) {\n            var ns      = this._namespace,\n                type    = $field.attr('type'),\n                field   = $field.attr('data-' + ns + '-field'),\n                row     = this.options.fields[field].row || this.options.row.selector,\n                $parent = $field.closest(row);\n\n            // Place it after the container of checkbox/radio\n            // so when clicking the icon, it doesn't effect to the checkbox/radio element\n            if ('checkbox' === type || 'radio' === type) {\n                var $fieldParent = $field.parent();\n                if ($fieldParent.hasClass(type)) {\n                    $icon.insertAfter($fieldParent);\n                } else if ($fieldParent.parent().hasClass(type)) {\n                    $icon.insertAfter($fieldParent.parent());\n                }\n            }\n\n            // The feedback icon does not render correctly if there is no label\n            // https://github.com/twbs/bootstrap/issues/12873\n            if ($parent.find('label').length === 0) {\n                $icon.addClass('fv-icon-no-label');\n            }\n            // Fix feedback icons in input-group\n            if ($parent.find('.input-group').length !== 0) {\n                $icon.addClass('fv-bootstrap-icon-input-group')\n                     .insertAfter($parent.find('.input-group').eq(0));\n            }\n        },\n\n        /**\n         * Create a tooltip or popover\n         * It will be shown when focusing on the field\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} message The message\n         * @param {String} type Can be 'tooltip' or 'popover'\n         */\n        _createTooltip: function($field, message, type) {\n            var ns    = this._namespace,\n                $icon = $field.data(ns + '.icon');\n            if ($icon) {\n                switch (type) {\n                    case 'popover':\n                        $icon\n                            .css({\n                                'cursor': 'pointer',\n                                'pointer-events': 'auto'\n                            })\n                            .popover('destroy')\n                            .popover({\n                                container: 'body',\n                                content: message,\n                                html: true,\n                                placement: 'auto top',\n                                trigger: 'hover click'\n                            });\n                        break;\n\n                    case 'tooltip':\n                    /* falls through */\n                    default:\n                        $icon\n                            .css({\n                                'cursor': 'pointer',\n                                'pointer-events': 'auto'\n                            })\n                            .tooltip('destroy')\n                            .tooltip({\n                                container: 'body',\n                                html: true,\n                                placement: 'auto top',\n                                title: message\n                            });\n                        break;\n                }\n            }\n        },\n\n        /**\n         * Destroy the tooltip or popover\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} type Can be 'tooltip' or 'popover'\n         */\n        _destroyTooltip: function($field, type) {\n            var ns    = this._namespace,\n                $icon = $field.data(ns + '.icon');\n            if ($icon) {\n                switch (type) {\n                    case 'popover':\n                        $icon\n                            .css({\n                                'cursor': '',\n                                'pointer-events': 'none'\n                            })\n                            .popover('destroy');\n                        break;\n\n                    case 'tooltip':\n                    /* falls through */\n                    default:\n                        $icon\n                            .css({\n                                'cursor': '',\n                                'pointer-events': 'none'\n                            })\n                            .tooltip('destroy');\n                        break;\n                }\n            }\n        },\n\n        /**\n         * Hide a tooltip or popover\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} type Can be 'tooltip' or 'popover'\n         */\n        _hideTooltip: function($field, type) {\n            var ns    = this._namespace,\n                $icon = $field.data(ns + '.icon');\n            if ($icon) {\n                switch (type) {\n                    case 'popover':\n                        $icon.popover('hide');\n                        break;\n\n                    case 'tooltip':\n                    /* falls through */\n                    default:\n                        $icon.tooltip('hide');\n                        break;\n                }\n            }\n        },\n\n        /**\n         * Show a tooltip or popover\n         *\n         * @param {jQuery} $field The field element\n         * @param {String} type Can be 'tooltip' or 'popover'\n         */\n        _showTooltip: function($field, type) {\n            var ns    = this._namespace,\n                $icon = $field.data(ns + '.icon');\n            if ($icon) {\n                switch (type) {\n                    case 'popover':\n                        $icon.popover('show');\n                        break;\n\n                    case 'tooltip':\n                    /* falls through */\n                    default:\n                        $icon.tooltip('show');\n                        break;\n                }\n            }\n        }\n    });\n\n    /**\n     * Plugin definition\n     * Support backward\n     * @deprecated It will be removed soon. Instead of using $(form).bootstrapValidator(), use\n     *  $(form).formValidation({\n     *      framework: 'bootstrap'  // It's equivalent to use data-fv-framework=\"bootstrap\" for <form>\n     *  });\n     */\n    $.fn.bootstrapValidator = function(option) {\n        var params = arguments;\n        return this.each(function() {\n            var $this   = $(this),\n                data    = $this.data('formValidation') || $this.data('bootstrapValidator'),\n                options = 'object' === typeof option && option;\n            if (!data) {\n                data = new FormValidation.Framework.Bootstrap(this, $.extend({}, {\n                    events: {\n                        // Support backward\n                        formInit: 'init.form.bv',\n                        formPreValidate: 'prevalidate.form.bv',\n                        formError: 'error.form.bv',\n                        formSuccess: 'success.form.bv',\n                        fieldAdded: 'added.field.bv',\n                        fieldRemoved: 'removed.field.bv',\n                        fieldInit: 'init.field.bv',\n                        fieldError: 'error.field.bv',\n                        fieldSuccess: 'success.field.bv',\n                        fieldStatus: 'status.field.bv',\n                        localeChanged: 'changed.locale.bv',\n                        validatorError: 'error.validator.bv',\n                        validatorSuccess: 'success.validator.bv'\n                    }\n                }, options), 'bv');\n\n                $this.addClass('fv-form-bootstrap')\n                     .data('formValidation', data)\n                     .data('bootstrapValidator', data);\n            }\n\n            // Allow to call plugin method\n            if ('string' === typeof option) {\n                data[option].apply(data, Array.prototype.slice.call(params, 1));\n            }\n        });\n    };\n\n    $.fn.bootstrapValidator.Constructor = FormValidation.Framework.Bootstrap;\n}(jQuery));\n"],"sourceRoot":"/source/"}